)]}'
{"version":3,"file":"/packages/mjn:famous.js","sources":["mjn:famous/src/functionPrototypeBind.js","mjn:famous/src/classList.js","mjn:famous/src/requestAnimationFrame.js","mjn:famous/src/famous-global.js","mjn:famous/src/export.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+B;AACA,gD;AACA,yC;AACA,sF;AACA,wG;AACA,S;;AAEA,8D;AACA,wB;AACA,8B;AACA,8B;AACA,8D;AACA,sB;AACA,wB;AACA,qE;AACA,U;;AAEA,wC;AACA,sC;;AAEA,sB;AACA,M;AACA,C;;;;;;;;;;;;;;;;;;;;ACrBA,E;AACA,qE;AACA,a;AACA,E;AACA,kC;AACA,iB;AACA,0D;AACA,G;;AAEA,wC;;AAEA,kF;;AAEA,uF;;AAEA,kB;;AAEA,a;;AAEA,G;AACA,8B;AACA,0B;AACA,+D;AACA,kB;AACA,oD;AACA,wC;AACA,E;AACA,6D;AACA,K;AACA,U;AACA,sB;AACA,G;AACA,wB;AACA,uC;AACA,a;AACA,I;AACA,G;AACA,Y;AACA,E;AACA,mE;AACA,qC;AACA,mB;AACA,iC;AACA,yB;AACA,E;AACA,wD;AACA,qB;AACA,mB;AACA,kB;AACA,kD;AACA,K;AACA,G;AACA,yB;AACA,mB;AACA,6B;AACA,4C;AACA,K;AACA,G;AACA,2C;AACA,E;AACA,gC;AACA,K;AACA,kD;AACA,gE;AACA,U;AACA,yB;AACA,G;AACA,wB;AACA,yB;AACA,G;AACA,uC;AACA,oC;AACA,I;AACA,E;AACA,6C;AACA,kC;AACA,6B;AACA,E;AACA,C;AACA,kF;AACA,+D;AACA,oC;AACA,oC;AACA,wB;AACA,E;AACA,4C;AACA,a;AACA,kD;AACA,E;AACA,uC;AACA,a;AACA,iD;AACA,mB;AACA,0B;AACA,E;AACA,E;AACA,0C;AACA,a;AACA,gD;AACA,oB;AACA,wB;AACA,0B;AACA,E;AACA,E;AACA,0C;AACA,a;AACA,iD;AACA,kB;AACA,S;AACA,qB;AACA,E;AACA,E;AACA,uC;AACA,uB;AACA,E;;AAEA,4B;AACA,0B;AACA,wB;AACA,oB;AACA,sB;AACA,G;AACA,M;AACA,wE;AACA,uD;AACA,kC;AACA,wC;AACA,yE;AACA,G;AACA,E;AACA,gD;AACA,+D;AACA,C;;AAEA,S;;AAEA,C;;;;;;;;;;;;;;;;;;;ACzIA,2C;AACA,6E;;AAEA,gE;AACA,wC;AACA,wC;AACA,wC;AACA,wC;AACA,+B;AACA,yC;AACA,4B;AACA,gB;AACA,G;;;;;;;;;;;;;;;;;;;ACZA,oyB;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;AAEA,yC;AACA,6C;AACA,qD;AACA,uC;AACA,8D;;AAEA,uB;AACA,mE;;AAEA,mC;AACA,uD;AACA,C;;AAEA,kE;AACA,sF;AACA,oC;AACA,gF;AACA,E;;AAEA,G;AACA,yE;AACA,8E;AACA,2D;AACA,E;AACA,iB;AACA,e;AACA,W;AACA,oE;AACA,G;AACA,6B;AACA,+B;AACA,sD;;AAEA,kC;AACA,2C;AACA,iD;;AAEA,mD;AACA,kC;;AAEA,yB;AACA,mC;AACA,sC;AACA,mB;AACA,0B;AACA,yB;AACA,wB;AACA,M;;AAEA,+C;AACA,sD;AACA,kB;;AAEA,C;;AAEA,e;AACA,0D;AACA,2B;AACA,E;;AAEA,G;AACA,iD;AACA,E;AACA,c;AACA,E;AACA,wC;AACA,oF;AACA,G;AACA,2C;AACA,+B;AACA,E;;AAEA,G;AACA,4D;AACA,E;AACA,kB;AACA,E;AACA,oE;AACA,G;AACA,yD;AACA,6C;AACA,+B;AACA,uC;AACA,E;;AAEA,G;AACA,kC;AACA,E;AACA,kB;AACA,E;AACA,0D;AACA,G;AACA,gD;AACA,sB;AACA,E;;AAEA,G;AACA,kC;AACA,E;AACA,kB;AACA,E;AACA,kG;AACA,G;AACA,oD;AACA,sD;AACA,4B;AACA,4B;AACA,E;;AAEA,G;AACA,yD;AACA,E;AACA,W;AACA,iB;AACA,gE;AACA,G;AACA,+D;AACA,4B;AACA,mG;AACA,6F;AACA,0F;AACA,uF;AACA,oF;AACA,K;AACA,mD;AACA,4C;AACA,qD;AACA,wC;AACA,K;;AAEA,yC;AACA,E;;AAEA,G;AACA,qD;AACA,E;AACA,yB;AACA,+C;AACA,G;AACA,8D;AACA,wC;AACA,E;;AAEA,G;AACA,qD;AACA,E;AACA,yB;AACA,wC;AACA,6E;AACA,iF;AACA,G;AACA,+F;AACA,yE;AACA,E;;AAEA,G;AACA,uD;AACA,uC;AACA,E;AACA,e;AACA,E;AACA,6D;AACA,mC;AACA,8B;AACA,G;AACA,qD;AACA,+C;AACA,E;;AAEA,G;AACA,oE;AACA,E;AACA,e;AACA,E;AACA,6D;AACA,qD;AACA,8B;AACA,G;AACA,mD;AACA,+C;AACA,E;;AAEA,G;AACA,uC;AACA,kC;AACA,E;AACA,yB;AACA,E;AACA,6D;AACA,sD;AACA,sE;AACA,G;AACA,2E;AACA,2D;AACA,E;;AAEA,G;AACA,0D;AACA,E;AACA,e;AACA,E;AACA,2D;AACA,8C;AACA,G;AACA,gD;AACA,0C;AACA,E;;AAEA,G;AACA,yD;AACA,2B;AACA,E;AACA,iB;AACA,E;AACA,qD;AACA,yC;AACA,G;AACA,oD;AACA,4C;AACA,E;;AAEA,yB;AACA,yJ;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;;;;AAKA,G;AACA,gE;AACA,+D;AACA,a;AACA,E;AACA,0B;AACA,e;AACA,W;AACA,qF;AACA,G;AACA,sC;AACA,kE;AACA,+B;AACA,4B;AACA,uB;AACA,C;;AAEA,G;AACA,yE;AACA,E;AACA,W;AACA,kB;AACA,E;AACA,qF;AACA,G;AACA,kE;AACA,sC;AACA,2C;;AAEA,mD;AACA,4C;AACA,K;AACA,U;AACA,8C;AACA,qF;AACA,S;AACA,K;;AAEA,+B;AACA,E;;AAEA,G;AACA,uD;AACA,E;AACA,W;AACA,mB;AACA,E;AACA,mD;AACA,4C;AACA,G;AACA,+D;AACA,8B;AACA,qE;AACA,6C;AACA,e;AACA,+B;AACA,iC;AACA,K;AACA,U;AACA,8C;AACA,2C;AACA,K;AACA,qB;AACA,kB;AACA,E;;AAEA,G;AACA,wD;AACA,E;AACA,W;AACA,qB;AACA,E;AACA,uD;AACA,G;AACA,sE;AACA,kD;AACA,iD;AACA,4B;AACA,qB;AACA,E;;AAEA,G;AACA,sD;AACA,E;AACA,W;AACA,uB;AACA,E;AACA,oC;AACA,G;AACA,mE;AACA,0B;AACA,E;;AAEA,kC;AACA,0C;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;AAEA,iC;AACA,6C;AACA,uC;;AAEA,iE;AACA,oD;;AAEA,G;AACA,8C;AACA,2E;AACA,+D;AACA,4C;AACA,E;AACA,uB;AACA,e;AACA,E;AACA,0D;AACA,G;AACA,iC;AACA,wB;AACA,sB;AACA,wB;AACA,sB;;AAEA,2C;AACA,qC;;AAEA,kB;AACA,0D;AACA,kD;AACA,iB;;AAEA,oC;AACA,yB;AACA,4B;AACA,8B;AACA,iC;;AAEA,4B;AACA,sC;AACA,C;;AAEA,G;AACA,oE;AACA,E;AACA,e;AACA,E;AACA,6D;AACA,wD;AACA,8B;AACA,G;AACA,oD;AACA,iF;AACA,mC;AACA,E;;AAEA,G;AACA,uC;AACA,iC;AACA,E;AACA,yB;AACA,6D;AACA,+C;AACA,G;AACA,4E;AACA,+C;AACA,E;;AAEA,G;AACA,uD;AACA,uC;AACA,E;AACA,e;AACA,E;AACA,6D;AACA,qC;AACA,8B;AACA,G;AACA,2D;AACA,oD;AACA,sD;AACA,2E;AACA,mB;AACA,E;;AAEA,G;AACA,0D;AACA,E;AACA,e;AACA,E;AACA,2D;AACA,8C;AACA,G;AACA,sD;AACA,0C;AACA,E;;AAEA,G;AACA,yD;AACA,0B;AACA,E;AACA,iB;AACA,E;AACA,qD;AACA,yC;AACA,G;AACA,0D;AACA,4C;AACA,E;;AAEA,G;AACA,sE;AACA,mB;AACA,E;AACA,iB;AACA,W;AACA,0D;AACA,G;AACA,oD;AACA,mB;AACA,E;;AAEA,yE;AACA,2E;AACA,sD;AACA,qC;AACA,gD;AACA,wD;AACA,K;AACA,C;;AAEA,2E;AACA,wE;AACA,wC;AACA,gD;AACA,2D;AACA,K;AACA,C;;AAEA,G;AACA,kE;AACA,mC;AACA,+E;AACA,E;AACA,8B;AACA,W;AACA,iC;AACA,sE;AACA,G;AACA,iC;AACA,oE;AACA,oE;;AAEA,6B;AACA,kC;AACA,4E;AACA,K;AACA,0B;AACA,kB;AACA,C;;AAEA,G;AACA,mE;AACA,kC;AACA,E;AACA,oB;AACA,E;AACA,U;AACA,W;AACA,4C;AACA,+B;AACA,G;;AAEA,e;AACA,gE;AACA,4C;AACA,gG;AACA,8D;AACA,M;AACA,C;AACA,qB;AACA,4C;AACA,oE;AACA,M;AACA,C;AACA,M;AACA,4C;AACA,8D;AACA,M;AACA,C;;AAEA,yC;AACA,mC;AACA,8D;AACA,C;;AAEA,yE;AACA,gC;AACA,wD;AACA,mE;AACA,+B;AACA,6D;AACA,E;;AAEA,mE;AACA,mD;AACA,oE;AACA,8B;AACA,uB;AACA,8D;AACA,8B;AACA,E;;AAEA,6B;AACA,iE;AACA,C;;AAEA,G;AACA,2E;AACA,4E;AACA,yB;AACA,E;AACA,W;AACA,iB;AACA,0C;AACA,G;AACA,2D;AACA,+B;AACA,wB;;AAEA,mC;AACA,kC;AACA,gC;AACA,4B;;AAEA,kC;AACA,4B;AACA,0B;AACA,8B;AACA,e;AACA,K;;AAEA,qE;AACA,+E;;AAEA,0B;AACA,gC;AACA,yC;AACA,K;;AAEA,oC;AACA,gC;AACA,qE;AACA,K;;AAEA,uE;AACA,qD;;AAEA,gC;AACA,yB;AACA,yD;AACA,4C;AACA,4C;AACA,a;AACA,qC;AACA,6C;AACA,sC;AACA,S;;AAEA,iD;AACA,8B;AACA,iI;AACA,qC;AACA,qC;AACA,K;AACA,E;;AAEA,sD;AACA,wB;AACA,+B;AACA,6C;AACA,K;AACA,E;;AAEA,G;AACA,4E;AACA,E;AACA,W;AACA,iB;AACA,yD;AACA,G;AACA,0D;AACA,2B;AACA,0C;AACA,E;;AAEA,G;AACA,qE;AACA,8B;AACA,E;AACA,W;AACA,iB;AACA,G;AACA,oD;AACA,+B;AACA,iB;AACA,iD;AACA,8B;AACA,oC;AACA,6C;AACA,S;AACA,K;AACA,yB;AACA,kB;AACA,E;;AAEA,+B;AACA,0F;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;AAEA,G;AACA,8C;AACA,6D;AACA,oE;AACA,mD;AACA,E;AACA,0E;AACA,+B;AACA,E;AACA,+D;AACA,mD;AACA,E;AACA,U;AACA,gB;AACA,G;AACA,mC;AACA,6C;AACA,iD;;AAEA,gB;;AAEA,kB;AACA,uB;AACA,oB;;AAEA,0B;AACA,c;AACA,mB;AACA,uB;AACA,yB;AACA,sC;;AAEA,e;AACA,yB;AACA,uC;AACA,sB;AACA,kB;AACA,iB;AACA,E;AACA,iD;;AAEA,a;AACA,8B;;AAEA,G;AACA,8D;AACA,mF;AACA,uD;AACA,+E;AACA,4D;AACA,0D;AACA,E;AACA,U;AACA,W;AACA,e;AACA,G;AACA,+B;AACA,iC;;AAEA,iD;AACA,0E;;AAEA,c;;AAEA,uC;AACA,2B;;AAEA,mC;;AAEA,sB;AACA,2E;AACA,4B;;AAEA,0D;AACA,oF;AACA,sC;AACA,K;;AAEA,+D;;AAEA,oC;AACA,E;;AAEA,+B;AACA,iB;AACA,0B;AACA,sB;AACA,2C;AACA,K;AACA,6B;AACA,C;AACA,mC;;AAEA,E;AACA,wE;AACA,iD;AACA,+E;AACA,wC;AACA,E;AACA,8B;AACA,+C;AACA,mC;AACA,K;AACA,gC;AACA,C;AACA,uD;AACA,e;;AAEA,G;AACA,iC;AACA,E;AACA,U;AACA,W;AACA,qB;AACA,G;AACA,uB;AACA,oC;AACA,0D;AACA,+B;AACA,a;AACA,+C;AACA,0D;AACA,C;AACA,wB;;AAEA,G;AACA,0D;AACA,E;AACA,e;AACA,E;AACA,2D;AACA,8C;AACA,G;AACA,qC;AACA,8E;AACA,0C;AACA,E;;AAEA,G;AACA,yD;AACA,2B;AACA,E;AACA,iB;AACA,E;AACA,qD;AACA,yC;AACA,G;AACA,yC;AACA,kF;AACA,4C;AACA,E;;AAEA,G;AACA,oE;AACA,E;AACA,U;AACA,e;AACA,E;AACA,6D;AACA,qD;AACA,8B;AACA,G;AACA,wC;AACA,qC;AACA,2E;AACA,4B;AACA,wE;AACA,S;AACA,c;AACA,uD;AACA,gE;AACA,uD;AACA,S;AACA,K;AACA,0C;AACA,E;;AAEA,G;AACA,uD;AACA,uC;AACA,E;AACA,e;AACA,E;AACA,6D;AACA,mC;AACA,8B;AACA,G;AACA,0C;AACA,0C;AACA,E;;AAEA,G;AACA,uC;AACA,kC;AACA,E;AACA,U;AACA,yB;AACA,E;AACA,6D;AACA,sD;AACA,sE;AACA,G;AACA,gE;AACA,sD;AACA,E;;AAEA,G;AACA,iE;AACA,E;AACA,U;AACA,iB;AACA,E;AACA,kC;AACA,G;AACA,mC;AACA,4B;AACA,E;;AAEA,G;AACA,yE;AACA,yE;AACA,6D;AACA,E;AACA,U;AACA,oB;AACA,E;AACA,gD;AACA,G;AACA,4C;AACA,4C;AACA,E;;AAEA,G;AACA,yB;AACA,E;AACA,U;AACA,qB;AACA,sB;AACA,kC;AACA,G;AACA,8C;AACA,0C;AACA,E;;AAEA,G;AACA,qB;AACA,E;AACA,U;AACA,qB;AACA,E;AACA,yD;AACA,+E;AACA,+E;AACA,+F;AACA,0H;AACA,G;AACA,kD;AACA,sE;AACA,E;;AAEA,G;AACA,8D;AACA,gF;AACA,0B;AACA,E;AACA,U;AACA,wB;AACA,E;AACA,gE;AACA,0C;AACA,G;AACA,mD;AACA,qE;;AAEA,mC;AACA,c;AACA,2D;AACA,iD;AACA,kC;AACA,K;AACA,kC;AACA,oC;AACA,6B;AACA,+C;AACA,0C;AACA,mC;AACA,mC;AACA,K;AACA,mB;AACA,E;;AAEA,G;AACA,mE;AACA,E;AACA,U;AACA,0B;AACA,E;AACA,+C;AACA,2C;AACA,G;AACA,4D;AACA,2B;AACA,mB;AACA,E;;AAEA,G;AACA,kC;AACA,E;AACA,U;AACA,sB;AACA,yD;AACA,G;AACA,6C;AACA,oB;AACA,E;;AAEA,G;AACA,kE;AACA,e;AACA,E;AACA,U;AACA,4B;AACA,E;AACA,iD;AACA,G;AACA,gE;AACA,sC;AACA,sC;AACA,E;;AAEA,G;AACA,0D;AACA,a;AACA,E;AACA,U;AACA,mB;AACA,E;AACA,gE;AACA,G;AACA,yC;AACA,2B;AACA,E;;AAEA,G;AACA,mE;AACA,oC;AACA,E;AACA,U;AACA,gB;AACA,E;AACA,uB;AACA,G;AACA,mC;AACA,wB;AACA,E;;AAEA,4C;AACA,2D;AACA,qC;AACA,mD;AACA,yC;AACA,+B;AACA,+C;AACA,S;AACA,K;AACA,G;;AAEA,wB;AACA,gG;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;;;AAIA,G;AACA,4D;AACA,a;AACA,E;AACA,W;AACA,U;AACA,gB;AACA,G;;AAEA,kB;;AAEA,G;AACA,gC;AACA,E;AACA,W;AACA,c;AACA,4C;AACA,+C;AACA,G;AACA,kB;AACA,wB;AACA,C;;AAEA,G;AACA,uC;AACA,E;AACA,W;AACA,c;AACA,4C;AACA,qD;AACA,G;AACA,0B;AACA,0B;AACA,C;;AAEA,G;AACA,6B;AACA,E;AACA,W;AACA,mB;AACA,iD;AACA,0B;AACA,G;AACA,2B;AACA,6B;AACA,oB;AACA,c;AACA,C;;AAEA,G;AACA,kC;AACA,E;AACA,W;AACA,qB;AACA,4C;AACA,G;AACA,yB;AACA,kB;AACA,C;;AAEA,kB;AACA,uB;AACA,2B;AACA,a;AACA,Y;AACA,E;AACA,0C;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;;;AAIA,G;AACA,gD;AACA,E;AACA,sB;AACA,e;AACA,G;AACA,yB;AACA,wB;AACA,uB;AACA,C;;AAEA,G;AACA,uD;AACA,uC;AACA,E;AACA,e;AACA,E;AACA,6D;AACA,mC;AACA,8B;AACA,G;AACA,0D;AACA,wC;AACA,mB;AACA,mD;AACA,iD;AACA,S;AACA,K;AACA,gB;AACA,E;;AAEA,G;AACA,oE;AACA,E;AACA,e;AACA,E;AACA,6D;AACA,qD;AACA,8B;AACA,G;AACA,2D;AACA,6D;AACA,sD;AACA,sD;AACA,gB;AACA,E;;AAEA,G;AACA,kB;AACA,sB;AACA,G;AACA,+D;;AAEA,M;AACA,uC;AACA,kC;AACA,E;AACA,yB;AACA,E;AACA,6D;AACA,sD;AACA,8B;AACA,G;AACA,gF;AACA,wC;AACA,iC;AACA,8C;AACA,kD;AACA,K;AACA,gB;AACA,E;;AAEA,G;AACA,8C;AACA,E;AACA,mB;AACA,E;AACA,4D;AACA,G;AACA,4D;AACA,wB;AACA,E;;AAEA,8B;AACA,0C;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;AAEA,6C;;AAEA,G;AACA,iF;AACA,oG;AACA,E;AACA,sB;AACA,wB;AACA,e;AACA,G;AACA,yB;AACA,wC;;AAEA,sD;AACA,mD;;AAEA,kD;AACA,sD;AACA,C;AACA,+D;AACA,kD;;AAEA,G;AACA,+D;AACA,E;AACA,0B;AACA,U;AACA,E;AACA,0F;AACA,uD;AACA,G;AACA,0E;AACA,mD;AACA,mD;AACA,2D;AACA,+D;AACA,K;AACA,E;;AAEA,G;AACA,gE;AACA,E;AACA,2B;AACA,U;AACA,E;AACA,wG;AACA,uD;AACA,G;AACA,4E;AACA,kE;AACA,6C;AACA,iD;AACA,yC;AACA,mC;AACA,iE;AACA,E;;AAEA,G;AACA,uD;AACA,uC;AACA,E;AACA,e;AACA,E;AACA,6D;AACA,mC;AACA,8B;AACA,G;AACA,0D;AACA,uD;AACA,c;AACA,kD;AACA,gF;AACA,K;AACA,oD;AACA,0C;AACA,K;AACA,gB;AACA,E;;AAEA,G;AACA,iB;AACA,sB;AACA,G;AACA,6D;;AAEA,G;AACA,0D;AACA,E;AACA,e;AACA,E;AACA,2D;AACA,8C;AACA,G;AACA,qD;AACA,4E;;AAEA,2F;AACA,8C;AACA,8C;;AAEA,yD;AACA,0D;;AAEA,kB;AACA,E;;AAEA,G;AACA,yD;AACA,2B;AACA,E;AACA,iB;AACA,E;AACA,qD;AACA,yC;AACA,G;AACA,yD;AACA,gF;;AAEA,2F;AACA,8C;AACA,qB;AACA,uC;AACA,+D;AACA,gE;AACA,sB;AACA,K;AACA,sB;AACA,E;;AAEA,G;AACA,oE;AACA,E;AACA,e;AACA,E;AACA,6D;AACA,qD;AACA,8B;AACA,G;AACA,wD;AACA,qD;AACA,4C;AACA,6D;AACA,wD;AACA,wD;AACA,wD;AACA,S;AACA,K;AACA,gB;AACA,E;;AAEA,G;AACA,iB;AACA,sB;AACA,G;AACA,+D;;AAEA,G;AACA,oD;AACA,E;AACA,oB;AACA,E;AACA,qD;AACA,8B;AACA,G;AACA,+D;AACA,8C;AACA,oB;AACA,mC;AACA,kD;AACA,0D;AACA,S;AACA,K;AACA,gB;AACA,E;;AAEA,G;AACA,2D;AACA,E;AACA,sB;AACA,E;AACA,qD;AACA,8B;AACA,G;AACA,mE;AACA,8C;AACA,qB;AACA,uC;AACA,kD;AACA,sE;AACA,S;AACA,K;AACA,gB;AACA,E;;AAEA,8B;AACA,4D;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;AAEA,mC;AACA,uC;AACA,mC;;AAEA,G;AACA,4D;AACA,0C;AACA,0F;AACA,a;AACA,E;AACA,W;AACA,e;AACA,mB;AACA,e;AACA,iE;AACA,G;AACA,yB;AACA,gC;AACA,wC;AACA,wD;AACA,gD;AACA,qC;AACA,6C;AACA,C;;AAEA,a;AACA,yB;;AAEA,mD;AACA,oC;AACA,8C;;AAEA,G;AACA,mD;AACA,E;AACA,c;AACA,W;AACA,wC;AACA,oF;AACA,G;AACA,sC;AACA,2D;AACA,E;;AAEA,G;AACA,8D;AACA,E;AACA,W;AACA,iB;AACA,kD;AACA,G;AACA,4C;AACA,+C;AACA,E;;AAEA,G;AACA,uE;AACA,E;AACA,W;AACA,iB;AACA,yD;AACA,G;AACA,kD;AACA,iC;AACA,E;;AAEA,G;AACA,gE;AACA,E;AACA,W;AACA,iB;AACA,E;AACA,gE;AACA,G;AACA,kD;AACA,wD;AACA,0C;AACA,E;;AAEA,G;AACA,2E;AACA,E;AACA,W;AACA,iB;AACA,E;AACA,+E;AACA,G;AACA,mD;AACA,sC;AACA,gC;AACA,kC;AACA,4B;AACA,sD;AACA,qC;AACA,kG;AACA,yB;AACA,uB;AACA,6B;AACA,O;AACA,2E;AACA,qC;AACA,qC;AACA,mC;AACA,K;AACA,yB;AACA,sF;AACA,uB;AACA,kB;AACA,O;AACA,kB;AACA,E;;AAEA,uB;AACA,uF;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;AAEA,uC;AACA,8D;AACA,gF;;AAEA,G;AACA,E;AACA,wC;AACA,yE;AACA,yE;AACA,+D;AACA,iF;AACA,4E;AACA,E;AACA,kB;AACA,e;AACA,yD;AACA,sE;AACA,oC;AACA,2D;AACA,oE;AACA,G;AACA,4B;AACA,iC;AACA,+B;AACA,8B;AACA,6B;AACA,4B;AACA,kC;;AAEA,qD;AACA,4B;;AAEA,oB;AACA,sC;AACA,mB;AACA,qB;AACA,oB;AACA,mB;AACA,0B;AACA,oB;AACA,M;;AAEA,kB;AACA,qE;AACA,6E;AACA,4D;AACA,yD;AACA,sD;AACA,2E;AACA,K;AACA,C;;AAEA,G;AACA,6E;AACA,mD;AACA,E;AACA,wB;AACA,E;AACA,sD;AACA,0B;AACA,G;AACA,sE;AACA,yE;AACA,iH;AACA,U;AACA,qC;AACA,2C;AACA,K;AACA,gB;AACA,E;;AAEA,G;AACA,sE;AACA,E;AACA,sB;AACA,E;AACA,0C;AACA,0B;AACA,G;AACA,gE;AACA,mE;AACA,uG;AACA,U;AACA,mC;AACA,uC;AACA,K;AACA,gB;AACA,E;;AAEA,G;AACA,wE;AACA,0C;AACA,E;AACA,qB;AACA,E;AACA,yC;AACA,0B;AACA,G;AACA,6D;AACA,gE;AACA,kG;AACA,U;AACA,kC;AACA,qC;AACA,K;AACA,gB;AACA,E;;AAEA,G;AACA,uE;AACA,0C;AACA,E;AACA,oB;AACA,E;AACA,wC;AACA,0B;AACA,G;AACA,0D;AACA,6D;AACA,6F;AACA,U;AACA,iC;AACA,mC;AACA,K;AACA,gB;AACA,E;;AAEA,G;AACA,gF;AACA,E;AACA,mB;AACA,E;AACA,uC;AACA,0B;AACA,G;AACA,uD;AACA,0D;AACA,wF;AACA,U;AACA,gC;AACA,iC;AACA,K;AACA,gB;AACA,E;;AAEA,G;AACA,6G;AACA,E;AACA,0B;AACA,E;AACA,8C;AACA,0B;AACA,G;AACA,4E;AACA,8E;AACA,0H;AACA,U;AACA,sC;AACA,+C;AACA,K;AACA,gB;AACA,E;;AAEA,I;AACA,4F;AACA,c;AACA,uB;AACA,E;AACA,0D;AACA,iE;AACA,yE;AACA,0B;AACA,G;AACA,0F;AACA,qD;AACA,4C;AACA,+F;AACA,S;AACA,qF;;AAEA,0E;AACA,oB;AACA,K;AACA,8C;AACA,E;;AAEA,G;AACA,uG;AACA,c;AACA,qB;AACA,E;AACA,0D;AACA,iE;AACA,yE;AACA,0B;AACA,G;AACA,oF;AACA,mD;AACA,0C;AACA,kF;AACA,S;AACA,+E;;AAEA,6E;AACA,K;AACA,0C;AACA,E;;AAEA,G;AACA,oG;AACA,c;AACA,oB;AACA,E;AACA,8E;AACA,iE;AACA,yE;AACA,0B;AACA,G;AACA,iF;AACA,kE;AACA,kD;;AAEA,yC;AACA,0F;AACA,S;AACA,4E;;AAEA,oE;AACA,oB;AACA,K;AACA,wC;AACA,E;;AAEA,G;AACA,iG;AACA,c;AACA,mB;AACA,E;AACA,6E;AACA,iE;AACA,yE;AACA,0B;AACA,G;AACA,8E;AACA,kE;AACA,iD;;AAEA,wC;AACA,wF;AACA,S;AACA,yE;;AAEA,kE;AACA,oB;AACA,K;AACA,sC;AACA,E;;AAEA,G;AACA,gG;AACA,c;AACA,kB;AACA,kE;AACA,iE;AACA,yE;AACA,0B;AACA,G;AACA,2E;AACA,0D;AACA,uC;AACA,sF;AACA,S;AACA,sE;;AAEA,gE;AACA,oB;AACA,K;AACA,oC;AACA,E;;AAEA,G;AACA,+G;AACA,c;AACA,yB;AACA,+F;AACA,iE;AACA,yE;AACA,0B;AACA,G;AACA,gG;AACA,wE;AACA,8C;AACA,oG;AACA,S;AACA,0F;;AAEA,8E;AACA,oB;AACA,K;AACA,kD;AACA,E;;AAEA,G;AACA,gE;AACA,c;AACA,e;AACA,G;AACA,2C;AACA,0E;AACA,sE;AACA,oE;AACA,kE;AACA,gE;AACA,8E;AACA,iC;AACA,+B;AACA,8B;AACA,6B;AACA,4B;AACA,kC;AACA,E;;AAEA,G;AACA,0F;AACA,c;AACA,uB;AACA,6C;AACA,G;AACA,2D;AACA,mC;AACA,E;;AAEA,G;AACA,+F;AACA,c;AACA,4B;AACA,uC;AACA,G;AACA,qE;AACA,2G;AACA,E;;AAEA,G;AACA,sF;AACA,c;AACA,qB;AACA,2C;AACA,G;AACA,uD;AACA,iC;AACA,E;;AAEA,G;AACA,oF;AACA,c;AACA,oB;AACA,0C;AACA,G;AACA,qD;AACA,gC;AACA,E;;AAEA,G;AACA,kF;AACA,c;AACA,mB;AACA,yC;AACA,G;AACA,mD;AACA,+B;AACA,E;;AAEA,G;AACA,gF;AACA,c;AACA,kB;AACA,wC;AACA,G;AACA,iD;AACA,qE;AACA,E;;AAEA,G;AACA,8F;AACA,c;AACA,yB;AACA,+C;AACA,G;AACA,+D;AACA,wF;AACA,E;;AAEA,kE;AACA,oB;AACA,gF;AACA,0E;AACA,uE;AACA,oE;AACA,iE;AACA,oF;AACA,C;;AAEA,G;AACA,iE;AACA,kE;AACA,E;AACA,W;AACA,iB;AACA,E;AACA,2D;AACA,mC;AACA,gE;AACA,qB;AACA,G;AACA,qD;AACA,uB;AACA,iC;AACA,wB;AACA,E;;AAEA,0B;AACA,0I;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;AAEA,6C;;AAEA,G;AACA,qE;AACA,uB;AACA,E;AACA,E;AACA,qB;AACA,wE;AACA,E;AACA,kB;AACA,gB;AACA,e;AACA,gB;AACA,gB;AACA,uB;AACA,sB;AACA,E;AACA,oB;AACA,6B;AACA,mB;AACA,wB;AACA,e;AACA,2C;AACA,G;AACA,gC;AACA,wB;AACA,4B;AACA,C;;AAEA,G;AACA,8F;AACA,E;AACA,U;AACA,+B;AACA,E;AACA,0C;AACA,4D;AACA,iC;AACA,G;AACA,2D;AACA,6C;AACA,2E;AACA,kB;AACA,E;;AAEA,+B;AACA,0C;AACA,oC;AACA,0D;AACA,C;;AAEA,G;AACA,yE;AACA,2E;AACA,4C;AACA,E;AACA,gB;AACA,E;AACA,qD;AACA,gC;AACA,G;AACA,mD;AACA,8B;AACA,gD;AACA,gC;AACA,6B;AACA,qI;AACA,uF;AACA,2C;AACA,2G;AACA,a;AACA,sC;AACA,S;AACA,K;AACA,gB;AACA,E;;AAEA,G;AACA,kB;AACA,E;AACA,qB;AACA,E;AACA,G;AACA,qE;;AAEA,G;AACA,6D;AACA,E;AACA,c;AACA,E;AACA,iC;AACA,8D;AACA,G;AACA,yD;AACA,6D;AACA,iG;AACA,kB;AACA,E;;AAEA,G;AACA,oD;AACA,c;AACA,E;AACA,0B;AACA,0D;AACA,G;AACA,kD;AACA,gD;AACA,E;;AAEA,G;AACA,gB;AACA,qB;AACA,G;AACA,mE;;AAEA,G;AACA,uE;AACA,E;AACA,c;AACA,E;AACA,iC;AACA,qC;AACA,yE;AACA,G;AACA,yD;AACA,sC;AACA,6B;AACA,8G;AACA,gB;AACA,E;;AAEA,G;AACA,oE;AACA,E;AACA,e;AACA,E;AACA,8D;AACA,qD;AACA,8B;AACA,G;AACA,6C;AACA,kC;AACA,0C;AACA,E;;AAEA,G;AACA,uC;AACA,kC;AACA,E;AACA,yB;AACA,E;AACA,8D;AACA,sD;AACA,sE;AACA,G;AACA,qE;AACA,kC;AACA,sD;AACA,E;;AAEA,G;AACA,0D;AACA,E;AACA,e;AACA,E;AACA,2D;AACA,8C;AACA,G;AACA,iD;AACA,kC;AACA,4C;AACA,E;;AAEA,G;AACA,yD;AACA,wB;AACA,E;AACA,iB;AACA,E;AACA,qD;AACA,yC;AACA,G;AACA,qD;AACA,kC;AACA,8C;AACA,E;;AAEA,gC;AACA,6D;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;AAEA,iC;AACA,yC;;AAEA,G;AACA,oE;AACA,mC;AACA,E;AACA,oB;AACA,e;AACA,E;AACA,qD;AACA,G;AACA,6B;AACA,wB;AACA,uB;AACA,sC;AACA,+B;AACA,6B;;AAEA,2B;AACA,2B;;AAEA,6B;;AAEA,iC;AACA,C;;AAEA,G;AACA,2D;AACA,gD;AACA,iE;AACA,E;AACA,c;AACA,0C;AACA,sD;AACA,G;AACA,gD;AACA,kF;AACA,kE;AACA,2B;AACA,+C;AACA,yC;AACA,mD;AACA,K;AACA,iC;;AAEA,qB;AACA,E;;AAEA,G;AACA,yF;AACA,E;AACA,c;AACA,E;AACA,+C;AACA,G;AACA,2C;AACA,yG;AACA,E;;AAEA,G;AACA,uE;AACA,E;AACA,c;AACA,0C;AACA,wE;AACA,G;AACA,gD;AACA,6B;AACA,sC;AACA,qD;AACA,mD;AACA,yB;AACA,uB;AACA,kD;AACA,qB;AACA,E;;AAEA,G;AACA,uC;AACA,E;AACA,kB;AACA,+D;AACA,G;AACA,mD;AACA,sB;AACA,4B;AACA,4D;AACA,sF;AACA,kB;AACA,E;;AAEA,0D;AACA,oD;AACA,iD;AACA,mC;AACA,2C;AACA,yB;AACA,uC;AACA,sC;AACA,mD;AACA,0D;AACA,4E;AACA,6C;AACA,K;AACA,C;;AAEA,G;AACA,4D;AACA,E;AACA,W;AACA,iB;AACA,0C;AACA,G;AACA,wD;AACA,2C;AACA,kD;AACA,+C;AACA,6B;AACA,kD;AACA,wC;AACA,kE;AACA,S;AACA,K;;AAEA,0C;AACA,2B;AACA,4D;AACA,E;;AAEA,G;AACA,qE;AACA,E;AACA,W;AACA,iB;AACA,E;AACA,kE;AACA,2B;AACA,G;AACA,iD;AACA,yD;;AAEA,sB;AACA,oC;AACA,mC;AACA,mC;AACA,mD;AACA,6C;AACA,S;AACA,K;AACA,wD;;AAEA,mE;AACA,E;;AAEA,4B;AACA,yE;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;AAEA,uC;AACA,qC;AACA,yC;;AAEA,G;AACA,gF;AACA,+F;AACA,E;AACA,e;AACA,e;AACA,wE;AACA,G;AACA,4B;AACA,mB;AACA,yB;;AAEA,iC;AACA,4B;;AAEA,0C;AACA,C;;AAEA,0B;AACA,qC;AACA,+B;AACA,iC;AACA,iC;AACA,iC;AACA,uC;AACA,6B;AACA,2B;AACA,4B;AACA,yB;AACA,K;AACA,E;;AAEA,G;AACA,mB;AACA,E;AACA,iB;AACA,0C;AACA,G;AACA,4C;AACA,uC;AACA,E;;AAEA,oD;AACA,0C;AACA,uC;AACA,8C;AACA,wD;AACA,8D;AACA,S;AACA,K;AACA,C;;AAEA,yE;AACA,iB;AACA,sC;AACA,mD;AACA,qC;AACA,mC;AACA,iC;AACA,+B;AACA,uC;AACA,+C;AACA,8F;AACA,4C;AACA,S;AACA,c;AACA,kE;AACA,2G;AACA,a;AACA,S;AACA,K;AACA,uD;AACA,wC;AACA,K;AACA,qD;AACA,iE;AACA,K;;AAEA,+B;AACA,6B;AACA,yB;AACA,uB;AACA,qB;AACA,kB;AACA,O;AACA,kB;AACA,C;;AAEA,kC;AACA,kC;AACA,iD;AACA,mD;AACA,iC;AACA,K;AACA,kB;AACA,C;;AAEA,iD;AACA,6B;AACA,e;AACA,W;AACA,sC;AACA,oD;AACA,K;AACA,U;AACA,kC;AACA,2E;AACA,gC;AACA,S;AACA,qC;AACA,iE;AACA,6D;;AAEA,yC;AACA,kC;AACA,4D;AACA,S;AACA,iC;AACA,sC;AACA,4C;AACA,S;AACA,K;AACA,+B;AACA,kB;AACA,C;;AAEA,G;AACA,sF;AACA,iC;AACA,E;AACA,e;AACA,wE;AACA,G;AACA,kD;AACA,kC;AACA,iB;AACA,uB;AACA,iD;AACA,E;;AAEA,G;AACA,kD;AACA,E;AACA,c;AACA,E;AACA,wC;AACA,oF;AACA,G;AACA,sC;AACA,qD;AACA,E;;AAEA,G;AACA,8D;AACA,E;AACA,W;AACA,iB;AACA,kD;AACA,G;AACA,4C;AACA,wD;AACA,E;;AAEA,uB;AACA,4F;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;AAEA,uC;;AAEA,G;AACA,E;AACA,qE;AACA,6D;AACA,6C;AACA,E;AACA,W;AACA,oB;AACA,e;AACA,G;AACA,uB;AACA,qB;AACA,C;AACA,wC;;AAEA,G;AACA,qE;AACA,0E;AACA,mC;AACA,E;AACA,gB;AACA,U;AACA,W;AACA,E;AACA,6C;AACA,qD;AACA,6D;AACA,0B;AACA,G;AACA,kD;AACA,qD;AACA,E;;AAEA,G;AACA,2E;AACA,wE;AACA,6B;AACA,E;AACA,gB;AACA,E;AACA,W;AACA,6C;AACA,2B;AACA,iD;AACA,G;AACA,4D;AACA,iB;AACA,uD;AACA,uB;AACA,E;;AAEA,G;AACA,yE;AACA,a;AACA,E;AACA,W;AACA,gB;AACA,G;AACA,+C;AACA,qB;AACA,E;;AAEA,gC;AACA,8B;AACA,Y;AACA,gD;AACA,gD;AACA,gD;AACA,M;AACA,C;;AAEA,uB;;AAEA,oE;AACA,0E;AACA,kE;AACA,oE;AACA,iB;AACA,yF;AACA,W;AACA,e;AACA,kB;AACA,gB;AACA,e;AACA,c;AACA,a;;AAEA,mC;AACA,kB;AACA,4C;AACA,iD;AACA,oE;AACA,sG;AACA,+F;AACA,S;AACA,2B;AACA,iC;AACA,2C;AACA,sD;AACA,oD;AACA,oC;AACA,U;AACA,K;AACA,gE;AACA,e;AACA,K;AACA,qC;AACA,+C;AACA,iE;AACA,S;AACA,K;AACA,U;AACA,6B;AACA,4C;AACA,wC;AACA,sC;AACA,oC;AACA,kC;AACA,0C;;AAEA,uF;AACA,oG;AACA,0B;AACA,iC;AACA,sD;AACA,S;AACA,2C;;AAEA,4C;AACA,kC;AACA,sC;;AAEA,4B;AACA,uE;AACA,uE;AACA,a;;AAEA,mC;AACA,+F;AACA,+F;AACA,a;;AAEA,6B;AACA,oL;AACA,mJ;AACA,a;;AAEA,sD;AACA,0B;AACA,yB;AACA,S;;AAEA,iC;AACA,iC;AACA,6B;AACA,2B;AACA,yB;AACA,sB;AACA,4B;AACA,K;AACA,E;;AAEA,4B;AACA,2D;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;AAEA,+C;;AAEA,G;AACA,8C;AACA,2E;AACA,+D;AACA,4C;AACA,E;AACA,iB;AACA,e;AACA,E;AACA,qD;AACA,iE;AACA,2E;AACA,gG;AACA,oE;AACA,G;AACA,2B;AACA,6B;;AAEA,sB;;AAEA,yB;AACA,yB;AACA,sB;AACA,wB;AACA,qB;;AAEA,8B;AACA,6B;AACA,iC;AACA,2B;AACA,8B;AACA,+B;;AAEA,4B;;AAEA,0C;;AAEA,+B;AACA,C;AACA,2D;AACA,wC;AACA,sC;AACA,kD;;AAEA,G;AACA,iE;AACA,mE;AACA,E;AACA,wB;AACA,oE;AACA,G;AACA,sE;AACA,+B;AACA,4I;AACA,2C;AACA,K;AACA,iC;AACA,E;;AAEA,G;AACA,uC;AACA,E;AACA,wB;AACA,E;AACA,4D;AACA,G;AACA,4D;AACA,2B;AACA,E;;AAEA,G;AACA,sE;AACA,mE;AACA,E;AACA,wB;AACA,a;AACA,qE;AACA,G;AACA,sE;AACA,+B;AACA,2C;AACA,K;AACA,6B;AACA,gB;AACA,E;;AAEA,G;AACA,4C;AACA,E;AACA,wB;AACA,E;AACA,4D;AACA,G;AACA,4D;AACA,2B;AACA,E;;AAEA,G;AACA,mE;AACA,8D;AACA,kC;AACA,E;AACA,mB;AACA,a;AACA,iD;AACA,G;AACA,2D;AACA,gD;AACA,uC;AACA,kC;AACA,K;AACA,gB;AACA,E;;AAEA,G;AACA,mE;AACA,mE;AACA,kC;AACA,E;AACA,sB;AACA,a;AACA,oD;AACA,G;AACA,iE;AACA,8C;AACA,iB;AACA,gE;AACA,kC;AACA,K;AACA,gB;AACA,E;;AAEA,G;AACA,mE;AACA,mE;AACA,kC;AACA,E;AACA,sB;AACA,oD;AACA,G;AACA,iE;AACA,8C;AACA,iB;AACA,oC;AACA,Y;AACA,iC;AACA,K;AACA,gB;AACA,E;;AAEA,G;AACA,2C;AACA,qB;AACA,a;AACA,kC;AACA,G;AACA,+D;AACA,c;AACA,qB;AACA,iD;AACA,sF;AACA,K;AACA,sE;AACA,mD;AACA,uE;AACA,gB;AACA,E;;AAEA,G;AACA,uD;AACA,E;AACA,uB;AACA,8C;AACA,G;AACA,0D;AACA,0B;AACA,E;;AAEA,G;AACA,wE;AACA,uD;AACA,E;AACA,qB;AACA,a;AACA,yD;AACA,G;AACA,6D;AACA,mC;AACA,+B;AACA,kC;AACA,K;AACA,gB;AACA,E;;AAEA,G;AACA,+C;AACA,E;AACA,qB;AACA,E;AACA,wC;AACA,G;AACA,sD;AACA,wB;AACA,E;;AAEA,G;AACA,+B;AACA,E;AACA,qB;AACA,a;AACA,6E;AACA,G;AACA,6D;AACA,iD;AACA,0D;AACA,mE;AACA,mE;AACA,0D;AACA,gB;AACA,E;;AAEA,wE;AACA,kC;AACA,uG;AACA,4B;AACA,C;;AAEA,qE;AACA,+D;AACA,+B;AACA,oC;AACA,6C;AACA,K;AACA,C;;AAEA,6D;AACA,8D;AACA,iC;AACA,oC;AACA,6B;AACA,K;AACA,C;;AAEA,yE;AACA,+D;AACA,mC;AACA,oC;AACA,mD;AACA,K;AACA,C;;AAEA,iE;AACA,8D;AACA,qC;AACA,oC;AACA,kC;AACA,K;AACA,C;;AAEA,6B;AACA,iE;AACA,C;;AAEA,G;AACA,qE;AACA,E;AACA,W;AACA,gB;AACA,E;AACA,6E;AACA,G;AACA,qD;AACA,sD;AACA,4B;AACA,iD;AACA,gE;AACA,2D;AACA,a;AACA,S;AACA,c;AACA,oD;AACA,S;AACA,K;AACA,8B;AACA,wB;AACA,yB;AACA,iC;AACA,6B;AACA,8B;AACA,iC;AACA,2B;AACA,8B;AACA,6B;AACA,gC;AACA,E;;AAEA,G;AACA,2E;AACA,4E;AACA,yB;AACA,E;AACA,W;AACA,iB;AACA,0C;AACA,G;AACA,qD;AACA,4D;AACA,qC;AACA,4B;;AAEA,6B;AACA,2C;AACA,4C;AACA,sF;AACA,mC;AACA,mC;AACA,K;;AAEA,4B;AACA,wC;AACA,kC;AACA,mC;AACA,K;;AAEA,gC;AACA,4C;AACA,sC;AACA,mC;AACA,K;;AAEA,oB;AACA,oC;AACA,4C;AACA,yD;AACA,yD;AACA,mD;AACA,mF;AACA,+C;AACA,4D;AACA,0C;AACA,2C;AACA,iB;AACA,gC;AACA,oB;AACA,wD;AACA,a;AACA,mF;AACA,iD;AACA,6D;AACA,2C;AACA,2C;AACA,iB;AACA,iC;AACA,oB;AACA,wD;AACA,a;AACA,wC;AACA,S;AACA,K;;AAEA,yC;AACA,6C;AACA,gC;AACA,gC;;AAEA,+B;AACA,K;;AAEA,0B;AACA,yB;AACA,kG;AACA,oG;AACA,S;;AAEA,yC;AACA,K;;AAEA,6B;AACA,4B;AACA,yC;AACA,mC;AACA,mC;AACA,K;;AAEA,uD;AACA,E;;AAEA,G;AACA,kE;AACA,kD;AACA,qD;AACA,E;AACA,W;AACA,kB;AACA,sC;AACA,G;AACA,yD;AACA,c;AACA,qC;AACA,qC;AACA,wB;AACA,kC;AACA,8B;AACA,4B;AACA,6B;AACA,sC;AACA,0C;AACA,wC;AACA,uC;AACA,iF;AACA,4B;AACA,iD;AACA,4D;AACA,8D;AACA,a;AACA,S;AACA,c;AACA,uD;AACA,S;AACA,K;AACA,wB;AACA,+B;AACA,iC;AACA,E;;AAEA,G;AACA,4E;AACA,E;AACA,W;AACA,iB;AACA,yD;AACA,G;AACA,oD;AACA,oC;AACA,kC;AACA,6E;AACA,oC;AACA,K;AACA,oC;AACA,E;;AAEA,G;AACA,qE;AACA,8B;AACA,E;AACA,W;AACA,iB;AACA,G;AACA,oD;AACA,+C;AACA,qE;AACA,wB;AACA,E;;AAEA,G;AACA,8C;AACA,E;AACA,kB;AACA,+C;AACA,G;AACA,gD;AACA,+C;AACA,E;;AAEA,G;AACA,yC;AACA,E;AACA,kB;AACA,a;AACA,gD;AACA,G;AACA,oD;AACA,iD;AACA,2B;AACA,gB;AACA,E;;AAEA,yB;AACA,8D;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;;;;AAKA,G;AACA,mE;AACA,0D;AACA,yD;AACA,2C;AACA,E;AACA,iE;AACA,4B;AACA,mE;AACA,kC;AACA,kE;AACA,yB;AACA,uC;AACA,4B;AACA,6B;AACA,E;AACA,U;AACA,E;AACA,mB;AACA,G;AACA,mB;;AAEA,mE;AACA,6C;AACA,2B;AACA,sE;;AAEA,G;AACA,4E;AACA,E;AACA,sB;AACA,U;AACA,sC;AACA,uC;AACA,sB;AACA,G;AACA,oD;AACA,Y;AACA,+D;AACA,+D;AACA,gE;AACA,gE;AACA,+D;AACA,+D;AACA,gE;AACA,gE;AACA,iE;AACA,iE;AACA,kE;AACA,kE;AACA,mE;AACA,mE;AACA,oE;AACA,mE;AACA,M;AACA,E;;AAEA,G;AACA,+D;AACA,uD;AACA,E;AACA,mB;AACA,U;AACA,sC;AACA,uC;AACA,sB;AACA,G;AACA,8C;AACA,Y;AACA,gD;AACA,gD;AACA,iD;AACA,U;AACA,gD;AACA,gD;AACA,iD;AACA,U;AACA,iD;AACA,iD;AACA,kD;AACA,U;AACA,2D;AACA,2D;AACA,4D;AACA,S;AACA,M;AACA,E;;AAEA,G;AACA,8D;AACA,oD;AACA,E;AACA,gE;AACA,E;AACA,mB;AACA,U;AACA,mC;AACA,+D;AACA,sB;AACA,G;AACA,8C;AACA,wB;AACA,yH;AACA,E;;AAEA,G;AACA,6E;AACA,wE;AACA,0C;AACA,E;AACA,mE;AACA,E;AACA,mB;AACA,U;AACA,+D;AACA,kD;AACA,2C;AACA,G;AACA,8C;AACA,wB;AACA,qD;AACA,qD;AACA,sD;AACA,+C;AACA,E;;AAEA,G;AACA,iE;AACA,gC;AACA,E;AACA,oB;AACA,U;AACA,kC;AACA,kC;AACA,kC;AACA,sB;AACA,G;AACA,mD;AACA,+B;AACA,4D;AACA,E;;AAEA,G;AACA,gD;AACA,sE;AACA,E;AACA,+D;AACA,E;AACA,oB;AACA,U;AACA,gC;AACA,2D;AACA,wB;AACA,sB;AACA,G;AACA,gD;AACA,Y;AACA,iD;AACA,iD;AACA,kD;AACA,mD;AACA,M;AACA,E;;AAEA,G;AACA,mE;AACA,wB;AACA,E;AACA,gB;AACA,U;AACA,mC;AACA,mC;AACA,mC;AACA,sB;AACA,G;AACA,2C;AACA,+B;AACA,+B;AACA,4D;AACA,E;;AAEA,G;AACA,kD;AACA,iC;AACA,E;AACA,kB;AACA,U;AACA,gC;AACA,sB;AACA,G;AACA,6C;AACA,mC;AACA,mC;AACA,yF;AACA,E;;AAEA,G;AACA,kD;AACA,iC;AACA,E;AACA,kB;AACA,U;AACA,gC;AACA,sB;AACA,G;AACA,6C;AACA,mC;AACA,mC;AACA,yF;AACA,E;;AAEA,G;AACA,kD;AACA,iC;AACA,E;AACA,kB;AACA,U;AACA,gC;AACA,sB;AACA,G;AACA,6C;AACA,mC;AACA,mC;AACA,yF;AACA,E;;AAEA,G;AACA,yD;AACA,mE;AACA,kE;AACA,E;AACA,iB;AACA,U;AACA,kE;AACA,oE;AACA,kE;AACA,sB;AACA,G;AACA,qD;AACA,+B;AACA,+B;AACA,mC;AACA,mC;AACA,+B;AACA,+B;AACA,kB;AACA,0B;AACA,qD;AACA,qD;AACA,U;AACA,2B;AACA,qD;AACA,qD;AACA,U;AACA,iB;AACA,2B;AACA,0B;AACA,U;AACA,kB;AACA,M;AACA,kB;AACA,E;;AAEA,G;AACA,6D;AACA,E;AACA,qB;AACA,U;AACA,4E;AACA,mE;AACA,sB;AACA,G;AACA,sD;AACA,mC;AACA,mC;AACA,oD;;AAEA,qC;AACA,qC;AACA,qC;AACA,qC;AACA,qC;AACA,qC;AACA,6B;AACA,6B;AACA,6B;;AAEA,kB;AACA,8C;AACA,8C;AACA,8C;AACA,kB;AACA,M;AACA,kB;AACA,E;;AAEA,G;AACA,uE;AACA,2B;AACA,E;AACA,sB;AACA,U;AACA,uD;AACA,uC;AACA,sB;AACA,G;AACA,oD;AACA,8D;AACA,8D;AACA,+D;AACA,+C;AACA,E;;AAEA,G;AACA,6D;AACA,E;AACA,e;AACA,U;AACA,sD;AACA,wD;AACA,sD;AACA,sB;AACA,G;AACA,iD;AACA,kG;AACA,E;;AAEA,G;AACA,iE;AACA,E;AACA,gB;AACA,U;AACA,iE;AACA,sB;AACA,G;AACA,yC;AACA,0E;AACA,E;;AAEA,G;AACA,iE;AACA,E;AACA,gB;AACA,U;AACA,kE;AACA,sB;AACA,G;AACA,yC;AACA,0E;AACA,E;;AAEA,G;AACA,yC;AACA,E;AACA,sB;AACA,U;AACA,mD;AACA,sB;AACA,G;AACA,sD;AACA,sE;AACA,E;;AAEA,G;AACA,yD;AACA,E;AACA,uB;AACA,U;AACA,iC;AACA,gE;AACA,G;AACA,mD;AACA,iC;AACA,E;;AAEA,G;AACA,uD;AACA,+D;AACA,+E;AACA,E;AACA,kB;AACA,U;AACA,iC;AACA,sB;AACA,G;AACA,yC;AACA,mD;AACA,wC;AACA,wC;AACA,uC;AACA,wC;AACA,wC;AACA,uC;AACA,uC;AACA,uC;AACA,wC;AACA,iD;AACA,wB;AACA,kB;AACA,4C;AACA,6C;AACA,6C;AACA,kB;AACA,M;AACA,4E;AACA,4E;AACA,6E;AACA,kB;AACA,E;;AAEA,G;AACA,wC;AACA,E;AACA,oB;AACA,U;AACA,8B;AACA,sD;AACA,G;AACA,6C;AACA,kH;AACA,E;;AAEA,0B;AACA,kG;AACA,C;AACA,mB;AACA,sC;AACA,C;AACA,mB;AACA,4B;AACA,C;;AAEA,G;AACA,iE;AACA,2B;AACA,E;AACA,oB;AACA,U;AACA,wC;AACA,0E;AACA,4B;AACA,G;AACA,6C;;AAEA,mD;AACA,qB;;AAEA,wC;AACA,qE;AACA,8F;AACA,6E;AACA,yE;AACA,8D;;AAEA,wC;AACA,2B;AACA,4G;AACA,K;;AAEA,gC;AACA,8D;;AAEA,e;AACA,oD;AACA,oD;AACA,oD;;AAEA,oB;AACA,oD;AACA,oD;AACA,oD;;AAEA,oB;AACA,oD;AACA,oD;AACA,oD;;AAEA,8B;AACA,wC;;AAEA,qC;AACA,8B;AACA,+F;AACA,8E;AACA,0E;AACA,+D;;AAEA,gC;AACA,8D;;AAEA,c;AACA,oD;AACA,oD;;AAEA,mB;AACA,oD;AACA,oD;;AAEA,gD;AACA,uE;AACA,qC;;AAEA,6B;AACA,4F;AACA,uC;AACA,uC;;AAEA,+C;AACA,oB;AACA,iD;AACA,yF;AACA,4B;AACA,6B;AACA,kD;AACA,K;AACA,uC;AACA,4H;;AAEA,gC;AACA,kF;AACA,sD;AACA,wE;AACA,yE;AACA,8D;AACA,yC;AACA,8D;AACA,yC;AACA,K;;AAEA,kB;AACA,E;;AAEA,G;AACA,2D;AACA,qD;AACA,yC;AACA,E;AACA,kB;AACA,U;AACA,wC;AACA,wC;AACA,oB;AACA,sB;AACA,G;AACA,iD;AACA,oC;AACA,yC;AACA,yC;;AAEA,mB;AACA,6B;AACA,0B;AACA,yB;AACA,uB;AACA,M;;AAEA,iC;AACA,uF;AACA,8E;AACA,2E;AACA,wE;AACA,K;AACA,oC;AACA,E;;AAEA,G;AACA,6D;AACA,mB;AACA,E;AACA,gB;AACA,U;AACA,sE;AACA,4B;AACA,yC;AACA,G;AACA,wC;AACA,mF;AACA,8E;AACA,wF;AACA,6H;AACA,E;;AAEA,G;AACA,uD;AACA,8C;AACA,E;AACA,iB;AACA,U;AACA,8B;AACA,8B;AACA,oB;AACA,G;AACA,0C;AACA,sC;AACA,E;;AAEA,G;AACA,yD;AACA,8C;AACA,E;AACA,oB;AACA,U;AACA,8B;AACA,8B;AACA,oB;AACA,G;AACA,gD;AACA,8B;;AAEA,c;AACA,uB;AACA,gE;AACA,0D;AACA,0D;AACA,0D;AACA,E;;AAEA,G;AACA,yD;AACA,E;AACA,4B;AACA,U;AACA,kE;AACA,2B;AACA,qD;AACA,4C;AACA,G;AACA,oE;AACA,mC;AACA,sE;AACA,+B;AACA,wC;AACA,6B;AACA,K;AACA,oC;AACA,wC;AACA,wC;AACA,6B;AACA,K;AACA,qC;AACA,wC;AACA,yC;AACA,6B;AACA,K;AACA,0D;AACA,0D;AACA,0D;AACA,0D;AACA,kB;AACA,E;;AAEA,G;AACA,4D;AACA,E;AACA,4B;AACA,U;AACA,S;AACA,G;AACA,wE;;AAEA,G;AACA,8D;AACA,E;AACA,2B;AACA,U;AACA,S;AACA,G;AACA,wE;;AAEA,2B;AACA,2C;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;AAEA,6C;AACA,iD;AACA,yC;AACA,8C;;AAEA,G;AACA,2D;AACA,oE;AACA,sD;AACA,2C;AACA,E;AACA,c;AACA,qB;AACA,uB;AACA,mB;AACA,e;AACA,G;AACA,wB;AACA,kC;;AAEA,0C;AACA,2C;AACA,yD;AACA,2D;;AAEA,2F;AACA,4D;;AAEA,0C;AACA,C;;AAEA,yC;;AAEA,G;AACA,+B;AACA,qB;AACA,E;AACA,0B;AACA,qC;AACA,G;AACA,sD;AACA,gD;AACA,E;;AAEA,E;AACA,yB;AACA,wC;AACA,E;AACA,sB;AACA,2B;AACA,G;AACA,0D;AACA,wC;AACA,E;;AAEA,G;AACA,sC;AACA,0D;AACA,kD;AACA,E;AACA,c;AACA,uB;AACA,a;AACA,G;AACA,qC;AACA,uD;AACA,E;;AAEA,G;AACA,gB;AACA,e;AACA,G;AACA,yC;;AAEA,G;AACA,8D;AACA,E;AACA,W;AACA,iB;AACA,kD;AACA,G;AACA,2C;AACA,+B;AACA,E;;AAEA,G;AACA,oC;AACA,E;AACA,kB;AACA,yC;AACA,G;AACA,6C;AACA,2C;AACA,oF;AACA,K;AACA,kC;AACA,E;;AAEA,sB;AACA,+H;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;;;;AAKA,G;AACA,oE;AACA,4E;AACA,gC;AACA,E;AACA,sB;AACA,E;AACA,e;AACA,kE;AACA,kD;AACA,iF;AACA,+D;AACA,4F;AACA,oC;AACA,G;AACA,gC;AACA,+B;AACA,6D;;AAEA,kB;AACA,oC;;AAEA,8E;AACA,2C;;AAEA,kE;AACA,2F;;AAEA,+D;;AAEA,8E;;AAEA,8B;AACA,0B;AACA,C;;AAEA,mC;AACA,gD;AACA,uB;AACA,wB;AACA,sB;AACA,0B;AACA,yB;AACA,oC;AACA,0B;AACA,2B;AACA,E;;AAEA,iD;AACA,gE;AACA,iC;AACA,uD;AACA,0B;AACA,E;;AAEA,iD;AACA,uE;AACA,4C;AACA,E;;AAEA,6C;AACA,yD;AACA,kE;AACA,uC;AACA,E;;AAEA,6B;AACA,yD;AACA,8E;AACA,uC;AACA,sB;AACA,qC;AACA,+C;AACA,wC;AACA,oC;AACA,+D;AACA,wC;AACA,S;AACA,oC;AACA,+D;AACA,wC;AACA,S;AACA,mD;AACA,K;AACA,2B;AACA,gB;AACA,E;;AAEA,qF;AACA,4F;AACA,+B;;AAEA,c;AACA,gC;AACA,qD;AACA,8B;;AAEA,yB;AACA,+B;AACA,8B;AACA,gB;AACA,K;AACA,yB;AACA,+B;AACA,uC;AACA,8B;AACA,uD;AACA,K;AACA,wD;AACA,wC;AACA,qC;AACA,2B;AACA,4D;AACA,yB;AACA,uB;AACA,oC;AACA,0C;AACA,oE;AACA,K;AACA,2B;AACA,gC;AACA,gB;AACA,qE;AACA,+D;AACA,oC;AACA,kC;AACA,oB;AACA,S;AACA,K;AACA,8C;AACA,E;;AAEA,G;AACA,6F;AACA,E;AACA,sB;AACA,wC;AACA,G;AACA,6D;AACA,kC;AACA,e;AACA,kC;AACA,K;AACA,gD;AACA,0B;AACA,4H;AACA,gD;AACA,S;AACA,c;AACA,sC;AACA,S;AACA,K;AACA,mC;AACA,wF;AACA,4C;AACA,K;AACA,8B;AACA,E;;AAEA,G;AACA,4F;AACA,E;AACA,kB;AACA,wC;AACA,G;AACA,qD;AACA,kC;AACA,e;AACA,8B;AACA,K;AACA,0D;AACA,0B;AACA,+G;AACA,gD;AACA,S;AACA,c;AACA,kC;AACA,S;AACA,K;AACA,+B;AACA,oF;AACA,4C;AACA,K;AACA,0B;AACA,E;;AAEA,G;AACA,yD;AACA,E;AACA,kB;AACA,4C;AACA,G;AACA,yD;AACA,sC;AACA,E;;AAEA,G;AACA,0C;AACA,E;AACA,mB;AACA,yB;AACA,G;AACA,uD;AACA,sB;AACA,E;;AAEA,G;AACA,sD;AACA,E;AACA,mB;AACA,0C;AACA,G;AACA,uD;AACA,2B;AACA,E;;AAEA,G;AACA,4D;AACA,E;AACA,kB;AACA,sD;AACA,G;AACA,0D;AACA,wD;AACA,0C;AACA,kD;AACA,E;;AAEA,G;AACA,sD;AACA,E;AACA,e;AACA,sD;AACA,G;AACA,oD;AACA,qD;AACA,kD;AACA,E;;AAEA,G;AACA,mC;AACA,E;AACA,iB;AACA,mD;AACA,sD;AACA,sD;AACA,G;AACA,iE;AACA,0D;AACA,iG;AACA,kD;AACA,E;;AAEA,G;AACA,4D;AACA,E;AACA,e;AACA,oD;AACA,G;AACA,oD;AACA,iC;AACA,6B;AACA,4C;AACA,0C;;AAEA,wC;AACA,gC;AACA,6B;AACA,4C;AACA,oC;AACA,iC;;AAEA,4B;AACA,0E;AACA,gE;AACA,8D;AACA,4D;;AAEA,0B;AACA,qE;AACA,mE;AACA,yD;AACA,+D;;AAEA,kE;AACA,gG;AACA,oE;AACA,kG;AACA,kD;AACA,E;;AAEA,M;AACA,0C;AACA,E;AACA,c;AACA,kC;AACA,G;AACA,6C;AACA,uC;AACA,E;;AAEA,M;AACA,wC;AACA,E;AACA,kB;AACA,yC;AACA,G;AACA,qD;AACA,4B;AACA,4C;AACA,E;;AAEA,G;AACA,8D;AACA,iE;AACA,W;AACA,iB;AACA,kD;AACA,G;AACA,mD;AACA,qE;AACA,4B;AACA,kE;AACA,E;;AAEA,8B;AACA,2C;AACA,kB;AACA,gC;AACA,kD;AACA,4C;AACA,8B;AACA,8B;AACA,0C;AACA,0C;AACA,4B;AACA,kC;AACA,8C;AACA,sC;AACA,4B;AACA,sC;AACA,gC;AACA,oC;AACA,0B;AACA,yC;AACA,E;;AAEA,qU;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,mD;;AAEA,G;AACA,sD;AACA,qD;AACA,uD;AACA,8C;AACA,E;AACA,sB;AACA,e;AACA,E;AACA,gE;AACA,G;AACA,kC;AACA,0B;AACA,8B;AACA,4B;AACA,C;;AAEA,G;AACA,+D;AACA,8D;AACA,qE;AACA,qC;AACA,E;AACA,kB;AACA,E;AACA,2E;AACA,G;AACA,yD;AACA,iC;AACA,sC;;AAEA,+F;AACA,6B;AACA,wE;AACA,yD;AACA,K;AACA,E;;AAEA,G;AACA,yD;AACA,4C;AACA,E;AACA,kB;AACA,E;AACA,4E;AACA,E;AACA,iE;AACA,G;AACA,yD;AACA,6E;AACA,kC;AACA,E;;AAEA,G;AACA,8D;AACA,6C;AACA,E;AACA,e;AACA,E;AACA,kE;AACA,mC;AACA,8B;AACA,G;AACA,+D;AACA,kD;AACA,2B;AACA,qD;AACA,gE;AACA,E;;AAEA,8B;AACA,mE;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,mD;;AAEA,G;AACA,4D;AACA,gF;AACA,E;AACA,qB;AACA,e;AACA,E;AACA,mE;AACA,yB;AACA,G;AACA,iC;AACA,4B;AACA,gC;AACA,C;AACA,8D;AACA,gD;;AAEA,G;AACA,mF;AACA,uC;AACA,E;AACA,e;AACA,E;AACA,6D;AACA,kC;AACA,8B;AACA,G;AACA,wD;AACA,oC;AACA,kE;AACA,E;;AAEA,G;AACA,uD;AACA,+D;AACA,mD;AACA,E;AACA,kB;AACA,yC;AACA,uC;AACA,G;AACA,2D;;AAEA,6B;AACA,mE;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,mD;;AAEA,G;AACA,0D;AACA,gE;AACA,E;AACA,qB;AACA,e;AACA,E;AACA,gE;AACA,yB;AACA,G;AACA,uC;AACA,4B;AACA,4C;AACA,C;AACA,8D;AACA,gD;;AAEA,uC;AACA,yC;;AAEA,G;AACA,8D;AACA,uC;AACA,E;AACA,e;AACA,E;AACA,6D;AACA,kC;AACA,8B;AACA,G;AACA,wD;AACA,8D;AACA,6E;AACA,E;;AAEA,G;AACA,iB;AACA,kB;AACA,G;AACA,2D;;AAEA,6B;AACA,mE;AACA,kB;AACA,0C;AACA,wC;AACA,uC;AACA,E;;AAEA,oG;AACA,kB;AACA,0B;AACA,8B;AACA,8B;AACA,0B;AACA,oC;AACA,gC;AACA,kC;AACA,wC;AACA,oC;AACA,gC;AACA,2B;AACA,E;;AAEA,gN;AACA,mD;AACA,8D;;AAEA,G;AACA,iE;AACA,uE;AACA,uC;AACA,E;AACA,qB;AACA,e;AACA,kE;AACA,oE;AACA,G;AACA,wC;AACA,sD;;AAEA,mD;AACA,e;AACA,yC;;AAEA,0C;AACA,yD;;AAEA,6D;AACA,C;;AAEA,8B;AACA,2B;AACA,2B;;AAEA,iD;AACA,+C;AACA,wD;AACA,4B;AACA,2B;AACA,K;AACA,C;;AAEA,G;AACA,e;AACA,E;AACA,c;AACA,uC;AACA,G;AACA,4C;AACA,6B;AACA,E;;AAEA,G;AACA,e;AACA,E;AACA,c;AACA,wC;AACA,G;AACA,iD;AACA,2B;AACA,E;;AAEA,6B;AACA,sG;AACA,wC;;AAEA,qB;AACA,mD;AACA,gC;AACA,qB;AACA,a;AACA,C;;AAEA,e;AACA,sB;AACA,sB;AACA,oB;AACA,uB;AACA,C;AACA,2C;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;;;AAIA,G;AACA,0D;AACA,oE;AACA,oC;AACA,sD;AACA,G;AACA,a;AACA,kC;AACA,2B;AACA,wB;AACA,2B;AACA,8B;AACA,sB;;AAEA,yD;AACA,6B;AACA,6D;AACA,8C;AACA,wD;AACA,O;AACA,K;;AAEA,wD;AACA,6D;AACA,8C;AACA,mD;AACA,O;AACA,K;;AAEA,uD;AACA,4B;AACA,6D;AACA,8C;AACA,4D;AACA,mE;AACA,8D;AACA,kC;AACA,iC;AACA,iB;AACA,mD;AACA,mD;AACA,W;AACA,mD;AACA,O;AACA,K;;AAEA,oD;AACA,4B;AACA,yC;AACA,oD;AACA,2C;AACA,uH;AACA,W;AACA,4C;AACA,O;AACA,W;AACA,K;AACA,2C;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;AACA,mD;;AAEA,G;AACA,8D;AACA,wE;AACA,E;AACA,0E;AACA,oB;AACA,E;AACA,yE;AACA,c;AACA,E;AACA,qB;AACA,e;AACA,2E;AACA,yC;AACA,qE;AACA,G;AACA,sC;AACA,0C;AACA,2C;;AAEA,yD;AACA,2D;;AAEA,qB;AACA,mC;AACA,0C;AACA,C;;AAEA,4B;AACA,4B;AACA,4B;;AAEA,gD;AACA,kB;;AAEA,G;AACA,uD;AACA,E;AACA,U;AACA,mB;AACA,E;AACA,2E;AACA,G;AACA,sD;AACA,gC;AACA,2B;AACA,oF;AACA,qF;AACA,S;AACA,6C;AACA,K;AACA,E;;AAEA,G;AACA,8C;AACA,E;AACA,qB;AACA,yC;AACA,G;AACA,sD;AACA,iC;AACA,6C;AACA,K;AACA,E;;AAEA,G;AACA,8B;AACA,E;AACA,mB;AACA,gD;AACA,G;AACA,2D;AACA,gC;AACA,gC;AACA,iC;AACA,E;;AAEA,G;AACA,kC;AACA,E;AACA,qB;AACA,gD;AACA,G;AACA,iE;AACA,gC;AACA,kC;AACA,mC;AACA,E;;AAEA,uC;AACA,+B;AACA,oD;AACA,uB;AACA,C;;AAEA,G;AACA,kD;AACA,E;AACA,kB;AACA,sE;AACA,wD;AACA,G;AACA,yD;AACA,+B;AACA,8C;AACA,gD;AACA,qC;AACA,8B;AACA,uD;AACA,E;;AAEA,6B;AACA,mE;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;AACA,mD;AACA,uD;;AAEA,G;AACA,sH;AACA,yH;AACA,E;AACA,kH;AACA,e;AACA,E;AACA,mB;AACA,e;AACA,E;AACA,W;AACA,8C;AACA,oD;AACA,E;AACA,qD;AACA,qC;AACA,6B;AACA,E;AACA,+D;AACA,iE;AACA,2D;AACA,E;AACA,4F;AACA,+L;AACA,0F;AACA,uG;AACA,iJ;AACA,G;AACA,6B;AACA,6D;AACA,4D;;AAEA,0C;;AAEA,0C;AACA,2C;;AAEA,yD;AACA,2D;;AAEA,8D;AACA,6D;AACA,0D;;AAEA,2F;AACA,kE;;AAEA,qB;AACA,wB;AACA,wB;AACA,wB;AACA,qB;AACA,qB;AACA,qB;AACA,oB;AACA,M;;AAEA,+B;AACA,mD;AACA,gC;AACA,+B;AACA,uB;AACA,wB;AACA,iC;AACA,C;;AAEA,6B;AACA,yB;AACA,iB;AACA,a;AACA,+D;AACA,6B;AACA,wB;AACA,E;;AAEA,0B;AACA,0B;;AAEA,0B;;AAEA,G;AACA,2B;AACA,E;AACA,wB;AACA,Y;AACA,G;AACA,8B;AACA,c;AACA,iB;AACA,4E;;AAEA,0B;AACA,0B;;AAEA,6B;AACA,gC;AACA,sB;AACA,uB;;AAEA,+C;AACA,2B;AACA,kB;AACA,qB;AACA,K;AACA,U;AACA,gC;AACA,uB;AACA,0B;AACA,K;;AAEA,gC;AACA,0B;AACA,sC;AACA,gC;AACA,wB;AACA,wB;AACA,oC;AACA,oC;;AAEA,gC;AACA,wF;AACA,4B;AACA,O;;AAEA,6C;AACA,iC;AACA,C;;AAEA,G;AACA,2B;AACA,E;AACA,uB;AACA,Y;AACA,G;AACA,6B;AACA,iC;;AAEA,oC;AACA,kC;;AAEA,0B;AACA,0B;;AAEA,8B;;AAEA,iC;AACA,iC;;AAEA,6B;AACA,yD;AACA,uB;AACA,K;;AAEA,8G;;AAEA,mC;AACA,gB;AACA,kB;;AAEA,2D;AACA,kC;AACA,oC;AACA,0F;AACA,K;AACA,gE;AACA,kC;AACA,oC;AACA,0F;AACA,K;AACA,U;AACA,mD;AACA,mB;AACA,0F;AACA,yF;AACA,U;AACA,0C;AACA,0C;AACA,K;;AAEA,gC;AACA,iC;AACA,sC;AACA,+B;AACA,yB;AACA,yB;AACA,qC;AACA,qC;;AAEA,6E;AACA,oC;AACA,K;;AAEA,gC;AACA,sF;AACA,oB;AACA,O;;AAEA,8C;;AAEA,6B;AACA,8B;AACA,sB;AACA,C;;AAEA,G;AACA,sF;AACA,qC;AACA,E;AACA,sB;AACA,Y;AACA,G;AACA,4B;AACA,4B;;AAEA,iD;AACA,gC;AACA,+B;AACA,uB;AACA,uB;AACA,+B;AACA,C;;AAEA,G;AACA,oF;AACA,wB;AACA,Y;AACA,G;AACA,8B;AACA,2C;;AAEA,gC;AACA,6C;AACA,sC;AACA,uC;AACA,+D;AACA,4D;AACA,0B;AACA,wD;AACA,qD;AACA,kC;AACA,K;AACA,C;;AAEA,G;AACA,wD;AACA,E;AACA,qB;AACA,yC;AACA,G;AACA,wD;AACA,wB;AACA,E;;AAEA,G;AACA,uD;AACA,E;AACA,qB;AACA,E;AACA,kE;AACA,oE;AACA,kF;AACA,+E;AACA,G;AACA,+D;AACA,oD;AACA,E;;AAEA,2B;AACA,+F;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;AACA,+C;AACA,uD;;AAEA,G;AACA,wF;AACA,kD;AACA,iE;AACA,E;AACA,mB;AACA,yB;AACA,e;AACA,oD;AACA,gE;AACA,G;AACA,6B;AACA,6B;;AAEA,4D;AACA,4D;AACA,0C;;AAEA,2B;AACA,+B;AACA,C;;AAEA,6D;AACA,4C;;AAEA,6B;AACA,a;AACA,E;;AAEA,iE;AACA,mF;AACA,2B;;AAEA,qC;AACA,oC;AACA,gD;AACA,6B;AACA,mE;AACA,O;AACA,E;;AAEA,kE;AACA,yE;AACA,qE;;AAEA,mC;AACA,4D;AACA,oC;;AAEA,sC;AACA,gC;;AAEA,sC;AACA,sB;AACA,2B;AACA,2B;AACA,yC;AACA,uB;AACA,+C;AACA,O;AACA,E;;AAEA,G;AACA,wD;AACA,E;AACA,qB;AACA,yC;AACA,G;AACA,wD;AACA,wB;AACA,E;;AAEA,G;AACA,uD;AACA,E;AACA,qB;AACA,E;AACA,yD;AACA,gE;AACA,G;AACA,+D;AACA,oD;AACA,E;;AAEA,2B;AACA,2F;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;AACA,+C;AACA,uD;;AAEA,G;AACA,mG;AACA,sG;AACA,4E;AACA,E;AACA,oB;AACA,yB;AACA,e;AACA,oD;AACA,gE;AACA,G;AACA,8B;AACA,6B;;AAEA,6D;AACA,4D;AACA,0C;;AAEA,oB;AACA,4B;AACA,C;;AAEA,8D;AACA,8C;;AAEA,8B;AACA,a;AACA,E;;AAEA,kE;AACA,oB;AACA,6E;AACA,qE;AACA,qC;AACA,oC;AACA,2B;AACA,uB;AACA,+C;AACA,O;AACA,E;;AAEA,mE;AACA,mC;;AAEA,uE;AACA,qE;;AAEA,8D;AACA,wC;;AAEA,6B;;AAEA,sC;AACA,0B;AACA,2B;AACA,2B;AACA,uB;AACA,+C;AACA,O;;AAEA,oC;AACA,E;;AAEA,G;AACA,wD;AACA,E;AACA,qB;AACA,yC;AACA,G;AACA,yD;AACA,wB;AACA,E;;AAEA,G;AACA,uD;AACA,E;AACA,qB;AACA,E;AACA,yD;AACA,gE;AACA,G;AACA,gE;AACA,oD;AACA,E;;AAEA,4B;AACA,2F;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;AACA,+C;AACA,uD;;AAEA,G;AACA,mG;AACA,uH;AACA,2E;AACA,E;AACA,mB;AACA,yB;AACA,e;AACA,oD;AACA,gE;AACA,G;AACA,6B;AACA,6B;;AAEA,4D;AACA,4D;AACA,0C;;AAEA,0B;AACA,wB;AACA,mD;AACA,C;;AAEA,6D;AACA,4C;;AAEA,6B;AACA,a;AACA,E;;AAEA,mB;AACA,8B;AACA,8B;AACA,C;;AAEA,uC;AACA,iE;AACA,0B;AACA,4E;AACA,qC;AACA,oC;AACA,gD;AACA,kC;AACA,mE;AACA,O;AACA,E;;AAEA,kC;AACA,kE;AACA,mC;;AAEA,yE;AACA,qE;;AAEA,+D;AACA,wD;AACA,oE;;AAEA,sC;AACA,sB;AACA,8B;AACA,4B;AACA,2B;AACA,wB;AACA,+C;AACA,O;;AAEA,uC;AACA,E;;AAEA,G;AACA,wD;AACA,E;AACA,qB;AACA,yC;AACA,G;AACA,wD;AACA,wB;AACA,E;;AAEA,G;AACA,uD;AACA,E;AACA,qB;AACA,E;AACA,yD;AACA,gE;AACA,G;AACA,+D;AACA,oD;AACA,E;;AAEA,2B;AACA,2F;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;AACA,mD;AACA,uC;AACA,uD;;AAEA,G;AACA,sC;AACA,uE;AACA,uC;AACA,kC;AACA,gD;AACA,yB;AACA,E;AACA,4C;AACA,E;AACA,oB;AACA,e;AACA,yD;AACA,2F;AACA,2D;AACA,0G;AACA,yF;AACA,+F;AACA,gF;AACA,G;AACA,8B;AACA,6D;AACA,4D;AACA,0C;;AAEA,qB;AACA,wB;AACA,wB;AACA,wB;AACA,uB;AACA,M;;AAEA,0C;AACA,2C;;AAEA,yD;AACA,2D;;AAEA,wE;AACA,+B;AACA,8B;AACA,8D;AACA,yD;AACA,6B;AACA,4B;AACA,C;;AAEA,8B;AACA,yB;AACA,8B;AACA,iB;AACA,a;AACA,kB;AACA,mB;AACA,wB;AACA,E;;AAEA,2B;AACA,2B;;AAEA,0B;;AAEA,oB;;AAEA,sB;AACA,iF;AACA,iC;;AAEA,gF;AACA,2B;AACA,gB;;AAEA,oC;AACA,0C;AACA,oC;AACA,4B;;AAEA,+C;AACA,K;AACA,C;;AAEA,6B;AACA,4D;;AAEA,4B;AACA,gC;AACA,4E;AACA,gC;AACA,4B;AACA,0C;AACA,wC;AACA,wC;AACA,wC;AACA,wC;AACA,iD;AACA,+B;AACA,yD;AACA,mC;AACA,S;AACA,K;;AAEA,0B;AACA,8C;;AAEA,sF;AACA,sF;;AAEA,8D;AACA,yC;AACA,yC;AACA,K;;AAEA,6B;AACA,yD;AACA,uB;AACA,K;;AAEA,yF;;AAEA,gC;AACA,gC;;AAEA,mC;AACA,gB;AACA,kB;;AAEA,4D;AACA,kC;AACA,+B;AACA,oC;AACA,K;AACA,iE;AACA,kC;AACA,+B;AACA,oC;AACA,K;AACA,U;AACA,mD;AACA,+C;AACA,0C;AACA,0C;AACA,K;;AAEA,gC;AACA,iC;AACA,+B;AACA,sC;AACA,4B;;AAEA,8C;;AAEA,8B;AACA,4B;AACA,C;;AAEA,G;AACA,wD;AACA,E;AACA,qB;AACA,yC;AACA,G;AACA,yD;AACA,wB;AACA,E;;AAEA,G;AACA,uD;AACA,E;AACA,qB;AACA,E;AACA,yD;AACA,kG;AACA,4E;AACA,wE;AACA,4E;AACA,8C;AACA,2E;AACA,G;AACA,gE;AACA,oD;AACA,E;;AAEA,4B;AACA,kH;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;AACA,6C;AACA,mD;AACA,uD;;AAEA,G;AACA,uE;AACA,gG;AACA,kG;AACA,+B;AACA,E;AACA,mB;AACA,e;AACA,E;AACA,W;AACA,8C;AACA,oD;AACA,E;AACA,qD;AACA,qC;AACA,6B;AACA,E;AACA,+D;AACA,iE;AACA,4D;AACA,E;AACA,kE;AACA,oE;AACA,kF;AACA,uG;AACA,iF;AACA,8G;AACA,G;AACA,6B;AACA,6D;AACA,4D;AACA,0C;;AAEA,2C;AACA,2C;AACA,2C;AACA,O;;AAEA,2D;AACA,2D;;AAEA,iE;AACA,+D;AACA,6D;;AAEA,qB;AACA,wB;AACA,wB;AACA,wB;AACA,6B;AACA,6B;AACA,qB;AACA,4B;AACA,M;;AAEA,8C;AACA,C;;AAEA,6B;AACA,yB;AACA,iB;AACA,kB;AACA,6B;AACA,Y;AACA,E;;AAEA,0B;AACA,0B;;AAEA,0B;;AAEA,G;AACA,4B;AACA,wB;AACA,Y;AACA,G;AACA,6B;AACA,iB;AACA,c;AACA,8C;AACA,2B;AACA,qB;AACA,kB;AACA,K;AACA,U;AACA,gC;AACA,0B;AACA,uB;AACA,K;;AAEA,gC;AACA,0B;AACA,sC;AACA,gC;AACA,6B;AACA,6B;AACA,+B;AACA,oC;;AAEA,6C;AACA,C;;AAEA,G;AACA,2B;AACA,uB;AACA,Y;AACA,G;AACA,4B;AACA,+B;;AAEA,kD;AACA,kD;;AAEA,sF;AACA,mE;AACA,kC;;AAEA,+C;AACA,yC;;AAEA,8C;AACA,8C;;AAEA,oD;AACA,oD;;AAEA,6B;AACA,yD;AACA,uB;;AAEA,kE;AACA,0B;AACA,K;;AAEA,uE;;AAEA,mC;AACA,mC;;AAEA,mC;AACA,gB;AACA,kB;;AAEA,2D;AACA,kC;AACA,+B;AACA,oC;AACA,K;AACA,gE;AACA,kC;AACA,+B;AACA,oC;AACA,K;AACA,U;AACA,mD;AACA,+C;AACA,0C;AACA,0C;AACA,K;;AAEA,gC;AACA,iC;AACA,+B;AACA,sC;AACA,8B;AACA,8B;AACA,kC;AACA,uC;;AAEA,8C;AACA,C;;AAEA,G;AACA,0B;AACA,sB;AACA,Y;AACA,G;AACA,2B;AACA,qC;AACA,iD;AACA,C;;AAEA,G;AACA,uD;AACA,E;AACA,qB;AACA,E;AACA,kE;AACA,oE;AACA,kF;AACA,iF;AACA,G;AACA,+D;AACA,oD;AACA,E;;AAEA,G;AACA,wD;AACA,E;AACA,qB;AACA,yC;AACA,G;AACA,wD;AACA,wB;AACA,E;;AAEA,2B;AACA,mH;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;AACA,mD;;AAEA,oB;;AAEA,iD;AACA,Y;AACA,yB;AACA,yB;AACA,sC;AACA,6B;AACA,0B;AACA,oC;AACA,wB;AACA,M;AACA,C;;AAEA,8B;AACA,uD;AACA,0B;;AAEA,2D;AACA,4C;AACA,uD;AACA,kD;AACA,sF;AACA,K;AACA,C;;AAEA,6B;AACA,uD;;AAEA,2D;AACA,4C;AACA,0D;AACA,sB;AACA,8D;AACA,2D;AACA,qD;AACA,S;AACA,K;AACA,C;;AAEA,4B;AACA,gC;;AAEA,2D;AACA,4C;AACA,0D;AACA,sB;AACA,8D;AACA,oD;AACA,uD;AACA,S;AACA,K;;AAEA,2B;AACA,C;;AAEA,0B;AACA,sC;AACA,2C;AACA,2C;AACA,qD;AACA,kC;AACA,qB;AACA,4B;AACA,W;AACA,oC;AACA,K;AACA,C;;AAEA,G;AACA,sE;AACA,4D;AACA,qE;AACA,E;AACA,sB;AACA,e;AACA,oD;AACA,sF;AACA,6G;AACA,G;AACA,gC;AACA,uC;AACA,8C;;AAEA,2B;;AAEA,yC;AACA,0C;;AAEA,wD;AACA,0D;;AAEA,8D;AACA,4D;AACA,0D;AACA,6D;AACA,2D;;AAEA,2B;AACA,C;;AAEA,G;AACA,4C;AACA,W;AACA,gB;AACA,kC;AACA,G;AACA,qD;AACA,gD;AACA,E;;AAEA,8B;AACA,mE;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;AACA,mD;;AAEA,G;AACA,2E;AACA,6B;AACA,gE;AACA,E;AACA,uB;AACA,e;AACA,G;AACA,0B;AACA,0C;AACA,2C;;AAEA,yD;AACA,2D;;AAEA,+B;AACA,sB;AACA,qB;AACA,wB;AACA,+B;AACA,sB;AACA,qB;AACA,wB;;AAEA,mE;AACA,iE;AACA,+D;AACA,kE;AACA,C;;AAEA,qD;AACA,kC;AACA,kC;AACA,oC;AACA,E;;AAEA,wD;AACA,kC;AACA,kC;AACA,oD;AACA,E;;AAEA,sD;AACA,kE;AACA,E;;AAEA,oB;;AAEA,U;AACA,mE;AACA,2D;AACA,4C;AACA,kC;AACA,6C;AACA,sC;AACA,mD;AACA,qC;AACA,S;AACA,uC;AACA,6C;AACA,sC;AACA,mD;AACA,qC;AACA,qC;AACA,S;AACA,K;AACA,E;;AAEA,U;AACA,iE;AACA,4D;AACA,oC;AACA,oC;AACA,iB;AACA,2D;AACA,4C;AACA,iD;AACA,mD;AACA,qC;AACA,mD;AACA,S;AACA,sD;AACA,mD;AACA,qC;AACA,mD;AACA,S;AACA,K;AACA,6C;AACA,E;;AAEA,U;AACA,+D;AACA,2D;AACA,4C;AACA,uF;AACA,2D;AACA,+C;AACA,6D;AACA,yC;AACA,mB;AACA,a;AACA,uC;AACA,8B;AACA,uC;AACA,8B;AACA,S;AACA,K;AACA,E;;AAEA,+B;AACA,mE;AACA,kB;AACA,wC;AACA,0D;AACA,oC;AACA,wC;AACA,oC;AACA,oC;AACA,sC;AACA,oC;AACA,sC;AACA,oC;AACA,0C;AACA,2C;AACA,E;;AAEA,8Q;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,iC;;AAEA,G;AACA,gF;AACA,E;AACA,gB;AACA,e;AACA,E;AACA,4C;AACA,G;AACA,yB;AACA,2B;AACA,S;AACA,oB;AACA,oB;AACA,mB;AACA,U;;AAEA,gB;AACA,C;;AAEA,6B;AACA,mC;;AAEA,G;AACA,sE;AACA,E;AACA,c;AACA,E;AACA,wD;AACA,G;AACA,uC;AACA,uB;AACA,E;;AAEA,G;AACA,8C;AACA,E;AACA,c;AACA,E;AACA,8D;AACA,G;AACA,6C;AACA,yB;AACA,E;;AAEA,G;AACA,8F;AACA,0F;AACA,6B;AACA,E;AACA,yB;AACA,E;AACA,mC;AACA,yF;AACA,G;AACA,8D;AACA,uB;AACA,iB;AACA,iB;AACA,iB;;AAEA,kB;AACA,kB;AACA,kB;;AAEA,oB;AACA,oB;AACA,oB;AACA,oB;AACA,oB;AACA,oB;AACA,oB;AACA,oB;AACA,oB;;AAEA,kC;AACA,iC;AACA,iC;AACA,gC;AACA,M;AACA,E;;AAEA,G;AACA,8E;AACA,mF;AACA,6B;AACA,E;AACA,mB;AACA,E;AACA,2D;AACA,kF;AACA,G;AACA,mD;AACA,wB;AACA,sB;AACA,iC;AACA,uB;AACA,qC;AACA,wB;AACA,yC;AACA,2C;AACA,a;AACA,+B;AACA,S;AACA,K;AACA,iC;AACA,E;;AAEA,G;AACA,0D;AACA,mF;AACA,6B;AACA,E;AACA,oB;AACA,E;AACA,6E;AACA,G;AACA,mD;AACA,oB;AACA,uB;AACA,uC;AACA,2C;AACA,2C;AACA,S;AACA,K;AACA,iC;AACA,E;;AAEA,G;AACA,oB;AACA,E;AACA,gB;AACA,mD;AACA,G;AACA,2C;AACA,4B;AACA,e;AACA,qC;AACA,qC;AACA,yB;AACA,E;;AAEA,wB;AACA,wD;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,iC;;AAEA,G;AACA,oB;AACA,e;AACA,E;AACA,oB;AACA,oB;AACA,oB;AACA,oB;AACA,G;AACA,8B;AACA,4C;AACA,U;AACA,oD;AACA,qD;AACA,qD;AACA,qD;AACA,K;AACA,gB;AACA,C;;AAEA,uC;;AAEA,G;AACA,Y;AACA,c;AACA,wB;AACA,uB;AACA,G;AACA,4C;AACA,4B;AACA,qB;AACA,qB;AACA,qB;AACA,oB;AACA,M;AACA,E;;AAEA,E;AACA,a;AACA,E;AACA,c;AACA,wB;AACA,uB;AACA,G;AACA,4C;AACA,4B;AACA,qB;AACA,qB;AACA,qB;AACA,oB;AACA,M;AACA,E;;AAEA,G;AACA,Y;AACA,E;AACA,uB;AACA,oB;AACA,uB;AACA,G;AACA,8D;AACA,oC;AACA,E;;AAEA,E;AACA,a;AACA,E;AACA,yB;AACA,oB;AACA,uB;AACA,G;AACA,kE;AACA,4B;AACA,mB;AACA,mB;AACA,mB;AACA,kB;AACA,M;AACA,E;;AAEA,E;AACA,a;AACA,E;AACA,mB;AACA,wB;AACA,uB;AACA,G;AACA,sD;AACA,kD;AACA,oB;AACA,oB;AACA,oB;AACA,oB;AACA,iB;AACA,iB;AACA,iB;AACA,sB;;AAEA,4B;AACA,sC;AACA,sC;AACA,sC;AACA,qC;AACA,M;AACA,E;;AAEA,mC;;AAEA,E;AACA,a;AACA,E;AACA,uB;AACA,oB;AACA,uB;AACA,G;AACA,8D;AACA,0B;AACA,yD;AACA,E;;AAEA,E;AACA,a;AACA,E;AACA,kB;AACA,uB;AACA,G;AACA,mD;AACA,sE;AACA,E;;AAEA,E;AACA,a;AACA,E;AACA,iB;AACA,uB;AACA,G;AACA,iD;AACA,mC;AACA,E;;AAEA,E;AACA,a;AACA,E;AACA,e;AACA,uB;AACA,G;AACA,6C;AACA,4B;AACA,gB;AACA,gB;AACA,gB;AACA,e;AACA,M;AACA,E;;AAEA,E;AACA,a;AACA,E;AACA,oB;AACA,yB;AACA,uB;AACA,G;AACA,6D;AACA,iD;AACA,mD;AACA,E;;AAEA,E;AACA,a;AACA,E;AACA,+B;AACA,wB;AACA,oB;AACA,uB;AACA,G;AACA,qF;AACA,sD;AACA,2B;AACA,uB;AACA,2B;AACA,mB;AACA,mB;AACA,mB;AACA,0B;AACA,gB;AACA,E;;AAEA,E;AACA,a;AACA,E;AACA,kB;AACA,oB;AACA,oB;AACA,oB;AACA,oB;AACA,uB;AACA,G;AACA,0D;AACA,qB;AACA,e;AACA,e;AACA,e;AACA,e;AACA,gB;AACA,E;;AAEA,E;AACA,a;AACA,E;AACA,c;AACA,8B;AACA,uB;AACA,G;AACA,4C;AACA,6B;AACA,mB;AACA,sB;AACA,sB;AACA,sB;AACA,K;AACA,U;AACA,qB;AACA,qB;AACA,qB;AACA,qB;AACA,K;AACA,4C;AACA,gB;AACA,E;;AAEA,G;AACA,a;AACA,E;AACA,c;AACA,wB;AACA,uB;AACA,G;AACA,4C;AACA,oB;AACA,E;;AAEA,G;AACA,Y;AACA,E;AACA,gB;AACA,uB;AACA,G;AACA,+C;AACA,gC;AACA,E;;AAEA,G;AACA,Y;AACA,E;AACA,gB;AACA,uB;AACA,G;AACA,+C;AACA,e;AACA,e;AACA,e;AACA,e;AACA,gB;AACA,E;;AAEA,G;AACA,Y;AACA,E;AACA,kB;AACA,wB;AACA,oB;AACA,G;AACA,oD;AACA,gF;AACA,E;;AAEA,G;AACA,Y;AACA,E;AACA,c;AACA,wB;AACA,mB;AACA,G;AACA,4C;AACA,qE;AACA,E;;AAEA,G;AACA,Y;AACA,E;AACA,sB;AACA,mB;AACA,G;AACA,2D;AACA,0B;AACA,E;;AAEA,G;AACA,Y;AACA,E;AACA,e;AACA,mB;AACA,G;AACA,6C;AACA,yC;AACA,E;;AAEA,G;AACA,Y;AACA,E;AACA,iB;AACA,oB;AACA,G;AACA,iD;AACA,yC;AACA,E;;AAEA,G;AACA,Y;AACA,E;AACA,uB;AACA,sB;AACA,G;AACA,6D;AACA,iC;AACA,mB;AACA,mB;AACA,mB;AACA,mB;;AAEA,uE;AACA,Y;AACA,0B;AACA,0B;AACA,0B;AACA,U;AACA,0B;AACA,0B;AACA,0B;AACA,U;AACA,0B;AACA,0B;AACA,0B;AACA,U;AACA,U;AACA,U;AACA,U;AACA,S;AACA,M;AACA,E;;AAEA,kC;;AAEA,G;AACA,Y;AACA,E;AACA,oB;AACA,sB;AACA,G;AACA,uD;AACA,iC;AACA,mB;AACA,mB;AACA,mB;AACA,mB;;AAEA,uC;AACA,+B;AACA,S;AACA,8B;AACA,8B;AACA,6B;AACA,U;AACA,S;AACA,8B;AACA,8B;AACA,6B;AACA,U;AACA,S;AACA,8B;AACA,8B;AACA,6B;AACA,S;AACA,O;AACA,E;;AAEA,mB;;AAEA,G;AACA,Y;AACA,E;AACA,gB;AACA,wB;AACA,oB;AACA,sB;AACA,G;AACA,mD;AACA,c;AACA,iB;AACA,iB;AACA,kB;AACA,gB;;AAEA,2B;AACA,qC;AACA,0C;AACA,sC;AACA,6D;AACA,qD;AACA,K;AACA,U;AACA,8B;AACA,wB;AACA,K;AACA,yF;AACA,E;;AAEA,4B;AACA,wD;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;;;;AAKA,uB;;AAEA,gC;AACA,sC;AACA,C;;AAEA,kC;AACA,iD;AACA,C;;AAEA,G;AACA,8E;AACA,E;AACA,gB;AACA,U;AACA,G;AACA,gB;;AAEA,G;AACA,sE;AACA,8B;AACA,E;AACA,kB;AACA,E;AACA,6C;AACA,6C;AACA,yE;AACA,8F;AACA,G;AACA,gD;AACA,wC;AACA,wC;AACA,4B;AACA,wB;AACA,2E;AACA,sB;AACA,K;AACA,wC;AACA,E;;AAEA,G;AACA,oE;AACA,6B;AACA,E;AACA,gB;AACA,E;AACA,6C;AACA,6C;AACA,gE;AACA,wD;AACA,G;AACA,4C;AACA,wC;AACA,wC;AACA,4B;AACA,wB;AACA,yE;AACA,sB;AACA,K;AACA,sC;AACA,E;;AAEA,G;AACA,6C;AACA,E;AACA,e;AACA,E;AACA,+D;AACA,yC;AACA,G;AACA,mC;AACA,6C;AACA,oC;AACA,E;;AAEA,G;AACA,8C;AACA,E;AACA,e;AACA,E;AACA,kE;AACA,mC;AACA,G;AACA,mC;AACA,6C;AACA,yB;AACA,E;;AAEA,wB;AACA,2C;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;;;AAIA,G;AACA,wB;AACA,E;AACA,mB;AACA,U;AACA,G;AACA,mB;;AAEA,G;AACA,4B;AACA,E;AACA,gB;AACA,8B;AACA,yC;AACA,U;AACA,G;AACA,gD;AACA,yD;AACA,E;;AAEA,G;AACA,uC;AACA,E;AACA,iB;AACA,+C;AACA,U;AACA,G;AACA,2C;AACA,4B;AACA,4C;AACA,+C;AACA,K;AACA,sC;AACA,E;;AAEA,2B;AACA,2C;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;;;;AAKA,G;AACA,uC;AACA,E;AACA,gB;AACA,e;AACA,E;AACA,oC;AACA,oC;AACA,oC;AACA,G;AACA,wB;AACA,+D;AACA,U;AACA,wB;AACA,wB;AACA,wB;AACA,K;AACA,gB;AACA,C;;AAEA,kC;;AAEA,G;AACA,yD;AACA,kG;AACA,E;AACA,c;AACA,2B;AACA,8B;AACA,G;AACA,wC;AACA,kC;AACA,qB;AACA,qB;AACA,oB;AACA,M;AACA,E;;AAEA,G;AACA,0D;AACA,kG;AACA,E;AACA,c;AACA,+B;AACA,qC;AACA,G;AACA,wC;AACA,kC;AACA,qB;AACA,qB;AACA,oB;AACA,M;AACA,E;;AAEA,G;AACA,oC;AACA,kG;AACA,E;AACA,e;AACA,E;AACA,2B;AACA,iC;AACA,G;AACA,0C;AACA,kC;AACA,mB;AACA,mB;AACA,kB;AACA,M;AACA,E;;AAEA,G;AACA,sC;AACA,kG;AACA,E;AACA,c;AACA,E;AACA,2B;AACA,iC;AACA,G;AACA,wC;AACA,4B;AACA,E;;AAEA,G;AACA,2D;AACA,kG;AACA,E;AACA,gB;AACA,qC;AACA,iC;AACA,G;AACA,4C;AACA,mB;AACA,mB;AACA,mB;AACA,iB;AACA,iB;AACA,iB;;AAEA,kC;AACA,wB;AACA,wB;AACA,uB;AACA,M;AACA,E;;AAEA,G;AACA,0D;AACA,iB;AACA,sC;AACA,oB;AACA,G;AACA,8C;AACA,gE;AACA,E;;AAEA,G;AACA,mD;AACA,kG;AACA,kB;AACA,gC;AACA,kC;AACA,G;AACA,oD;AACA,mB;AACA,mB;AACA,mB;;AAEA,mC;AACA,mC;;AAEA,kC;AACA,U;AACA,oC;AACA,mC;AACA,M;AACA,E;;AAEA,G;AACA,mD;AACA,kG;AACA,kB;AACA,gC;AACA,kC;AACA,G;AACA,oD;AACA,mB;AACA,mB;AACA,mB;;AAEA,mC;AACA,mC;;AAEA,kC;AACA,oC;AACA,U;AACA,mC;AACA,M;AACA,E;;AAEA,G;AACA,mD;AACA,kG;AACA,kB;AACA,gC;AACA,kC;AACA,G;AACA,oD;AACA,mB;AACA,mB;AACA,mB;;AAEA,mC;AACA,mC;;AAEA,kC;AACA,oC;AACA,oC;AACA,S;AACA,M;AACA,E;;AAEA,G;AACA,kD;AACA,c;AACA,kC;AACA,+B;AACA,G;AACA,wC;AACA,sD;AACA,E;;AAEA,G;AACA,uC;AACA,sB;AACA,kC;AACA,G;AACA,uD;AACA,0B;AACA,E;;AAEA,G;AACA,+B;AACA,e;AACA,0B;AACA,G;AACA,yC;AACA,yC;AACA,E;;AAEA,G;AACA,oC;AACA,6E;AACA,kG;AACA,oB;AACA,E;AACA,oD;AACA,mB;AACA,G;AACA,yD;AACA,2C;AACA,2B;;AAEA,qF;AACA,sD;AACA,E;;AAEA,G;AACA,sC;AACA,E;AACA,gB;AACA,E;AACA,mB;AACA,G;AACA,2C;AACA,4B;AACA,E;;AAEA,G;AACA,kD;AACA,E;AACA,iB;AACA,E;AACA,oB;AACA,G;AACA,6C;AACA,yC;AACA,E;;AAEA,yB;AACA,e;AACA,e;AACA,e;AACA,gB;AACA,C;;AAEA,2B;AACA,kD;AACA,C;;AAEA,4B;AACA,6C;AACA,C;;AAEA,4B;AACA,oC;AACA,C;;AAEA,G;AACA,iE;AACA,E;AACA,c;AACA,6C;AACA,wB;AACA,G;AACA,wC;AACA,+D;AACA,mE;AACA,wC;AACA,E;;AAEA,2C;AACA,0C;AACA,E;;AAEA,sC;AACA,wC;AACA,E;;AAEA,G;AACA,+E;AACA,E;AACA,c;AACA,uC;AACA,sC;AACA,G;;AAEA,wC;AACA,8D;AACA,sC;AACA,E;;AAEA,G;AACA,6B;AACA,E;AACA,gB;AACA,G;AACA,2C;AACA,oC;AACA,E;;AAEA,G;AACA,oD;AACA,gE;AACA,kG;AACA,E;AACA,c;AACA,iC;AACA,G;AACA,0C;AACA,sE;AACA,2B;AACA,iF;AACA,qD;AACA,E;;AAEA,G;AACA,iD;AACA,kG;AACA,E;AACA,kB;AACA,2C;AACA,oC;AACA,G;AACA,gD;AACA,+B;AACA,E;;AAEA,G;AACA,8C;AACA,kG;AACA,E;AACA,wB;AACA,6C;AACA,oC;AACA,G;AACA,4D;AACA,yB;AACA,wE;AACA,E;;AAEA,G;AACA,yC;AACA,E;AACA,c;AACA,8C;AACA,G;AACA,uC;AACA,oC;AACA,E;;AAEA,qC;AACA,kB;AACA,E;;AAEA,wB;AACA,2C;AACA,kB;AACA,8B;AACA,sC;AACA,8B;AACA,oC;AACA,6B;AACA,E;;AAEA,uH;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,6C;AACA,8D;AACA,mD;AACA,6C;AACA,mD;AACA,+C;AACA,+C;AACA,+D;;AAEA,G;AACA,wD;AACA,2C;AACA,mB;AACA,e;AACA,0D;AACA,sE;AACA,uE;AACA,yG;AACA,yG;AACA,iH;AACA,oF;AACA,sD;AACA,E;AACA,G;AACA,6B;AACA,4D;AACA,0C;;AAEA,oD;AACA,gC;AACA,wB;;AAEA,kF;AACA,0C;AACA,mD;AACA,0D;;AAEA,2B;AACA,C;;AAEA,4D;AACA,kB;AACA,2B;AACA,2B;AACA,E;;AAEA,qC;AACA,qC;;AAEA,6B;;AAEA,6B;AACA,8C;AACA,oB;AACA,uB;AACA,uB;AACA,oB;AACA,oB;AACA,gC;AACA,E;;AAEA,yC;AACA,mC;AACA,sC;AACA,iC;AACA,iC;;AAEA,U;AACA,+D;AACA,+D;;AAEA,c;AACA,oC;AACA,oC;;AAEA,oB;AACA,C;;AAEA,yB;AACA,8B;AACA,mE;AACA,oE;AACA,C;;AAEA,6B;AACA,8B;;AAEA,+B;AACA,wC;AACA,0E;;AAEA,gD;AACA,gD;AACA,gD;;AAEA,iC;;AAEA,uC;AACA,iC;AACA,iC;;AAEA,yB;AACA,wB;AACA,wG;AACA,wC;AACA,K;;AAEA,wB;AACA,wG;AACA,wC;AACA,K;;AAEA,sD;AACA,C;;AAEA,uB;AACA,8B;AACA,kE;AACA,C;;AAEA,wB;AACA,mD;AACA,mD;AACA,+C;AACA,C;;AAEA,G;AACA,uD;AACA,E;AACA,qB;AACA,E;AACA,4E;AACA,G;AACA,+D;AACA,sC;AACA,2C;AACA,sC;AACA,oC;AACA,0C;AACA,uF;AACA,W;AACA,K;AACA,uC;AACA,8C;AACA,8B;AACA,gC;AACA,W;AACA,K;AACA,6E;AACA,6E;AACA,4E;AACA,4E;AACA,E;;AAEA,G;AACA,mE;AACA,E;AACA,sB;AACA,E;AACA,4D;AACA,G;AACA,0D;AACA,qC;AACA,E;;AAEA,G;AACA,mF;AACA,sE;AACA,4C;AACA,E;AACA,8B;AACA,E;AACA,oE;AACA,+F;AACA,mF;AACA,G;AACA,wG;AACA,qC;AACA,gF;AACA,6D;AACA,E;;AAEA,G;AACA,mF;AACA,4C;AACA,E;AACA,sB;AACA,E;AACA,oE;AACA,+F;AACA,mF;AACA,G;AACA,wF;AACA,mE;AACA,4D;AACA,E;;AAEA,G;AACA,+C;AACA,E;AACA,mB;AACA,E;AACA,G;AACA,oD;AACA,wB;AACA,E;;AAEA,G;AACA,2C;AACA,E;AACA,qB;AACA,E;AACA,G;AACA,wD;AACA,yB;AACA,E;;AAEA,G;AACA,+D;AACA,E;AACA,iB;AACA,E;AACA,G;AACA,gD;AACA,iC;AACA,E;;AAEA,G;AACA,iE;AACA,kE;AACA,E;AACA,W;AACA,iB;AACA,E;AACA,2D;AACA,mC;AACA,gE;AACA,qB;AACA,G;AACA,sD;AACA,iC;AACA,Y;AACA,uD;AACA,sB;AACA,M;AACA,E;;AAEA,2B;AACA,iO;AACA,8D;AACA,uD;;AAEA,G;AACA,mF;AACA,e;AACA,e;AACA,0D;AACA,6H;AACA,4F;AACA,iI;AACA,oB;AACA,wI;AACA,oB;AACA,E;AACA,G;AACA,qC;AACA,wD;AACA,4D;;AAEA,0C;;AAEA,oC;AACA,2D;AACA,C;;AAEA,yB;AACA,gB;AACA,qB;AACA,4B;AACA,4B;AACA,E;;AAEA,G;AACA,uD;AACA,E;AACA,qB;AACA,E;AACA,4E;AACA,G;AACA,2D;AACA,oD;AACA,E;;AAEA,G;AACA,8D;AACA,E;AACA,e;AACA,6F;AACA,2G;AACA,G;AACA,4D;AACA,uD;AACA,sC;AACA,E;;AAEA,G;AACA,2D;AACA,E;AACA,e;AACA,6F;AACA,2G;AACA,G;AACA,4D;AACA,uD;AACA,sC;AACA,E;;AAEA,G;AACA,+F;AACA,2B;AACA,E;AACA,c;AACA,6F;AACA,6F;AACA,kG;AACA,G;AACA,iE;AACA,gB;AACA,2D;AACA,E;;AAEA,G;AACA,sB;AACA,E;AACA,e;AACA,G;AACA,wC;AACA,iC;AACA,E;;AAEA,G;AACA,sE;AACA,E;AACA,oB;AACA,mE;AACA,G;AACA,kD;AACA,6C;AACA,E;;AAEA,G;AACA,iE;AACA,kE;AACA,E;AACA,W;AACA,iB;AACA,E;AACA,2D;AACA,mC;AACA,gE;AACA,qB;AACA,G;AACA,kD;AACA,kD;AACA,4D;AACA,uD;AACA,E;;AAEA,uB;AACA,yG;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;;;;AAKA,G;AACA,iD;AACA,yC;AACA,E;AACA,uB;AACA,e;AACA,G;AACA,0B;AACA,qB;AACA,kE;AACA,C;;AAEA,G;AACA,uE;AACA,E;AACA,sB;AACA,E;AACA,uD;AACA,G;AACA,qE;AACA,uD;AACA,E;;AAEA,G;AACA,6C;AACA,E;AACA,yB;AACA,E;AACA,6B;AACA,G;AACA,4E;AACA,8C;AACA,0B;AACA,iC;AACA,E;;AAEA,G;AACA,iE;AACA,kE;AACA,E;AACA,W;AACA,iB;AACA,E;AACA,0D;AACA,mC;AACA,gE;AACA,qB;AACA,G;AACA,yD;AACA,6B;AACA,uB;AACA,4C;AACA,yC;AACA,K;AACA,kB;AACA,E;;AAEA,+B;AACA,2C;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;AAEA,2C;AACA,6C;AACA,8D;AACA,gF;;AAEA,G;AACA,wC;AACA,2F;AACA,+C;AACA,qG;AACA,oE;AACA,sF;AACA,4E;AACA,E;AACA,uB;AACA,e;AACA,yD;AACA,sE;AACA,oC;AACA,2D;AACA,yD;AACA,oE;AACA,mF;AACA,G;AACA,iC;AACA,2E;AACA,+C;AACA,mD;AACA,kD;AACA,iD;AACA,wD;;AAEA,mC;AACA,wC;AACA,oC;AACA,qB;AACA,oB;AACA,mB;AACA,yB;AACA,O;;AAEA,4B;AACA,2B;AACA,0B;AACA,iC;;AAEA,kB;AACA,oE;AACA,4E;AACA,2D;AACA,wD;AACA,qD;AACA,0E;AACA,K;AACA,C;;AAEA,G;AACA,kE;AACA,uC;AACA,E;AACA,uB;AACA,E;AACA,2D;AACA,8E;AACA,wE;AACA,oB;AACA,2E;AACA,+B;AACA,G;AACA,+F;AACA,8D;AACA,gB;AACA,E;;AAEA,G;AACA,yD;AACA,uC;AACA,E;AACA,qB;AACA,E;AACA,0D;AACA,8E;AACA,wE;AACA,oB;AACA,yE;AACA,+B;AACA,G;AACA,yF;AACA,0D;AACA,gB;AACA,E;;AAEA,G;AACA,wD;AACA,uC;AACA,E;AACA,oB;AACA,E;AACA,8E;AACA,8E;AACA,wE;AACA,oB;AACA,yE;AACA,+B;AACA,G;AACA,sF;AACA,0B;AACA,8B;AACA,4C;AACA,oC;AACA,S;AACA,oB;AACA,K;AACA,gC;AACA,+B;AACA,qD;AACA,K;AACA,wD;AACA,gB;AACA,E;;AAEA,G;AACA,2D;AACA,uC;AACA,E;AACA,mB;AACA,E;AACA,6E;AACA,8E;AACA,wE;AACA,oB;AACA,yE;AACA,+B;AACA,G;AACA,oF;AACA,yB;AACA,6B;AACA,2C;AACA,mC;AACA,S;AACA,oB;AACA,K;AACA,+B;AACA,8B;AACA,mD;AACA,K;AACA,sD;AACA,gB;AACA,E;;AAEA,G;AACA,sD;AACA,uC;AACA,E;AACA,kB;AACA,E;AACA,kE;AACA,8E;AACA,wE;AACA,oB;AACA,yE;AACA,+B;AACA,G;AACA,gF;AACA,wB;AACA,4B;AACA,0C;AACA,kC;AACA,S;AACA,oB;AACA,K;AACA,8B;AACA,6B;AACA,iD;AACA,K;AACA,oD;AACA,gB;AACA,E;;AAEA,G;AACA,6D;AACA,uC;AACA,E;AACA,yB;AACA,E;AACA,mF;AACA,iE;AACA,yE;AACA,+B;AACA,G;AACA,8F;AACA,+B;AACA,mC;AACA,iD;AACA,yC;AACA,S;AACA,oB;AACA,K;AACA,qC;AACA,oC;AACA,+D;AACA,K;AACA,kE;AACA,gB;AACA,E;;AAEA,G;AACA,uB;AACA,E;AACA,e;AACA,G;AACA,gD;AACA,gC;AACA,8B;AACA,6B;AACA,4B;AACA,2B;AACA,kC;AACA,E;;AAEA,G;AACA,2D;AACA,E;AACA,uB;AACA,6C;AACA,G;AACA,gE;AACA,sC;AACA,E;;AAEA,G;AACA,wD;AACA,E;AACA,4B;AACA,uC;AACA,G;AACA,0E;AACA,2C;AACA,E;;AAEA,G;AACA,kD;AACA,E;AACA,qB;AACA,2C;AACA,G;AACA,4D;AACA,oC;AACA,E;;AAEA,G;AACA,iD;AACA,E;AACA,oB;AACA,0C;AACA,G;AACA,0D;AACA,4D;AACA,E;;AAEA,G;AACA,gD;AACA,E;AACA,mB;AACA,yC;AACA,G;AACA,wD;AACA,0D;AACA,E;;AAEA,G;AACA,+C;AACA,E;AACA,kB;AACA,wC;AACA,G;AACA,sD;AACA,wD;AACA,E;;AAEA,G;AACA,uD;AACA,E;AACA,yB;AACA,wC;AACA,G;AACA,oE;AACA,sE;AACA,E;;AAEA,G;AACA,sE;AACA,kE;AACA,E;AACA,W;AACA,iB;AACA,E;AACA,2D;AACA,mC;AACA,qE;AACA,qB;AACA,G;AACA,0D;AACA,yC;AACA,E;;AAEA,+B;AACA,qK;AACA,kB;AACA,oC;AACA,4B;AACA,4C;AACA,2C;AACA,E;;AAEA,kH;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,mB;AACA,0C;AACA,G;AACA,mD;;AAEA,G;AACA,oE;AACA,uE;AACA,wB;AACA,E;AACA,iC;AACA,wC;AACA,qC;AACA,4D;AACA,E;AACA,uB;AACA,e;AACA,kC;AACA,G;AACA,iC;AACA,gE;AACA,0C;;AAEA,4D;AACA,yD;AACA,6D;AACA,wE;AACA,6E;;AAEA,+B;AACA,iC;AACA,iC;AACA,gC;AACA,6B;AACA,iC;AACA,gC;AACA,C;;AAEA,Y;AACA,kB;AACA,+B;AACA,uB;;AAEA,mB;;AAEA,gC;AACA,e;AACA,oB;AACA,sB;AACA,e;AACA,E;;AAEA,G;AACA,0C;AACA,e;AACA,a;AACA,U;AACA,G;AACA,iC;;AAEA,O;AACA,uE;AACA,iC;AACA,mB;AACA,O;AACA,wB;;AAEA,O;AACA,qE;AACA,gC;AACA,mB;AACA,O;AACA,0B;;AAEA,O;AACA,uD;AACA,iC;AACA,6B;AACA,mB;AACA,O;AACA,4B;;AAEA,O;AACA,+D;AACA,iC;AACA,oC;AACA,mB;AACA,O;AACA,kC;AACA,E;;AAEA,G;AACA,iB;AACA,E;AACA,qB;AACA,uB;AACA,G;AACA,gE;AACA,+E;AACA,E;;AAEA,G;AACA,sE;AACA,oB;AACA,E;AACA,kB;AACA,qB;AACA,sB;AACA,G;AACA,0D;AACA,wB;AACA,sB;AACA,gC;AACA,+B;AACA,K;AACA,oC;AACA,2C;AACA,gB;AACA,E;;AAEA,G;AACA,mE;AACA,iB;AACA,E;AACA,wB;AACA,E;AACA,qB;AACA,qB;AACA,G;AACA,gE;AACA,+D;AACA,oC;AACA,qB;AACA,2E;AACA,8B;AACA,K;AACA,+D;AACA,E;;AAEA,gC;AACA,mD;AACA,wD;AACA,C;;AAEA,6C;AACA,sE;AACA,yD;;AAEA,6C;;AAEA,0C;AACA,wB;AACA,oC;AACA,0B;AACA,wB;AACA,M;;AAEA,6D;AACA,+B;AACA,C;;AAEA,G;AACA,sE;AACA,0D;AACA,E;AACA,iB;AACA,2E;AACA,kF;AACA,iD;AACA,2B;AACA,G;AACA,2E;AACA,gB;;AAEA,kC;AACA,0B;AACA,+C;AACA,4E;AACA,wB;AACA,K;AACA,+D;AACA,E;;AAEA,G;AACA,sE;AACA,E;AACA,mB;AACA,qE;AACA,sD;AACA,G;AACA,uE;AACA,2D;AACA,E;;AAEA,G;AACA,mE;AACA,mC;AACA,E;AACA,iB;AACA,gE;AACA,G;AACA,sD;AACA,2C;AACA,kC;AACA,sD;AACA,uC;AACA,+B;;AAEA,0B;AACA,+B;AACA,E;;AAEA,G;AACA,wD;AACA,E;AACA,iB;AACA,gE;AACA,yD;AACA,G;AACA,sE;AACA,kD;AACA,sD;AACA,U;AACA,yC;AACA,4C;AACA,gD;AACA,K;AACA,E;;AAEA,G;AACA,mE;AACA,4C;AACA,E;AACA,oB;AACA,G;AACA,0D;AACA,6B;AACA,6B;AACA,6B;AACA,4B;AACA,E;;AAEA,4B;AACA,+B;AACA,C;;AAEA,G;AACA,qD;AACA,E;AACA,mB;AACA,sB;AACA,G;AACA,0D;AACA,8C;AACA,E;;AAEA,G;AACA,0E;AACA,E;AACA,uB;AACA,sC;AACA,G;AACA,gE;AACA,2B;AACA,E;;AAEA,G;AACA,0F;AACA,E;AACA,oB;AACA,gC;AACA,G;AACA,0D;AACA,wB;AACA,E;;AAEA,G;AACA,uE;AACA,E;AACA,oB;AACA,gC;AACA,G;AACA,kF;AACA,wD;AACA,E;;AAEA,G;AACA,kE;AACA,6B;AACA,E;AACA,0B;AACA,gD;AACA,kC;AACA,G;AACA,4E;AACA,wC;AACA,qE;AACA,4C;AACA,E;;AAEA,G;AACA,6D;AACA,gD;AACA,E;AACA,sB;AACA,gD;AACA,kC;AACA,G;AACA,oE;AACA,iC;AACA,kC;AACA,kE;AACA,yC;AACA,E;;AAEA,G;AACA,8D;AACA,yB;AACA,E;AACA,kB;AACA,gD;AACA,kC;AACA,G;AACA,4D;AACA,iC;AACA,6B;AACA,E;;AAEA,8B;AACA,mE;AACA,uE;AACA,C;;AAEA,0B;AACA,kE;AACA,uC;AACA,C;;AAEA,uC;AACA,+D;AACA,uF;AACA,C;;AAEA,iC;AACA,sB;AACA,sD;AACA,2E;AACA,oD;AACA,oB;AACA,K;AACA,C;;AAEA,sC;AACA,+B;AACA,iC;AACA,uE;AACA,C;;AAEA,6C;AACA,sC;AACA,iC;AACA,wC;AACA,4F;AACA,C;;AAEA,wC;AACA,kC;AACA,C;;AAEA,qC;AACA,+B;AACA,oC;AACA,C;;AAEA,yB;AACA,iC;AACA,wC;AACA,mD;AACA,sC;AACA,8C;AACA,uC;AACA,C;;AAEA,gC;AACA,qB;AACA,6B;AACA,qC;AACA,8C;AACA,iC;AACA,O;AACA,kB;AACA,C;;AAEA,6B;AACA,mB;AACA,mC;AACA,0C;AACA,kB;AACA,C;;AAEA,G;AACA,wE;AACA,E;AACA,yB;AACA,gD;AACA,0B;AACA,G;AACA,4D;AACA,sD;AACA,0E;AACA,E;;AAEA,G;AACA,yE;AACA,4B;AACA,E;AACA,mB;AACA,oB;AACA,0B;AACA,G;AACA,0D;AACA,wE;AACA,E;;AAEA,G;AACA,kE;AACA,uD;AACA,E;AACA,e;AACA,G;AACA,gD;AACA,kC;;AAEA,8B;AACA,yB;;AAEA,2C;AACA,4C;;AAEA,8B;;AAEA,wC;AACA,yD;;AAEA,wB;AACA,kC;AACA,gD;AACA,oD;AACA,6C;AACA,Y;AACA,8C;AACA,6B;;AAEA,oC;;AAEA,oC;;AAEA,qE;AACA,E;;AAEA,G;AACA,yD;AACA,E;AACA,qB;AACA,oB;AACA,G;AACA,4D;AACA,4B;AACA,E;;AAEA,G;AACA,yD;AACA,E;AACA,mB;AACA,oB;AACA,G;AACA,0D;AACA,6B;AACA,E;;AAEA,G;AACA,8D;AACA,E;AACA,gB;AACA,G;AACA,kD;AACA,iC;AACA,iC;AACA,qB;AACA,O;AACA,iC;AACA,4B;AACA,E;;AAEA,G;AACA,mE;AACA,E;AACA,e;AACA,G;AACA,gD;AACA,kC;AACA,2B;AACA,mC;AACA,6B;AACA,E;;AAEA,0D;AACA,4C;AACA,wC;AACA,E;;AAEA,qD;AACA,6E;AACA,qC;AACA,E;;AAEA,+B;AACA,mE;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,qC;AACA,gD;AACA,0C;AACA,kD;AACA,0C;AACA,2D;;AAEA,G;AACA,6E;AACA,uE;AACA,mE;AACA,wD;AACA,E;AACA,c;AACA,oB;AACA,e;AACA,G;AACA,wB;AACA,iC;AACA,4B;;AAEA,4C;AACA,wC;AACA,wC;AACA,wC;;AAEA,2E;AACA,mF;AACA,mF;AACA,iE;;AAEA,wE;AACA,+B;;AAEA,gB;AACA,6E;AACA,C;;AAEA,gD;AACA,gD;AACA,iD;;AAEA,mD;AACA,kC;;AAEA,6B;;AAEA,6C;AACA,sD;AACA,+B;AACA,E;;AAEA,G;AACA,kE;AACA,2D;AACA,E;AACA,8B;AACA,G;AACA,qE;AACA,gC;AACA,uC;AACA,E;;AAEA,G;AACA,+D;AACA,E;AACA,gC;AACA,G;AACA,yE;AACA,uF;AACA,E;;AAEA,G;AACA,uE;AACA,sC;AACA,E;AACA,6B;AACA,wD;AACA,4C;AACA,G;AACA,gF;AACA,yE;AACA,E;;AAEA,G;AACA,yD;AACA,E;AACA,oB;AACA,0B;AACA,G;AACA,iD;AACA,kD;AACA,4F;AACA,E;;AAEA,G;AACA,gE;AACA,0B;AACA,E;AACA,gB;AACA,qC;AACA,qC;AACA,4C;AACA,6C;AACA,G;AACA,mD;AACA,8C;AACA,iC;AACA,wC;AACA,0C;AACA,E;;AAEA,G;AACA,yB;AACA,E;AACA,yB;AACA,0C;AACA,G;AACA,4D;AACA,4B;AACA,E;;AAEA,G;AACA,8B;AACA,E;AACA,6B;AACA,2C;AACA,G;AACA,oE;AACA,gB;AACA,gC;AACA,E;;AAEA,G;AACA,8B;AACA,E;AACA,6B;AACA,2C;AACA,G;AACA,oE;AACA,gB;AACA,gC;AACA,E;;AAEA,G;AACA,wD;AACA,2E;AACA,E;AACA,qB;AACA,8B;AACA,6D;AACA,G;AACA,kE;AACA,oD;AACA,wE;AACA,E;;AAEA,G;AACA,yD;AACA,E;AACA,sB;AACA,gC;AACA,G;AACA,2D;AACA,gB;AACA,6C;AACA,E;;AAEA,G;AACA,kE;AACA,6C;AACA,E;AACA,uB;AACA,gC;AACA,G;AACA,uD;AACA,8B;AACA,wC;AACA,0E;AACA,M;AACA,E;;AAEA,G;AACA,mE;AACA,iB;AACA,E;AACA,uB;AACA,a;AACA,gC;AACA,G;AACA,qD;AACA,iD;AACA,sC;AACA,mC;AACA,kC;AACA,E;;AAEA,G;AACA,uD;AACA,E;AACA,mC;AACA,gC;AACA,G;AACA,iF;AACA,kD;AACA,E;;AAEA,G;AACA,kD;AACA,E;AACA,+B;AACA,gC;AACA,G;AACA,yE;AACA,8C;AACA,E;;AAEA,sB;AACA,iM;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,6B;AACA,0C;;AAEA,G;AACA,8D;AACA,U;AACA,E;AACA,gB;AACA,gB;AACA,e;AACA,G;AACA,0B;AACA,4B;AACA,wC;AACA,6B;AACA,C;;AAEA,iD;AACA,sC;;AAEA,G;AACA,2B;AACA,oB;AACA,2B;AACA,G;AACA,oD;AACA,oB;AACA,+C;AACA,+B;AACA,E;;AAEA,uE;AACA,sB;AACA,wB;;AAEA,+B;AACA,iC;AACA,iC;AACA,+B;AACA,O;;AAEA,sC;AACA,gC;AACA,gC;AACA,+B;AACA,O;AACA,E;;AAEA,wB;AACA,6E;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,0C;AACA,gD;AACA,sD;AACA,2D;;AAEA,G;AACA,wE;AACA,yE;AACA,8E;AACA,qD;AACA,E;AACA,kB;AACA,qB;AACA,qB;AACA,E;AACA,0E;AACA,qE;AACA,qE;AACA,iE;AACA,G;AACA,6B;AACA,4B;AACA,4C;;AAEA,gB;AACA,iC;AACA,iC;AACA,8B;;AAEA,sB;AACA,wB;AACA,4B;AACA,6B;;AAEA,kB;AACA,4C;AACA,sB;AACA,wB;;AAEA,qC;;AAEA,kB;AACA,4D;AACA,4D;AACA,6C;;AAEA,gD;;AAEA,mB;AACA,kB;AACA,4B;AACA,kB;AACA,uC;AACA,gC;AACA,yB;AACA,S;AACA,M;AACA,C;;AAEA,4B;AACA,yB;AACA,yB;AACA,Y;AACA,E;;AAEA,+B;AACA,e;AACA,oB;AACA,sB;AACA,e;AACA,E;;AAEA,yB;AACA,mB;;AAEA,G;AACA,oB;AACA,gB;AACA,U;AACA,G;AACA,kC;;AAEA,G;AACA,mC;AACA,E;AACA,mB;AACA,oB;AACA,G;AACA,mD;AACA,6B;AACA,E;;AAEA,G;AACA,mC;AACA,E;AACA,gB;AACA,G;AACA,6C;AACA,iC;AACA,iC;AACA,4B;AACA,E;;AAEA,G;AACA,6B;AACA,E;AACA,e;AACA,G;AACA,2C;AACA,kC;AACA,mC;AACA,6B;AACA,2B;AACA,0C;AACA,E;;AAEA,G;AACA,4B;AACA,E;AACA,sB;AACA,iC;AACA,G;AACA,iE;AACA,gC;AACA,E;;AAEA,G;AACA,oC;AACA,E;AACA,wB;AACA,oB;AACA,G;AACA,8D;AACA,wB;AACA,E;;AAEA,G;AACA,qC;AACA,E;AACA,sB;AACA,2B;AACA,G;AACA,yD;AACA,wB;AACA,+B;AACA,E;;AAEA,G;AACA,oC;AACA,E;AACA,wB;AACA,yB;AACA,G;AACA,6D;AACA,wB;AACA,2B;AACA,E;;AAEA,G;AACA,4C;AACA,E;AACA,sB;AACA,Y;AACA,G;AACA,iE;AACA,gC;AACA,uE;AACA,oB;AACA,E;;AAEA,G;AACA,oC;AACA,E;AACA,wB;AACA,oB;AACA,G;AACA,8D;AACA,wB;AACA,6B;AACA,E;;AAEA,G;AACA,4C;AACA,E;AACA,sB;AACA,2B;AACA,G;AACA,yD;AACA,+B;AACA,E;;AAEA,G;AACA,yC;AACA,E;AACA,mB;AACA,wB;AACA,G;AACA,wD;AACA,0B;AACA,gB;AACA,E;;AAEA,G;AACA,oC;AACA,E;AACA,wB;AACA,4B;AACA,G;AACA,6D;AACA,2B;AACA,E;;AAEA,G;AACA,0C;AACA,E;AACA,kB;AACA,4B;AACA,G;AACA,qD;AACA,qB;AACA,gC;AACA,E;;AAEA,G;AACA,0C;AACA,E;AACA,kB;AACA,wB;AACA,G;AACA,iD;AACA,qB;AACA,E;;AAEA,G;AACA,8B;AACA,E;AACA,gB;AACA,iC;AACA,iC;AACA,G;AACA,+D;AACA,0C;AACA,0C;AACA,E;;AAEA,G;AACA,qD;AACA,E;AACA,qB;AACA,wB;AACA,G;AACA,4D;AACA,+B;AACA,0C;AACA,gB;AACA,E;;AAEA,G;AACA,qE;AACA,E;AACA,uB;AACA,0B;AACA,G;AACA,kE;AACA,iC;AACA,iC;AACA,+D;AACA,E;;AAEA,G;AACA,0D;AACA,E;AACA,4B;AACA,uC;AACA,G;AACA,uE;AACA,2C;AACA,E;;AAEA,G;AACA,iD;AACA,E;AACA,4B;AACA,uC;AACA,G;AACA,uE;AACA,2C;AACA,E;;AAEA,G;AACA,mD;AACA,E;AACA,qB;AACA,a;AACA,uC;AACA,G;AACA,yD;AACA,+B;AACA,+B;AACA,E;;AAEA,G;AACA,sC;AACA,E;AACA,oB;AACA,Y;AACA,G;AACA,qD;AACA,yD;AACA,E;;AAEA,G;AACA,qD;AACA,E;AACA,uB;AACA,gC;AACA,G;AACA,2D;AACA,wB;;AAEA,iC;AACA,mC;;AAEA,+B;AACA,+B;AACA,+B;AACA,qB;AACA,E;;AAEA,G;AACA,qC;AACA,E;AACA,iB;AACA,uB;AACA,sB;AACA,G;AACA,qD;AACA,kC;AACA,0C;AACA,0B;AACA,sB;AACA,E;;AAEA,U;AACA,+B;AACA,2C;AACA,qC;AACA,2D;AACA,C;;AAEA,qD;AACA,mC;AACA,uC;AACA,E;;AAEA,uC;AACA,kC;AACA,0C;AACA,E;;AAEA,+D;AACA,kC;AACA,sD;AACA,E;;AAEA,2C;AACA,kC;AACA,4C;AACA,E;;AAEA,+C;AACA,kC;AACA,8C;AACA,E;;AAEA,0B;AACA,2J;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,6B;AACA,0C;;AAEA,G;AACA,qD;AACA,0B;AACA,E;AACA,mB;AACA,gB;AACA,e;AACA,G;AACA,6B;AACA,4B;AACA,sC;AACA,6B;AACA,C;;AAEA,oD;AACA,4C;;AAEA,G;AACA,yB;AACA,kB;AACA,6C;AACA,G;AACA,sD;AACA,qB;AACA,+B;AACA,E;;AAEA,0E;AACA,sB;AACA,yB;AACA,yB;;AAEA,+B;AACA,+B;AACA,+B;AACA,wC;AACA,O;;AAEA,sC;AACA,iC;AACA,iC;AACA,0C;AACA,O;AACA,E;;AAEA,2B;AACA,6E;AACA,kB;AACA,0B;AACA,8B;AACA,kC;AACA,mC;AACA,E;;AAEA,qG;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,yC;AACA,0C;;AAEA,G;AACA,wE;AACA,E;AACA,oB;AACA,gB;AACA,uB;AACA,iE;AACA,sH;AACA,gJ;AACA,4G;AACA,E;AACA,G;AACA,6B;AACA,4D;AACA,0C;;AAEA,e;AACA,iC;AACA,iC;AACA,iC;AACA,iC;AACA,iC;;AAEA,0B;AACA,C;;AAEA,0D;AACA,4C;;AAEA,6B;AACA,sB;AACA,gB;AACA,Y;AACA,E;;AAEA,gD;AACA,sD;AACA,C;;AAEA,E;AACA,sB;AACA,E;AACA,qB;AACA,2B;AACA,G;AACA,+D;AACA,8D;AACA,E;;AAEA,G;AACA,qE;AACA,E;AACA,0B;AACA,0E;AACA,4D;AACA,0C;AACA,G;AACA,qF;AACA,qC;;AAEA,6B;AACA,6B;AACA,gC;AACA,2B;;AAEA,+B;AACA,8B;AACA,6B;AACA,0C;;AAEA,4B;AACA,2B;AACA,2B;AACA,iC;AACA,iC;;AAEA,8C;AACA,gC;;AAEA,wC;;AAEA,iC;AACA,iC;AACA,oC;AACA,+B;;AAEA,8B;AACA,8B;;AAEA,mC;AACA,uC;AACA,kC;AACA,wB;;AAEA,0B;;AAEA,qC;;AAEA,oC;AACA,qC;AACA,qC;AACA,qC;AACA,sC;AACA,+B;AACA,kB;;AAEA,sE;AACA,mE;AACA,a;;AAEA,0C;AACA,yG;AACA,4E;;AAEA,4C;AACA,4C;;AAEA,0C;AACA,0C;;AAEA,4D;AACA,4D;;AAEA,0F;;AAEA,S;AACA,K;AACA,E;;AAEA,2B;AACA,mF;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,sD;;AAEA,G;AACA,wE;AACA,E;AACA,qB;AACA,gB;AACA,sB;AACA,2B;AACA,G;AACA,uB;AACA,sC;AACA,2C;AACA,2D;AACA,C;;AAEA,E;AACA,sB;AACA,E;AACA,qB;AACA,2B;AACA,G;AACA,gE;AACA,8C;AACA,E;;AAEA,G;AACA,qE;AACA,E;AACA,0B;AACA,G;AACA,qE;;AAEA,G;AACA,oB;AACA,E;AACA,oB;AACA,0B;AACA,G;AACA,uD;AACA,e;AACA,E;;AAEA,4B;AACA,sE;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,yC;AACA,0C;;AAEA,G;AACA,oE;AACA,4D;AACA,E;AACA,8E;AACA,8E;AACA,E;AACA,gB;AACA,gB;AACA,uB;AACA,iE;AACA,mM;AACA,0G;AACA,6F;AACA,8F;AACA,G;AACA,yB;AACA,wD;AACA,0C;;AAEA,e;AACA,0B;AACA,gC;;AAEA,0B;AACA,C;;AAEA,sD;AACA,oC;;AAEA,iC;AACA,+B;;AAEA,yB;AACA,iC;AACA,iB;AACA,M;AACA,6B;AACA,iB;AACA,M;AACA,e;AACA,oB;AACA,E;;AAEA,G;AACA,uB;AACA,E;AACA,qB;AACA,2B;AACA,G;AACA,2D;AACA,8D;AACA,E;;AAEA,G;AACA,0C;AACA,E;AACA,0B;AACA,iE;AACA,sC;AACA,gC;AACA,G;AACA,iF;AACA,+B;AACA,+B;AACA,mB;;AAEA,6B;AACA,0B;AACA,4C;AACA,gC;;AAEA,8C;AACA,8B;;AAEA,8B;AACA,8B;AACA,0B;;AAEA,kB;AACA,iB;;AAEA,2B;AACA,sB;AACA,qB;AACA,S;AACA,c;AACA,uD;AACA,wD;;AAEA,mC;AACA,sC;AACA,S;;AAEA,oB;AACA,oB;AACA,oB;;AAEA,6B;AACA,wD;AACA,wD;AACA,wD;;AAEA,6B;AACA,wD;AACA,wD;AACA,wD;;AAEA,kD;;AAEA,4C;AACA,kF;;AAEA,uC;AACA,mC;AACA,K;AACA,E;;AAEA,uB;AACA,mF;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,yC;AACA,0C;;AAEA,G;AACA,6E;AACA,qC;AACA,E;AACA,E;AACA,mB;AACA,gB;AACA,uB;AACA,iE;AACA,8D;AACA,yG;AACA,uI;AACA,4F;AACA,mG;AACA,E;AACA,G;AACA,4B;AACA,mE;AACA,0C;;AAEA,e;AACA,iC;AACA,iC;AACA,iC;AACA,iC;;AAEA,0B;AACA,C;;AAEA,yD;AACA,0C;;AAEA,4B;AACA,kB;AACA,e;AACA,kB;AACA,e;AACA,oB;AACA,E;;AAEA,+B;;AAEA,G;AACA,uB;AACA,E;AACA,qB;AACA,2B;AACA,G;AACA,8D;AACA,yB;AACA,qG;AACA,sF;AACA,iG;AACA,K;AACA,2E;AACA,6F;AACA,2E;AACA,oF;AACA,E;;AAEA,oC;AACA,sC;AACA,C;;AAEA,G;AACA,0B;AACA,E;AACA,qB;AACA,wB;AACA,G;AACA,2D;AACA,iE;AACA,oC;AACA,E;;AAEA,G;AACA,qE;AACA,E;AACA,0B;AACA,0E;AACA,4D;AACA,0C;AACA,G;AACA,oF;AACA,+B;AACA,8B;AACA,8B;AACA,gC;AACA,gC;;AAEA,4C;AACA,sC;AACA,yC;;AAEA,W;AACA,W;;AAEA,iB;AACA,iC;AACA,6B;AACA,gC;AACA,K;AACA,U;AACA,iC;AACA,e;AACA,K;;AAEA,qC;;AAEA,8C;AACA,8B;;AAEA,+B;AACA,+B;AACA,kC;;AAEA,8B;AACA,iC;;AAEA,yC;;AAEA,qB;AACA,+C;;AAEA,0C;AACA,2B;;AAEA,oC;AACA,kB;AACA,iB;;AAEA,2B;AACA,sB;AACA,sB;AACA,S;AACA,c;AACA,6D;AACA,8D;;AAEA,mC;AACA,sC;AACA,S;;AAEA,uC;AACA,2E;;AAEA,uC;AACA,mC;;AAEA,0D;AACA,K;AACA,E;;AAEA,0B;AACA,mF;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,yC;AACA,0C;;AAEA,G;AACA,wE;AACA,8E;AACA,gD;AACA,E;AACA,oE;AACA,E;AACA,e;AACA,gB;AACA,uB;AACA,iE;AACA,4J;AACA,+M;AACA,yF;AACA,qG;AACA,E;AACA,G;AACA,wB;AACA,0B;;AAEA,mE;AACA,0C;;AAEA,e;AACA,+B;AACA,+B;AACA,iC;AACA,iC;AACA,C;;AAEA,qD;AACA,kC;;AAEA,wB;AACA,iB;AACA,uB;AACA,e;AACA,sB;AACA,E;;AAEA,8B;;AAEA,G;AACA,uB;AACA,E;AACA,qB;AACA,mC;AACA,G;AACA,0D;AACA,uC;AACA,qF;AACA,qG;AACA,iG;AACA,K;AACA,2E;AACA,6F;AACA,2E;AACA,wD;AACA,E;;AAEA,G;AACA,8B;AACA,E;AACA,oB;AACA,4C;AACA,2C;AACA,0B;AACA,G;AACA,gE;AACA,mC;AACA,qC;AACA,wD;AACA,2D;;AAEA,qB;AACA,6C;AACA,gC;AACA,mE;AACA,+C;AACA,K;AACA,kB;AACA,E;;AAEA,G;AACA,2E;AACA,E;AACA,0B;AACA,0E;AACA,4D;AACA,0C;AACA,G;AACA,gF;AACA,oC;AACA,kC;AACA,kC;AACA,qC;AACA,qC;AACA,sC;AACA,yD;AACA,sC;AACA,4C;;AAEA,+C;AACA,gC;;AAEA,iC;AACA,iC;AACA,6B;AACA,oC;;AAEA,kC;AACA,yC;AACA,oB;;AAEA,qB;AACA,wC;AACA,qC;AACA,kC;AACA,oC;AACA,S;AACA,c;AACA,0B;AACA,yB;AACA,S;;AAEA,kB;AACA,iB;;AAEA,wC;AACA,sB;AACA,qB;AACA,S;AACA,c;AACA,8D;AACA,6D;;AAEA,0C;AACA,mC;AACA,S;;AAEA,uC;AACA,mC;AACA,uB;AACA,4C;AACA,2B;;AAEA,gC;AACA,oC;AACA,2E;AACA,2C;;AAEA,sC;;AAEA,qB;AACA,4C;AACA,0C;AACA,S;AACA,K;AACA,E;;AAEA,sB;AACA,mF;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,yC;AACA,0C;;AAEA,G;AACA,sE;AACA,4D;AACA,E;AACA,kB;AACA,gB;AACA,uB;AACA,iE;AACA,0M;AACA,8F;AACA,qG;AACA,G;AACA,2B;AACA,0D;AACA,0C;;AAEA,0B;AACA,iC;;AAEA,0B;AACA,C;;AAEA,wD;AACA,wC;;AAEA,2B;AACA,yB;AACA,e;AACA,oB;AACA,E;;AAEA,iC;AACA,+B;;AAEA,G;AACA,uB;AACA,E;AACA,qB;AACA,2B;AACA,G;AACA,6D;AACA,8D;AACA,E;;AAEA,G;AACA,4C;AACA,E;AACA,0B;AACA,iE;AACA,sC;AACA,gC;AACA,G;AACA,mF;AACA,+B;AACA,yB;AACA,+B;;AAEA,6B;AACA,4C;AACA,gC;;AAEA,8C;AACA,kC;;AAEA,kC;AACA,kC;AACA,8B;;AAEA,kB;AACA,iB;;AAEA,2B;AACA,sB;AACA,qB;AACA,S;AACA,c;AACA,uD;AACA,wD;;AAEA,mC;AACA,sC;AACA,S;;AAEA,oB;AACA,oB;AACA,oB;;AAEA,6B;AACA,wD;AACA,wD;AACA,wD;AACA,gC;;AAEA,qC;AACA,kF;;AAEA,uC;AACA,uC;AACA,K;AACA,E;;AAEA,yB;AACA,mF;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,yC;AACA,0C;;AAEA,G;AACA,0E;AACA,2E;AACA,gF;AACA,kB;AACA,E;AACA,Y;AACA,S;AACA,+B;AACA,2B;AACA,S;AACA,uB;AACA,2B;AACA,qB;AACA,E;AACA,sD;AACA,yE;AACA,E;AACA,e;AACA,gB;AACA,uB;AACA,iE;AACA,uH;AACA,gJ;AACA,6G;AACA,qE;AACA,4F;AACA,oF;AACA,E;AACA,G;AACA,wB;AACA,uD;AACA,0C;;AAEA,e;AACA,6B;AACA,gC;;AAEA,0B;AACA,C;;AAEA,qD;AACA,kC;;AAEA,G;AACA,4B;AACA,e;AACA,a;AACA,U;AACA,G;AACA,mB;;AAEA,O;AACA,0C;AACA,yB;AACA,O;AACA,gB;;AAEA,O;AACA,4E;AACA,wB;AACA,O;AACA,c;AACA,E;;AAEA,wB;AACA,sB;AACA,gB;AACA,a;AACA,uB;AACA,iB;AACA,uC;AACA,E;;AAEA,E;AACA,sB;AACA,E;AACA,qB;AACA,2B;AACA,G;AACA,0D;AACA,uC;AACA,2F;AACA,+F;AACA,K;AACA,0F;AACA,wE;AACA,qE;AACA,iF;AACA,oF;AACA,E;;AAEA,mC;AACA,oB;AACA,C;;AAEA,oC;AACA,gC;AACA,kC;AACA,wB;AACA,C;;AAEA,0C;AACA,8B;AACA,8B;AACA,0B;AACA,gC;AACA,wC;AACA,+C;AACA,+B;;AAEA,mC;AACA,kC;AACA,kB;;AAEA,4B;AACA,qF;AACA,qD;AACA,kD;AACA,K;;AAEA,qB;AACA,qC;AACA,yC;AACA,oG;AACA,qE;;AAEA,6C;AACA,2C;AACA,0D;AACA,kB;AACA,K;;AAEA,yE;AACA,C;;AAEA,yC;AACA,wC;AACA,8B;AACA,gC;;AAEA,6C;AACA,sD;AACA,K;AACA,C;;AAEA,G;AACA,0E;AACA,E;AACA,0B;AACA,0E;AACA,4D;AACA,0C;AACA,G;AACA,gF;AACA,gC;;AAEA,8C;AACA,kC;AACA,kC;AACA,kC;AACA,qC;;AAEA,2E;AACA,qD;;AAEA,2B;AACA,mE;AACA,2D;AACA,S;AACA,K;AACA,E;;AAEA,sB;AACA,mF;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,yC;AACA,6B;AACA,0C;;AAEA,G;AACA,0E;AACA,6E;AACA,yE;AACA,E;AACA,gB;AACA,gB;AACA,uB;AACA,c;AACA,iE;AACA,kF;AACA,4E;AACA,gF;AACA,+I;AACA,4G;AACA,oK;AACA,gF;AACA,G;AACA,yB;AACA,wD;AACA,0C;AACA,sE;;AAEA,0B;AACA,C;;AAEA,sD;AACA,oC;AACA,G;AACA,6B;AACA,e;AACA,2B;AACA,U;AACA,G;AACA,mC;;AAEA,G;AACA,0C;AACA,2C;AACA,wC;AACA,E;AACA,wB;AACA,e;AACA,S;AACA,U;AACA,G;AACA,e;AACA,e;AACA,e;AACA,e;AACA,e;AACA,e;AACA,e;AACA,mC;AACA,0C;AACA,E;;AAEA,yB;AACA,wC;AACA,sD;AACA,0B;AACA,gB;AACA,a;AACA,sB;AACA,wC;AACA,E;;AAEA,qB;AACA,4B;AACA,6B;AACA,4B;AACA,4B;AACA,4B;AACA,2B;AACA,E;;AAEA,2C;AACA,iB;AACA,4B;AACA,6B;AACA,wB;AACA,2C;AACA,kB;AACA,uB;AACA,2C;AACA,kB;AACA,yB;AACA,2C;AACA,kB;AACA,yB;AACA,iD;AACA,kB;AACA,0B;AACA,iD;AACA,kB;AACA,wB;AACA,iD;AACA,kB;AACA,K;AACA,oB;AACA,C;;AAEA,E;AACA,sB;AACA,E;AACA,qB;AACA,2B;AACA,G;AACA,2D;AACA,2B;AACA,8G;AACA,4F;AACA,yF;AACA,wG;AACA,sD;AACA,wE;AACA,wD;AACA,+D;AACA,E;;AAEA,mC;AACA,yB;AACA,qC;;AAEA,4C;AACA,4B;AACA,kC;AACA,mD;AACA,iF;AACA,W;AACA,K;AACA,C;;AAEA,E;AACA,mB;AACA,E;AACA,qB;AACA,2B;AACA,G;AACA,0D;AACA,2C;AACA,2C;;AAEA,uC;AACA,iD;AACA,wC;AACA,O;;AAEA,+B;AACA,iC;AACA,E;;AAEA,sC;AACA,iC;AACA,iC;AACA,O;AACA,8D;AACA,C;;AAEA,G;AACA,2E;AACA,E;AACA,0B;AACA,0E;AACA,4D;AACA,0C;AACA,G;AACA,iF;AACA,iC;AACA,kD;AACA,O;AACA,E;;AAEA,G;AACA,kD;AACA,E;AACA,0B;AACA,6E;AACA,G;AACA,gD;AACA,mC;AACA,oD;AACA,E;;AAEA,G;AACA,gD;AACA,E;AACA,0B;AACA,0B;AACA,G;AACA,mD;AACA,iC;AACA,oC;AACA,gC;AACA,O;AACA,E;;AAEA,G;AACA,gD;AACA,E;AACA,0B;AACA,0B;AACA,G;AACA,mD;AACA,iC;AACA,oC;AACA,gC;AACA,O;AACA,E;;AAEA,G;AACA,gD;AACA,E;AACA,0B;AACA,0B;AACA,G;AACA,mD;AACA,iC;AACA,oC;AACA,gC;AACA,O;AACA,E;;AAEA,uB;AACA,+F;AACA,kB;AACA,oC;AACA,sC;AACA,4B;AACA,kC;AACA,0B;AACA,gC;AACA,0B;AACA,2B;AACA,E;;AAEA,8J;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,+B;;AAEA,G;AACA,yE;AACA,yC;AACA,E;AACA,c;AACA,e;AACA,iB;AACA,iD;AACA,G;AACA,wB;AACA,mE;AACA,0C;;AAEA,qB;AACA,C;;AAEA,gD;AACA,kC;;AAEA,G;AACA,iC;AACA,e;AACA,a;AACA,U;AACA,G;AACA,wB;;AAEA,O;AACA,gD;AACA,wB;AACA,qB;AACA,+B;AACA,kC;AACA,O;AACA,iC;AACA,wB;AACA,M;;AAEA,O;AACA,8D;AACA,2B;AACA,qB;AACA,+B;AACA,kC;AACA,O;AACA,oC;AACA,8C;AACA,K;AACA,E;;AAEA,G;AACA,iC;AACA,e;AACA,a;AACA,U;AACA,G;AACA,wB;;AAEA,O;AACA,gC;AACA,0B;AACA,0B;AACA,mB;AACA,oB;AACA,O;AACA,oB;;AAEA,O;AACA,iC;AACA,+B;AACA,qB;AACA,O;AACA,+C;AACA,E;;AAEA,G;AACA,2D;AACA,E;AACA,qB;AACA,sE;AACA,G;AACA,0D;AACA,gD;AACA,qD;AACA,qC;AACA,c;AACA,iB;;AAEA,sD;AACA,kC;AACA,oE;AACA,mC;AACA,K;AACA,E;;AAEA,G;AACA,uB;AACA,E;AACA,qB;AACA,2B;AACA,G;AACA,0D;AACA,8D;AACA,E;;AAEA,sB;AACA,uD;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,0C;AACA,sD;;AAEA,G;AACA,oB;AACA,E;AACA,e;AACA,qB;AACA,e;AACA,G;AACA,uB;AACA,mC;AACA,2C;AACA,2D;AACA,C;;AAEA,G;AACA,2B;AACA,E;AACA,qB;AACA,2B;AACA,G;AACA,2D;AACA,8C;AACA,E;;AAEA,G;AACA,sD;AACA,E;AACA,qB;AACA,mE;AACA,G;AACA,2D;AACA,gC;AACA,sB;AACA,+C;AACA,K;AACA,E;;AAEA,G;AACA,yC;AACA,E;AACA,oB;AACA,0B;AACA,G;AACA,kD;AACA,e;AACA,E;;AAEA,uB;AACA,6F;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,+B;AACA,0C;;AAEA,G;AACA,qE;AACA,iE;AACA,E;AACA,oB;AACA,gB;AACA,kB;AACA,sD;AACA,G;AACA,6B;AACA,4D;AACA,0C;;AAEA,e;AACA,8B;;AAEA,qB;AACA,C;;AAEA,qD;AACA,4C;AACA,G;AACA,sC;AACA,e;AACA,a;AACA,U;AACA,G;AACA,6B;;AAEA,O;AACA,8B;AACA,wB;AACA,qB;AACA,sD;AACA,+D;AACA,O;AACA,kC;AACA,iD;AACA,M;;AAEA,O;AACA,sF;AACA,uB;AACA,qB;AACA,sD;AACA,6D;AACA,O;AACA,iC;AACA,+C;AACA,yE;AACA,2E;AACA,M;;AAEA,O;AACA,yC;AACA,yB;AACA,qB;AACA,sD;AACA,qE;AACA,O;AACA,mC;AACA,oC;AACA,M;;AAEA,O;AACA,iD;AACA,yB;AACA,qB;AACA,sD;AACA,qE;AACA,O;AACA,mC;AACA,sC;AACA,K;AACA,E;;AAEA,G;AACA,sC;AACA,e;AACA,a;AACA,U;AACA,G;AACA,6B;;AAEA,O;AACA,gC;AACA,0B;AACA,0B;AACA,mB;AACA,iB;AACA,O;AACA,iB;;AAEA,O;AACA,6D;AACA,M;AACA,wB;AACA,mB;AACA,oB;AACA,gB;AACA,O;AACA,uB;;AAEA,O;AACA,uC;AACA,uB;AACA,kB;AACA,6B;AACA,O;AACA,0B;;AAEA,O;AACA,yE;AACA,wB;AACA,mB;AACA,iB;AACA,O;AACA,e;;AAEA,O;AACA,yC;AACA,+B;AACA,qB;AACA,mB;AACA,wB;AACA,O;AACA,mB;;AAEA,O;AACA,wD;AACA,+B;AACA,qB;AACA,O;AACA,qD;AACA,E;;AAEA,E;AACA,sB;AACA,E;AACA,qB;AACA,2B;AACA,G;AACA,+D;AACA,uC;AACA,qG;AACA,iG;AACA,8B;AACA,K;AACA,8D;AACA,E;;AAEA,G;AACA,2D;AACA,E;AACA,qB;AACA,kE;AACA,uD;AACA,G;AACA,uE;AACA,mC;AACA,iC;AACA,gC;;AAEA,uC;AACA,wD;AACA,kC;AACA,qC;AACA,uC;AACA,uC;AACA,4C;;AAEA,+B;;AAEA,gC;AACA,iB;AACA,W;AACA,W;AACA,U;;AAEA,sB;AACA,mC;;AAEA,0C;;AAEA,2B;AACA,+B;;AAEA,iC;AACA,wB;;AAEA,mC;AACA,mF;AACA,uC;AACA,S;AACA,K;;AAEA,E;;AAEA,2B;AACA,8E;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,6B;;AAEA,G;AACA,4D;AACA,2D;AACA,E;AACA,wB;AACA,e;AACA,iB;AACA,iD;AACA,G;AACA,kC;AACA,6B;AACA,C;;AAEA,yD;AACA,sD;;AAEA,sD;AACA,sD;;AAEA,G;AACA,sC;AACA,e;AACA,a;AACA,U;AACA,G;AACA,kC;;AAEA,O;AACA,uD;AACA,wB;AACA,qB;AACA,sC;AACA,kC;AACA,O;AACA,wC;AACA,+B;AACA,M;;AAEA,O;AACA,qE;AACA,2B;AACA,qB;AACA,sC;AACA,kC;AACA,O;AACA,2C;AACA,4D;AACA,K;AACA,E;;AAEA,G;AACA,uE;AACA,E;AACA,qB;AACA,sE;AACA,G;AACA,oE;AACA,+C;AACA,oD;AACA,oC;;AAEA,kD;;AAEA,c;AACA,iB;;AAEA,sD;AACA,kC;AACA,+E;AACA,oC;AACA,K;AACA,E;;AAEA,E;AACA,sB;AACA,E;AACA,qB;AACA,2B;AACA,G;AACA,oE;AACA,8D;AACA,E;;AAEA,gC;AACA,sD;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,wB;AACA,+B;AACA,iC;AACA,kD;;AAEA,G;AACA,oE;AACA,yE;AACA,2E;AACA,2E;AACA,E;AACA,2B;AACA,gB;AACA,mB;AACA,kD;AACA,G;AACA,oC;AACA,+B;AACA,C;;AAEA,6D;AACA,0D;;AAEA,0D;AACA,0D;;AAEA,a;AACA,iB;;AAEA,2B;AACA,+B;AACA,6D;AACA,C;;AAEA,yB;AACA,+B;AACA,qE;AACA,C;;AAEA,kB;AACA,8B;AACA,4B;AACA,C;;AAEA,sE;AACA,gC;AACA,8B;;AAEA,uC;AACA,uF;AACA,mG;AACA,K;;AAEA,sC;AACA,6C;AACA,K;;AAEA,6F;AACA,2E;AACA,gG;AACA,oF;;AAEA,qB;AACA,mD;AACA,E;;AAEA,G;AACA,8D;AACA,E;AACA,qB;AACA,kE;AACA,G;AACA,sE;AACA,2B;AACA,+B;AACA,yB;;AAEA,sC;AACA,kC;AACA,oC;AACA,gC;AACA,8C;AACA,sC;;AAEA,U;AACA,e;AACA,a;AACA,U;;AAEA,0C;AACA,4B;;AAEA,iD;AACA,wC;;AAEA,+B;;AAEA,uE;AACA,6B;AACA,uB;AACA,uB;;AAEA,8E;;AAEA,iF;;AAEA,kC;AACA,K;AACA,E;;AAEA,G;AACA,4D;AACA,E;AACA,oB;AACA,kE;AACA,G;AACA,oE;AACA,mC;AACA,qC;AACA,qC;AACA,wC;;AAEA,qB;AACA,8C;AACA,gC;AACA,sE;AACA,+C;AACA,K;AACA,kB;AACA,E;;AAEA,kC;AACA,gG;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,mB;;AAEA,+B;AACA,0C;;AAEA,G;AACA,yE;AACA,wE;AACA,E;AACA,iB;AACA,gB;AACA,kB;AACA,kD;AACA,G;AACA,0B;AACA,qB;;AAEA,mE;AACA,0C;;AAEA,e;AACA,kC;;AAEA,qB;AACA,C;;AAEA,kD;AACA,sC;;AAEA,a;AACA,iB;AACA,qB;;AAEA,G;AACA,mC;AACA,e;AACA,a;AACA,U;AACA,G;AACA,0B;;AAEA,O;AACA,kE;AACA,kD;AACA,sB;AACA,qB;AACA,uE;AACA,sD;AACA,sC;AACA,O;AACA,iC;AACA,mC;AACA,gE;AACA,6C;AACA,M;;AAEA,O;AACA,yD;AACA,yD;AACA,sB;AACA,qB;AACA,uE;AACA,sC;AACA,O;AACA,2B;AACA,oB;AACA,K;AACA,E;;AAEA,G;AACA,mC;AACA,e;AACA,a;AACA,U;AACA,G;AACA,0B;;AAEA,O;AACA,4E;AACA,+B;AACA,iC;AACA,wB;AACA,mB;AACA,mB;AACA,O;AACA,iB;;AAEA,O;AACA,iC;AACA,wB;AACA,+D;AACA,iE;AACA,8B;AACA,mB;AACA,mB;AACA,O;AACA,uB;;AAEA,O;AACA,oC;AACA,+B;AACA,wB;AACA,mB;AACA,iB;AACA,O;AACA,e;;AAEA,O;AACA,2D;AACA,+B;AACA,wB;AACA,mB;AACA,wB;AACA,O;AACA,yB;;AAEA,O;AACA,uE;AACA,M;AACA,wB;AACA,kB;AACA,gB;AACA,O;AACA,uB;;AAEA,O;AACA,+B;AACA,+B;AACA,qB;AACA,O;AACA,+C;AACA,E;;AAEA,2B;AACA,+B;AACA,6D;AACA,C;;AAEA,yB;AACA,+B;AACA,qE;AACA,C;;AAEA,kB;AACA,8B;AACA,4B;AACA,C;;AAEA,G;AACA,uB;AACA,E;AACA,qB;AACA,0B;AACA,G;AACA,4D;AACA,gC;AACA,8B;;AAEA,uC;AACA,qG;AACA,mF;AACA,+F;AACA,K;;AAEA,sC;AACA,0C;AACA,wC;AACA,6I;AACA,S;AACA,6C;AACA,K;;AAEA,6F;AACA,2E;AACA,gG;AACA,oF;;AAEA,qB;AACA,mD;AACA,E;;AAEA,G;AACA,6D;AACA,E;AACA,qB;AACA,iE;AACA,G;AACA,oE;AACA,2B;AACA,yB;AACA,+B;;AAEA,sC;AACA,kC;AACA,oC;AACA,sC;AACA,mD;AACA,8C;;AAEA,U;AACA,e;AACA,W;AACA,W;AACA,a;AACA,U;;AAEA,0C;AACA,4B;AACA,6B;AACA,6B;;AAEA,iC;AACA,wC;;AAEA,+B;;AAEA,uE;AACA,6B;AACA,uB;AACA,uB;;AAEA,kE;AACA,wB;;AAEA,oB;AACA,qF;AACA,yD;;AAEA,iC;AACA,sD;AACA,K;AACA,E;;AAEA,G;AACA,iD;AACA,E;AACA,oB;AACA,mE;AACA,8D;AACA,G;AACA,kE;AACA,mC;AACA,qC;AACA,kE;AACA,wC;;AAEA,qB;AACA,6C;AACA,gC;AACA,mE;AACA,+C;AACA,K;AACA,kB;AACA,E;;AAEA,wB;AACA,8E;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,+B;AACA,0C;;AAEA,G;AACA,yE;AACA,wE;AACA,E;AACA,sB;AACA,gB;AACA,kB;AACA,kD;AACA,G;AACA,+B;AACA,qB;;AAEA,8D;AACA,0C;;AAEA,e;AACA,mC;AACA,C;;AAEA,uD;AACA,gD;;AAEA,G;AACA,mC;AACA,e;AACA,a;AACA,U;AACA,G;AACA,sB;AACA,O;AACA,oC;AACA,0B;AACA,qB;AACA,gE;AACA,0D;AACA,oE;AACA,sC;AACA,O;AACA,qC;AACA,+C;AACA,M;;AAEA,O;AACA,mB;AACA,wB;AACA,qB;AACA,yD;AACA,sC;AACA,O;AACA,0B;AACA,+B;AACA,M;;AAEA,O;AACA,yC;AACA,wB;AACA,qB;AACA,yD;AACA,sC;AACA,O;AACA,0B;AACA,wC;AACA,M;;AAEA,O;AACA,iE;AACA,iC;AACA,qB;AACA,gE;AACA,6E;AACA,mE;AACA,sC;AACA,O;AACA,4C;AACA,qD;AACA,K;AACA,E;;AAEA,G;AACA,wC;AACA,e;AACA,a;AACA,U;AACA,G;AACA,+B;;AAEA,O;AACA,gC;AACA,yB;AACA,0B;AACA,mB;AACA,mB;AACA,O;AACA,mB;;AAEA,O;AACA,0B;AACA,0B;AACA,uB;AACA,qB;AACA,O;AACA,uC;AACA,E;;AAEA,G;AACA,uB;AACA,E;AACA,qB;AACA,2B;AACA,G;AACA,iE;AACA,iF;AACA,sC;AACA,2C;AACA,wD;AACA,K;AACA,E;;AAEA,kC;AACA,oC;;AAEA,oB;AACA,6B;AACA,oF;AACA,0H;AACA,kB;AACA,oC;AACA,kF;AACA,uH;AACA,kB;AACA,K;AACA,C;;AAEA,G;AACA,sE;AACA,E;AACA,qB;AACA,iE;AACA,G;AACA,iE;AACA,2B;AACA,yC;AACA,mC;;AAEA,U;AACA,e;;AAEA,0C;AACA,4B;AACA,wD;AACA,gE;AACA,iC;AACA,K;AACA,E;;AAEA,+D;AACA,mC;AACA,oC;;AAEA,mB;;AAEA,U;AACA,e;AACA,oB;AACA,6B;AACA,oE;AACA,kB;AACA,2B;AACA,iD;AACA,oC;AACA,iD;AACA,a;AACA,kB;AACA,oC;AACA,iD;AACA,oC;AACA,4E;AACA,a;AACA,kB;AACA,K;AACA,oC;AACA,kB;AACA,E;;AAEA,6B;AACA,8E;AACA,kB;AACA,0B;AACA,4B;AACA,oC;AACA,8C;AACA,kD;AACA,8B;AACA,uC;AACA,E;;AAEA,mK;AACA,kB;AACA,4C;AACA,8B;AACA,wC;AACA,8B;AACA,uC;AACA,E;;AAEA,iI;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;;;;AAKA,G;AACA,mD;AACA,qD;AACA,E;AACA,wE;AACA,E;AACA,2B;AACA,uB;AACA,E;AACA,+D;AACA,E;AACA,uB;AACA,6B;AACA,E;AACA,yB;AACA,e;AACA,yC;AACA,G;AACA,yB;;AAEA,E;AACA,qE;AACA,2B;AACA,E;AACA,4B;AACA,6B;AACA,gC;AACA,G;AACA,0E;AACA,0B;AACA,6B;AACA,uB;;AAEA,2B;;AAEA,iC;AACA,c;AACA,E;;AAEA,E;AACA,4D;AACA,uB;AACA,E;AACA,4B;AACA,6B;AACA,gC;AACA,G;AACA,0E;AACA,0B;AACA,0B;;AAEA,6B;AACA,E;;AAEA,E;AACA,4E;AACA,uB;AACA,E;AACA,mC;AACA,iD;AACA,gC;AACA,G;AACA,wF;AACA,iC;AACA,wB;;AAEA,2B;;AAEA,6B;AACA,c;AACA,E;;AAEA,E;AACA,uE;AACA,6B;AACA,E;AACA,+B;AACA,iD;AACA,gC;AACA,G;AACA,gF;AACA,6B;AACA,iC;;AAEA,2B;AACA,yD;AACA,6B;AACA,E;;AAEA,iC;AACA,2C;AACA,kB;AACA,+C;AACA,E;;AAEA,iE;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;AAEA,yC;;AAEA,G;AACA,gD;AACA,oC;AACA,E;AACA,uB;AACA,mB;AACA,e;AACA,yD;AACA,kF;AACA,G;AACA,iC;AACA,6E;AACA,mC;AACA,6D;AACA,wD;AACA,2B;AACA,qD;AACA,sD;AACA,K;AACA,gC;AACA,C;;AAEA,2D;AACA,oD;AACA,+C;AACA,wD;;AAEA,G;AACA,2E;AACA,E;AACA,qB;AACA,E;AACA,G;AACA,8D;;AAEA,G;AACA,uE;AACA,iD;AACA,E;AACA,W;AACA,iB;AACA,yD;AACA,G;AACA,0D;AACA,2B;AACA,2C;AACA,4C;AACA,K;AACA,mC;AACA,6E;AACA,mC;AACA,oC;AACA,K;AACA,E;;AAEA,G;AACA,gE;AACA,E;AACA,W;AACA,iB;AACA,E;AACA,gE;AACA,G;AACA,0D;AACA,8B;;AAEA,0C;AACA,4C;;AAEA,mC;AACA,6E;AACA,yB;AACA,0B;AACA,K;AACA,E;;AAEA,G;AACA,uC;AACA,E;AACA,qB;AACA,+C;AACA,G;AACA,qE;AACA,gC;AACA,oH;AACA,E;;AAEA,G;AACA,mD;AACA,E;AACA,mB;AACA,yD;AACA,sE;AACA,G;AACA,sE;AACA,qD;AACA,sE;AACA,8B;AACA,wD;AACA,yD;AACA,K;AACA,E;;AAEA,+B;AACA,+D;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;AAEA,yC;AACA,yC;;AAEA,G;AACA,iE;AACA,yD;AACA,oC;AACA,6D;AACA,0B;AACA,E;AACA,iE;AACA,E;AACA,Y;AACA,E;AACA,+D;AACA,gE;AACA,E;AACA,0B;AACA,mB;AACA,e;AACA,iE;AACA,kF;AACA,gG;AACA,yF;AACA,G;AACA,oC;AACA,gC;AACA,oD;AACA,kD;AACA,4D;AACA,wC;AACA,gD;AACA,qC;AACA,C;;AAEA,8D;AACA,0D;AACA,+C;AACA,2D;;AAEA,G;AACA,+C;AACA,E;AACA,c;AACA,E;AACA,wC;AACA,oF;AACA,G;AACA,iD;AACA,2D;AACA,E;;AAEA,G;AACA,2E;AACA,E;AACA,W;AACA,iB;AACA,E;AACA,0D;AACA,G;AACA,uD;AACA,4D;AACA,2D;AACA,E;;AAEA,G;AACA,uE;AACA,E;AACA,W;AACA,iB;AACA,yD;AACA,G;AACA,uD;AACA,uC;AACA,2D;AACA,E;;AAEA,G;AACA,2E;AACA,4E;AACA,yB;AACA,E;AACA,W;AACA,iB;AACA,0C;AACA,2C;AACA,uC;AACA,2C;AACA,yC;AACA,sD;AACA,G;AACA,gG;AACA,0E;AACA,iE;AACA,oI;AACA,+B;AACA,4C;AACA,K;AACA,0B;AACA,kB;AACA,E;;AAEA,kC;AACA,mF;AACA,qD;;AAEA,wC;AACA,qD;AACA,4C;AACA,C;;AAEA,2E;AACA,kE;;AAEA,oD;;AAEA,iE;AACA,mD;AACA,oE;AACA,E;;AAEA,sC;AACA,kE;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;AAEA,yC;;AAEA,G;AACA,sC;AACA,oC;AACA,E;AACA,sB;AACA,E;AACA,mB;AACA,e;AACA,yD;AACA,G;AACA,gC;AACA,+B;AACA,mC;AACA,C;;AAEA,kB;AACA,oB;AACA,mB;AACA,wB;;AAEA,mD;AACA,wB;AACA,E;;AAEA,qD;AACA,yB;AACA,E;;AAEA,iD;AACA,kB;AACA,oB;AACA,mB;AACA,E;;AAEA,6C;AACA,Y;AACA,2B;AACA,+B;AACA,6B;AACA,M;AACA,E;;AAEA,0D;AACA,kD;AACA,2C;AACA,uD;;AAEA,G;AACA,oD;AACA,qB;AACA,2B;AACA,G;AACA,mE;AACA,oD;AACA,0B;AACA,yC;AACA,yC;AACA,2C;AACA,0C;AACA,gB;AACA,mC;AACA,S;AACA,K;;AAEA,0C;AACA,0B;AACA,gC;AACA,2B;AACA,K;AACA,U;AACA,+B;AACA,K;;AAEA,8B;AACA,8B;AACA,E;;AAEA,G;AACA,4E;AACA,E;AACA,W;AACA,iB;AACA,yD;AACA,G;AACA,yD;AACA,oD;AACA,4D;AACA,8B;AACA,uC;AACA,kC;AACA,K;;AAEA,sC;AACA,E;;AAEA,G;AACA,gE;AACA,E;AACA,W;AACA,iB;AACA,E;AACA,gE;AACA,G;AACA,yD;AACA,oB;AACA,E;;AAEA,8B;AACA,+D;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;AAEA,yC;;AAEA,G;AACA,0D;AACA,oC;AACA,E;AACA,sB;AACA,mB;AACA,e;AACA,yD;AACA,sH;AACA,oH;AACA,gD;AACA,G;AACA,gC;AACA,kD;AACA,4C;AACA,+C;AACA,2C;;AAEA,mC;;AAEA,4C;AACA,sD;AACA,8D;AACA,kB;AACA,C;AACA,0D;AACA,kD;;AAEA,6C;AACA,uD;;AAEA,G;AACA,mD;AACA,E;AACA,yB;AACA,uD;AACA,yD;AACA,G;AACA,sE;AACA,4B;AACA,8B;AACA,gB;AACA,E;;AAEA,G;AACA,iE;AACA,E;AACA,gB;AACA,yD;AACA,G;AACA,iD;AACA,yD;AACA,gB;AACA,E;;AAEA,G;AACA,yD;AACA,E;AACA,e;AACA,yD;AACA,G;AACA,+C;AACA,wD;AACA,gB;AACA,E;;AAEA,G;AACA,8B;AACA,wC;AACA,E;AACA,mB;AACA,4D;AACA,yD;AACA,G;AACA,0D;AACA,sB;AACA,8B;AACA,gB;AACA,E;;AAEA,G;AACA,6C;AACA,wC;AACA,E;AACA,kB;AACA,wE;AACA,yD;AACA,G;AACA,wD;AACA,qB;AACA,8B;AACA,gB;AACA,E;;AAEA,G;AACA,4E;AACA,E;AACA,mB;AACA,oC;AACA,G;AACA,uD;AACA,8B;AACA,yC;AACA,K;AACA,U;AACA,2B;AACA,K;AACA,E;;AAEA,G;AACA,yC;AACA,wC;AACA,E;AACA,kB;AACA,mC;AACA,yD;AACA,G;AACA,wD;AACA,qB;AACA,8B;AACA,gB;AACA,E;;AAEA,G;AACA,yC;AACA,E;AACA,kB;AACA,mC;AACA,G;AACA,qD;AACA,sB;AACA,E;;AAEA,G;AACA,uE;AACA,E;AACA,W;AACA,iB;AACA,yD;AACA,G;AACA,yD;AACA,yE;AACA,+B;AACA,6B;AACA,6B;AACA,E;;AAEA,8B;AACA,+D;AACA,6C;;AAEA,sC;AACA,wC;AACA,0B;AACA,qE;AACA,C;;AAEA,qE;AACA,8D;;AAEA,6D;AACA,2B;AACA,E;;AAEA,+D;AACA,oD;AACA,yD;AACA,E;;AAEA,oC;AACA,8D;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;AAEA,yC;;AAEA,G;AACA,6D;AACA,oC;AACA,E;AACA,yB;AACA,mB;AACA,e;AACA,yD;AACA,uH;AACA,gD;AACA,gE;AACA,4E;AACA,+D;AACA,4D;AACA,G;AACA,mC;AACA,kD;AACA,4C;AACA,2C;AACA,2C;AACA,2C;AACA,2C;;AAEA,mC;AACA,4C;AACA,C;AACA,6D;AACA,wD;;AAEA,mD;AACA,0D;;AAEA,G;AACA,mD;AACA,E;AACA,yB;AACA,uD;AACA,4D;AACA,G;AACA,yE;AACA,4B;AACA,8B;AACA,gB;AACA,E;;AAEA,G;AACA,iE;AACA,E;AACA,gB;AACA,4D;AACA,G;AACA,oD;AACA,yD;AACA,gB;AACA,E;;AAEA,G;AACA,yD;AACA,E;AACA,gB;AACA,4D;AACA,G;AACA,kD;AACA,wD;AACA,gB;AACA,E;;AAEA,G;AACA,6B;AACA,wC;AACA,E;AACA,mB;AACA,+D;AACA,4D;AACA,G;AACA,6D;AACA,sB;AACA,8B;AACA,gB;AACA,E;;AAEA,G;AACA,6E;AACA,E;AACA,mB;AACA,oC;AACA,G;AACA,0D;AACA,8B;AACA,yC;AACA,K;AACA,U;AACA,2B;AACA,K;AACA,E;;AAEA,G;AACA,yC;AACA,wC;AACA,E;AACA,kB;AACA,mC;AACA,4D;AACA,G;AACA,2D;AACA,qB;AACA,8B;AACA,gB;AACA,E;;AAEA,G;AACA,yC;AACA,E;AACA,kB;AACA,mC;AACA,G;AACA,wD;AACA,sB;AACA,E;;AAEA,G;AACA,4B;AACA,wC;AACA,E;AACA,kB;AACA,yE;AACA,4D;AACA,G;AACA,2D;AACA,qB;AACA,8B;AACA,gB;AACA,E;;AAEA,G;AACA,qD;AACA,+E;AACA,wC;AACA,E;AACA,qB;AACA,kD;AACA,4D;AACA,G;AACA,iE;AACA,qB;AACA,8B;AACA,gB;AACA,E;;AAEA,G;AACA,kD;AACA,gF;AACA,wC;AACA,E;AACA,kB;AACA,+C;AACA,4D;AACA,G;AACA,2D;AACA,qB;AACA,8B;AACA,gB;AACA,E;;AAEA,G;AACA,uE;AACA,E;AACA,W;AACA,iB;AACA,yD;AACA,G;AACA,4D;AACA,yE;AACA,uD;AACA,oD;AACA,oD;AACA,oD;AACA,oD;AACA,E;;AAEA,iC;AACA,+D;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;AAEA,yC;;AAEA,G;AACA,sE;AACA,sE;AACA,uE;AACA,2C;AACA,oC;AACA,E;AACA,sB;AACA,mB;AACA,e;AACA,qD;AACA,iE;AACA,8E;AACA,gG;AACA,6C;AACA,+C;AACA,G;AACA,gC;AACA,mC;AACA,+B;AACA,+D;AACA,0C;AACA,C;;AAEA,0D;AACA,kD;;AAEA,gC;AACA,mB;AACA,E;;AAEA,6C;AACA,uD;;AAEA,G;AACA,uD;AACA,E;AACA,qB;AACA,E;AACA,yD;AACA,oD;AACA,G;AACA,kE;AACA,iD;AACA,0D;AACA,mE;AACA,mE;AACA,sB;AACA,qC;AACA,kC;AACA,K;AACA,E;;AAEA,G;AACA,wB;AACA,E;AACA,qB;AACA,+B;AACA,G;AACA,mE;AACA,8B;AACA,8B;AACA,E;;AAEA,G;AACA,uE;AACA,iF;AACA,E;AACA,W;AACA,iB;AACA,yD;AACA,G;AACA,yD;AACA,gC;AACA,4C;AACA,E;;AAEA,G;AACA,iE;AACA,oE;AACA,c;AACA,W;AACA,iB;AACA,E;AACA,gE;AACA,G;AACA,yD;AACA,oB;AACA,E;;AAEA,8B;AACA,+D;AACA,kB;AACA,4C;AACA,kD;AACA,0D;AACA,0C;AACA,0C;AACA,sD;AACA,gD;AACA,yC;AACA,E;;AAEA,gO;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;;;AAIA,G;AACA,oE;AACA,sB;AACA,mB;AACA,e;AACA,G;AACA,qC;AACA,wC;AACA,8B;AACA,0D;AACA,C;;AAEA,G;AACA,2C;AACA,gD;AACA,U;AACA,iB;AACA,4C;AACA,gD;AACA,G;AACA,qD;AACA,kD;AACA,uC;AACA,E;;AAEA,G;AACA,sD;AACA,E;AACA,c;AACA,kC;AACA,G;AACA,+C;AACA,sC;AACA,kC;AACA,8C;AACA,K;AACA,8B;AACA,E;;AAEA,2B;AACA,2C;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;;;;AAKA,G;AACA,+E;AACA,E;AACA,gB;AACA,G;AACA,c;;AAEA,O;AACA,uB;AACA,c;AACA,O;AACA,yB;AACA,mB;AACA,M;;AAEA,O;AACA,wB;AACA,c;AACA,O;AACA,0B;AACA,2B;AACA,M;;AAEA,O;AACA,0B;AACA,c;AACA,O;AACA,4B;AACA,uC;AACA,qC;AACA,M;;AAEA,O;AACA,wB;AACA,c;AACA,O;AACA,0B;AACA,qB;AACA,M;;AAEA,O;AACA,yB;AACA,c;AACA,O;AACA,2B;AACA,+B;AACA,M;;AAEA,O;AACA,2B;AACA,c;AACA,O;AACA,6B;AACA,yC;AACA,mC;AACA,M;;AAEA,O;AACA,wB;AACA,c;AACA,O;AACA,0B;AACA,uB;AACA,M;;AAEA,O;AACA,yB;AACA,c;AACA,O;AACA,2B;AACA,kC;AACA,M;;AAEA,O;AACA,2B;AACA,c;AACA,O;AACA,6B;AACA,2C;AACA,wC;AACA,M;;AAEA,O;AACA,wB;AACA,c;AACA,O;AACA,0B;AACA,yB;AACA,M;;AAEA,O;AACA,yB;AACA,c;AACA,O;AACA,2B;AACA,mC;AACA,M;;AAEA,O;AACA,2B;AACA,c;AACA,O;AACA,6B;AACA,6C;AACA,uC;AACA,M;;AAEA,O;AACA,uB;AACA,c;AACA,O;AACA,yB;AACA,oD;AACA,M;;AAEA,O;AACA,wB;AACA,c;AACA,O;AACA,0B;AACA,yC;AACA,M;;AAEA,O;AACA,0B;AACA,c;AACA,O;AACA,4B;AACA,6C;AACA,M;;AAEA,O;AACA,uB;AACA,c;AACA,O;AACA,yB;AACA,yD;AACA,M;;AAEA,O;AACA,wB;AACA,c;AACA,O;AACA,0B;AACA,6D;AACA,M;;AAEA,O;AACA,0B;AACA,c;AACA,O;AACA,4B;AACA,8B;AACA,gC;AACA,+D;AACA,kD;AACA,M;;AAEA,O;AACA,uB;AACA,c;AACA,O;AACA,yB;AACA,yC;AACA,M;;AAEA,O;AACA,wB;AACA,c;AACA,O;AACA,0B;AACA,sC;AACA,M;;AAEA,O;AACA,0B;AACA,c;AACA,O;AACA,4B;AACA,+D;AACA,kD;AACA,M;;AAEA,O;AACA,0B;AACA,c;AACA,O;AACA,4B;AACA,wC;AACA,qE;AACA,6C;AACA,2E;AACA,M;;AAEA,O;AACA,2B;AACA,c;AACA,O;AACA,6B;AACA,wC;AACA,qE;AACA,6C;AACA,yE;AACA,M;;AAEA,O;AACA,6B;AACA,c;AACA,O;AACA,+B;AACA,wC;AACA,iF;AACA,6C;AACA,wF;AACA,iF;AACA,M;;AAEA,O;AACA,uB;AACA,c;AACA,O;AACA,4B;AACA,yC;AACA,iC;AACA,M;;AAEA,O;AACA,wB;AACA,c;AACA,O;AACA,6B;AACA,yC;AACA,2C;AACA,M;;AAEA,O;AACA,0B;AACA,c;AACA,O;AACA,+B;AACA,yC;AACA,kE;AACA,0D;AACA,M;;AAEA,O;AACA,yB;AACA,c;AACA,O;AACA,2B;AACA,6C;AACA,M;;AAEA,O;AACA,0B;AACA,c;AACA,O;AACA,4B;AACA,2B;AACA,gC;AACA,kC;AACA,oD;AACA,oC;AACA,uD;AACA,gB;AACA,0D;AACA,S;AACA,M;;AAEA,O;AACA,4B;AACA,c;AACA,O;AACA,8B;AACA,qD;AACA,mD;AACA,K;AACA,E;;AAEA,wB;AACA,2C;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,8C;;AAEA,G;AACA,2D;AACA,qC;AACA,E;AACA,E;AACA,4B;AACA,e;AACA,E;AACA,yD;AACA,G;AACA,qC;AACA,yB;AACA,yB;AACA,oB;AACA,C;;AAEA,4C;;AAEA,G;AACA,oC;AACA,E;AACA,c;AACA,E;AACA,2C;AACA,G;AACA,mD;AACA,sD;AACA,iD;AACA,K;AACA,sB;AACA,E;;AAEA,G;AACA,uE;AACA,E;AACA,c;AACA,E;AACA,sG;AACA,+E;AACA,0E;AACA,G;AACA,iF;AACA,gE;AACA,+C;AACA,0E;AACA,sE;AACA,K;AACA,E;;AAEA,G;AACA,wC;AACA,E;AACA,gB;AACA,E;AACA,gD;AACA,G;AACA,iE;AACA,iD;AACA,0E;AACA,gD;AACA,K;AACA,E;;AAEA,oC;AACA,oE;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,6C;AACA,qD;AACA,oD;AACA,uC;;AAEA,G;AACA,2E;AACA,kE;AACA,qE;AACA,E;AACA,wB;AACA,e;AACA,E;AACA,gD;AACA,G;AACA,gC;AACA,uB;;AAEA,uC;AACA,kC;;AAEA,+B;AACA,mC;AACA,iD;AACA,uC;;AAEA,6B;AACA,mC;AACA,yD;;AAEA,mC;AACA,+C;AACA,C;;AAEA,qC;;AAEA,G;AACA,2C;AACA,e;AACA,a;AACA,U;AACA,G;AACA,kC;;AAEA,O;AACA,4E;AACA,+B;AACA,+B;AACA,M;AACA,wB;AACA,mB;AACA,mB;AACA,O;AACA,iB;;AAEA,O;AACA,+B;AACA,wB;AACA,M;AACA,8B;AACA,mB;AACA,mB;AACA,O;AACA,uB;;AAEA,O;AACA,8C;AACA,M;AACA,0B;AACA,yB;AACA,iB;AACA,O;AACA,gB;AACA,E;;AAEA,uB;AACA,8E;AACA,C;;AAEA,sC;AACA,mE;AACA,6C;AACA,6B;AACA,yC;AACA,C;;AAEA,6B;AACA,8B;AACA,yC;AACA,C;;AAEA,kB;AACA,mB;AACA,C;;AAEA,mB;AACA,oB;AACA,C;;AAEA,kC;AACA,kC;AACA,C;;AAEA,kC;AACA,kC;AACA,C;;AAEA,iC;AACA,mC;AACA,uC;AACA,sC;AACA,C;;AAEA,iC;AACA,mC;AACA,uC;AACA,sC;AACA,C;;AAEA,iC;AACA,8B;AACA,C;;AAEA,uC;AACA,kD;AACA,yF;AACA,+F;AACA,2F;;AAEA,kB;AACA,4B;AACA,yC;AACA,8C;AACA,O;;AAEA,oB;AACA,yD;AACA,C;;AAEA,oB;AACA,+B;AACA,6B;AACA,oC;AACA,uC;AACA,iB;AACA,S;AACA,e;AACA,K;;AAEA,yD;AACA,uD;AACA,iD;AACA,0B;AACA,K;AACA,C;;AAEA,G;AACA,gC;AACA,E;AACA,gB;AACA,E;AACA,yC;AACA,4C;AACA,G;AACA,kE;AACA,+C;AACA,sB;AACA,Y;;AAEA,8B;AACA,2C;AACA,iC;AACA,4D;AACA,uC;AACA,E;;AAEA,G;AACA,sB;AACA,E;AACA,sB;AACA,E;AACA,kC;AACA,G;AACA,+D;AACA,2C;AACA,E;;AAEA,G;AACA,sB;AACA,E;AACA,sB;AACA,E;AACA,kC;AACA,G;AACA,uE;AACA,oD;AACA,E;;AAEA,G;AACA,8C;AACA,E;AACA,mB;AACA,E;AACA,oB;AACA,G;AACA,yD;AACA,iC;AACA,E;;AAEA,G;AACA,sB;AACA,E;AACA,e;AACA,G;AACA,iD;AACA,yB;AACA,E;;AAEA,G;AACA,6C;AACA,O;AACA,c;AACA,E;AACA,+B;AACA,G;AACA,+C;AACA,uB;AACA,2C;AACA,E;;AAEA,G;AACA,6E;AACA,E;AACA,c;AACA,E;AACA,+C;AACA,yD;AACA,4C;AACA,G;AACA,0E;AACA,sB;AACA,0B;AACA,iC;AACA,e;AACA,K;;AAEA,+C;AACA,sB;AACA,Y;;AAEA,qB;AACA,4C;AACA,iC;AACA,sC;AACA,E;;AAEA,gC;AACA,6J;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,kB;;AAEA,6C;AACA,qD;AACA,iD;AACA,uC;;AAEA,G;AACA,6E;AACA,gF;AACA,uD;AACA,E;AACA,0B;AACA,e;AACA,E;AACA,gD;AACA,G;AACA,kC;AACA,uB;AACA,uC;AACA,kC;;AAEA,uC;AACA,mC;AACA,iD;AACA,uC;;AAEA,6B;AACA,yD;AACA,mC;;AAEA,mC;AACA,+C;AACA,C;;AAEA,uC;;AAEA,G;AACA,6C;AACA,e;AACA,a;AACA,U;AACA,G;AACA,oC;;AAEA,O;AACA,4E;AACA,+B;AACA,+B;AACA,M;AACA,wB;AACA,mB;AACA,mB;AACA,O;AACA,iB;;AAEA,O;AACA,+B;AACA,wB;AACA,+D;AACA,iE;AACA,M;AACA,8B;AACA,mB;AACA,mB;AACA,O;AACA,uB;;AAEA,O;AACA,8C;AACA,M;AACA,0B;AACA,yB;AACA,iB;AACA,O;AACA,gB;AACA,E;;AAEA,uB;AACA,8E;AACA,C;;AAEA,kC;AACA,iC;AACA,C;;AAEA,kC;AACA,iC;AACA,C;;AAEA,iC;AACA,mC;AACA,uC;AACA,sC;AACA,C;;AAEA,iC;AACA,mC;AACA,uC;AACA,sC;AACA,C;;AAEA,iC;AACA,8B;AACA,C;;AAEA,kB;AACA,mB;AACA,C;;AAEA,mB;AACA,oB;AACA,C;;AAEA,oB;AACA,+B;AACA,6B;AACA,oC;AACA,uC;AACA,iB;AACA,S;AACA,e;AACA,K;;AAEA,yD;AACA,uD;AACA,iD;AACA,0B;AACA,K;AACA,C;;AAEA,uC;AACA,gC;AACA,8B;AACA,oD;AACA,yF;AACA,+F;AACA,2F;;AAEA,kC;AACA,gC;AACA,0H;AACA,K;;AAEA,kB;AACA,4B;AACA,yC;AACA,8C;AACA,O;;AAEA,oB;AACA,yD;AACA,C;;AAEA,sC;AACA,mE;AACA,6C;AACA,6B;AACA,yC;AACA,C;;AAEA,6B;AACA,8B;AACA,yC;AACA,C;;AAEA,G;AACA,mC;AACA,E;AACA,gB;AACA,E;AACA,oD;AACA,qC;AACA,G;AACA,6D;AACA,6C;AACA,oB;AACA,Y;;AAEA,4B;AACA,yC;AACA,+B;AACA,kD;AACA,uC;AACA,E;;AAEA,G;AACA,sB;AACA,E;AACA,sB;AACA,E;AACA,kC;AACA,G;AACA,iE;AACA,2C;AACA,E;;AAEA,G;AACA,sB;AACA,E;AACA,sB;AACA,E;AACA,kC;AACA,G;AACA,kE;AACA,6C;AACA,E;;AAEA,G;AACA,8C;AACA,E;AACA,mB;AACA,E;AACA,oB;AACA,G;AACA,2D;AACA,iC;AACA,E;;AAEA,G;AACA,sB;AACA,E;AACA,e;AACA,G;AACA,mD;AACA,yB;AACA,E;;AAEA,G;AACA,6C;AACA,E;AACA,c;AACA,E;AACA,+B;AACA,G;AACA,iD;AACA,uB;AACA,2C;AACA,E;;AAEA,G;AACA,6E;AACA,E;AACA,c;AACA,E;AACA,8C;AACA,qD;AACA,uC;AACA,G;AACA,+E;AACA,sB;AACA,6B;AACA,iC;AACA,e;AACA,K;;AAEA,kD;AACA,yB;AACA,Y;;AAEA,qB;AACA,4C;AACA,oC;AACA,sC;AACA,E;;AAEA,kC;AACA,0J;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,yD;AACA,mD;;AAEA,G;AACA,qD;AACA,4E;AACA,wB;AACA,E;AACA,qE;AACA,uE;AACA,yE;AACA,4E;AACA,oB;AACA,E;AACA,0E;AACA,uE;AACA,0E;AACA,0D;AACA,E;AACA,wB;AACA,e;AACA,oE;AACA,qB;AACA,G;AACA,gC;AACA,8B;AACA,0B;AACA,4B;;AAEA,mB;AACA,8B;AACA,+B;AACA,gC;AACA,+B;;AAEA,oB;AACA,C;;AAEA,2B;;AAEA,sD;AACA,uB;AACA,iC;AACA,oE;AACA,4B;AACA,K;AACA,mB;AACA,E;;AAEA,4E;AACA,uC;AACA,8C;AACA,oB;AACA,K;AACA,sB;AACA,E;;AAEA,mE;AACA,oC;AACA,uC;AACA,oB;AACA,K;AACA,sB;AACA,E;;AAEA,sB;AACA,yB;AACA,sC;AACA,mC;AACA,mB;AACA,K;AACA,uC;AACA,mD;AACA,e;AACA,K;AACA,kD;AACA,gD;;AAEA,sB;AACA,yC;AACA,2C;AACA,4D;AACA,mC;AACA,2E;AACA,K;AACA,U;AACA,iC;AACA,K;;AAEA,yC;AACA,gI;AACA,gD;AACA,S;AACA,c;AACA,kE;AACA,S;AACA,qC;AACA,K;;AAEA,0D;AACA,yE;AACA,yE;AACA,C;;AAEA,G;AACA,2E;AACA,4E;AACA,wB;AACA,E;AACA,c;AACA,E;AACA,6E;AACA,uC;AACA,2E;AACA,wE;AACA,oB;AACA,2E;AACA,sB;AACA,G;AACA,6E;AACA,sB;AACA,6B;AACA,iC;AACA,oB;AACA,K;;AAEA,wC;AACA,kC;AACA,sC;AACA,kD;AACA,gB;AACA,E;;AAEA,G;AACA,qD;AACA,E;AACA,gB;AACA,E;AACA,kE;AACA,4B;AACA,G;AACA,4E;AACA,+B;AACA,gC;AACA,+B;AACA,4B;AACA,kC;AACA,8B;AACA,0B;AACA,4B;AACA,E;;AAEA,G;AACA,sD;AACA,E;AACA,gB;AACA,E;AACA,2C;AACA,wE;AACA,sB;AACA,G;AACA,qE;AACA,6C;AACA,2B;AACA,qB;AACA,W;AACA,gB;AACA,M;AACA,E;;AAEA,G;AACA,yE;AACA,gD;AACA,E;AACA,c;AACA,E;AACA,gF;AACA,2D;AACA,kE;AACA,yC;AACA,G;AACA,wD;AACA,+B;AACA,6C;AACA,+D;AACA,yD;AACA,K;AACA,sB;AACA,E;;AAEA,G;AACA,mD;AACA,E;AACA,mB;AACA,E;AACA,oB;AACA,G;AACA,yD;AACA,gC;AACA,E;;AAEA,G;AACA,kE;AACA,E;AACA,e;AACA,G;AACA,iD;AACA,gC;AACA,E;;AAEA,gC;AACA,2F;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,iD;AACA,6C;AACA,8C;;AAEA,G;AACA,sE;AACA,kE;AACA,E;AACA,iC;AACA,e;AACA,E;AACA,gF;AACA,G;AACA,6C;AACA,6C;;AAEA,qC;AACA,kC;AACA,gC;AACA,iC;;AAEA,8D;AACA,wD;AACA,oD;AACA,sD;;AAEA,uC;AACA,C;;AAEA,mB;AACA,4B;AACA,wC;AACA,kC;AACA,8B;AACA,+B;AACA,O;AACA,C;;AAEA,wB;AACA,4B;AACA,wC;AACA,kC;AACA,8B;AACA,+B;AACA,O;AACA,C;;AAEA,G;AACA,4E;AACA,E;AACA,uB;AACA,a;AACA,E;AACA,qD;AACA,qD;AACA,wC;AACA,oC;AACA,G;AACA,yG;AACA,qC;AACA,yC;AACA,wD;AACA,gB;AACA,E;;AAEA,G;AACA,sE;AACA,E;AACA,mB;AACA,a;AACA,E;AACA,+C;AACA,qD;AACA,wC;AACA,oC;AACA,G;AACA,6F;AACA,6B;AACA,yC;AACA,gD;AACA,gB;AACA,E;;AAEA,G;AACA,2E;AACA,E;AACA,oB;AACA,a;AACA,E;AACA,mE;AACA,qD;AACA,wC;AACA,oC;AACA,G;AACA,qG;AACA,oC;AACA,yC;AACA,uD;AACA,gB;AACA,E;;AAEA,G;AACA,qE;AACA,E;AACA,kB;AACA,a;AACA,E;AACA,8C;AACA,qD;AACA,wC;AACA,oC;AACA,G;AACA,gG;AACA,iC;AACA,yC;AACA,oD;AACA,gB;AACA,E;;AAEA,G;AACA,8E;AACA,qB;AACA,E;AACA,c;AACA,a;AACA,E;AACA,mD;AACA,qD;AACA,wC;AACA,oC;AACA,G;AACA,uF;AACA,oD;;AAEA,gD;AACA,0C;AACA,sC;AACA,wC;AACA,4B;;AAEA,iE;AACA,oE;AACA,8D;AACA,0D;AACA,4D;AACA,gB;AACA,E;;AAEA,G;AACA,+E;AACA,E;AACA,+B;AACA,E;AACA,mD;AACA,G;AACA,oG;AACA,0C;AACA,uC;AACA,qC;AACA,sC;AACA,E;;AAEA,G;AACA,qD;AACA,E;AACA,c;AACA,E;AACA,sB;AACA,G;AACA,wD;AACA,0B;AACA,iC;AACA,K;AACA,4B;AACA,E;;AAEA,G;AACA,6C;AACA,E;AACA,mB;AACA,E;AACA,gC;AACA,G;AACA,kE;AACA,uB;AACA,E;;AAEA,G;AACA,oE;AACA,E;AACA,mB;AACA,E;AACA,oB;AACA,G;AACA,kE;AACA,gH;AACA,E;;AAEA,G;AACA,uB;AACA,E;AACA,e;AACA,G;AACA,0D;AACA,0B;AACA,uB;AACA,qB;AACA,sB;;AAEA,6B;AACA,gD;AACA,0C;AACA,sC;AACA,wC;;AAEA,gB;AACA,E;;AAEA,yC;AACA,iH;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;;;;AAKA,G;AACA,E;AACA,qD;AACA,6E;AACA,yB;AACA,E;AACA,wE;AACA,uE;AACA,yE;AACA,6E;AACA,oB;AACA,E;AACA,4E;AACA,2E;AACA,0E;AACA,0D;AACA,E;AACA,yB;AACA,e;AACA,E;AACA,+B;AACA,qB;AACA,G;AACA,mC;AACA,kE;AACA,0C;;AAEA,wB;AACA,yB;AACA,yB;AACA,uB;AACA,4B;AACA,uB;AACA,yB;AACA,+B;AACA,mB;AACA,8B;AACA,C;;AAEA,G;AACA,0E;AACA,2E;AACA,6C;AACA,E;AACA,2B;AACA,S;AACA,G;AACA,0B;AACA,yB;AACA,iB;AACA,M;AACA,yB;AACA,mB;AACA,M;AACA,0B;AACA,uB;AACA,M;AACA,4B;AACA,mC;AACA,qC;AACA,M;AACA,gC;AACA,2B;AACA,M;AACA,yB;AACA,uD;AACA,K;AACA,E;;AAEA,yC;AACA,mC;AACA,yC;AACA,kB;AACA,8C;AACA,E;;AAEA,0B;;AAEA,G;AACA,gE;AACA,E;AACA,wB;AACA,E;AACA,U;AACA,E;AACA,2C;AACA,0E;AACA,2B;AACA,qD;AACA,G;AACA,0E;AACA,uC;AACA,4C;AACA,oB;AACA,K;AACA,U;AACA,qB;AACA,K;AACA,E;;AAEA,G;AACA,4E;AACA,a;AACA,E;AACA,0B;AACA,E;AACA,U;AACA,E;AACA,2C;AACA,yD;AACA,G;AACA,uE;AACA,sC;AACA,2C;AACA,oB;AACA,K;AACA,U;AACA,qB;AACA,K;AACA,E;;AAEA,G;AACA,qE;AACA,0D;AACA,8D;AACA,0B;AACA,E;AACA,mB;AACA,E;AACA,U;AACA,E;AACA,2C;AACA,2E;AACA,2B;AACA,G;AACA,yD;AACA,4C;AACA,0C;AACA,iD;AACA,E;;AAEA,G;AACA,iC;AACA,E;AACA,oB;AACA,E;AACA,U;AACA,E;AACA,yE;AACA,2B;AACA,G;AACA,kD;AACA,4B;AACA,E;;AAEA,0E;AACA,gC;AACA,mC;AACA,C;;AAEA,sB;AACA,gC;AACA,sD;AACA,uC;AACA,K;AACA,oB;AACA,C;;AAEA,kF;AACA,sE;AACA,Y;AACA,oD;AACA,kD;AACA,iF;AACA,wE;AACA,uC;AACA,qF;AACA,8D;AACA,8D;AACA,K;AACA,gG;AACA,kB;AACA,C;;AAEA,G;AACA,wD;AACA,E;AACA,qB;AACA,E;AACA,E;AACA,yC;AACA,gF;AACA,oD;AACA,yD;AACA,G;AACA,qE;AACA,wE;AACA,iF;AACA,wE;AACA,E;;AAEA,G;AACA,2E;AACA,4E;AACA,wB;AACA,E;AACA,c;AACA,E;AACA,E;AACA,6E;AACA,wC;AACA,2E;AACA,wE;AACA,oB;AACA,2E;AACA,sB;AACA,G;AACA,8E;AACA,sB;AACA,6B;AACA,iC;AACA,e;AACA,K;;AAEA,0C;AACA,sD;AACA,2B;AACA,0C;AACA,2C;AACA,6B;AACA,gH;AACA,yE;AACA,S;AACA,c;AACA,qF;AACA,S;AACA,K;;AAEA,iC;AACA,sC;AACA,sD;AACA,yC;AACA,mC;AACA,wB;AACA,8B;AACA,E;;AAEA,G;AACA,qD;AACA,E;AACA,gB;AACA,E;AACA,kE;AACA,oB;AACA,gC;AACA,uB;AACA,G;AACA,6E;AACA,yB;AACA,sC;AACA,mC;AACA,mB;AACA,K;AACA,oC;AACA,0C;AACA,wB;AACA,uB;AACA,yB;AACA,kC;AACA,wC;AACA,gC;AACA,yB;AACA,E;;AAEA,G;AACA,uB;AACA,E;AACA,sB;AACA,E;AACA,6B;AACA,G;AACA,gE;AACA,yB;AACA,E;;AAEA,G;AACA,yE;AACA,gD;AACA,E;AACA,c;AACA,E;AACA,E;AACA,gF;AACA,2D;AACA,kE;AACA,0C;AACA,G;AACA,yD;AACA,2B;AACA,sB;AACA,E;;AAEA,iE;AACA,iB;AACA,mB;AACA,kD;AACA,mC;AACA,sB;AACA,iD;AACA,+C;AACA,yE;AACA,gB;AACA,gC;AACA,S;;AAEA,K;AACA,yD;AACA,oB;AACA,C;;AAEA,yC;AACA,c;AACA,iC;AACA,mB;AACA,gD;AACA,6C;AACA,6D;AACA,gB;AACA,oC;AACA,S;AACA,K;AACA,6C;AACA,iB;AACA,C;;AAEA,G;AACA,4E;AACA,sC;AACA,E;AACA,iB;AACA,E;AACA,E;AACA,gF;AACA,2D;AACA,G;AACA,+D;AACA,wB;AACA,6B;AACA,0C;AACA,uC;AACA,uB;AACA,S;AACA,e;AACA,K;;AAEA,2C;AACA,8C;AACA,iC;;AAEA,qD;AACA,2C;AACA,oC;AACA,yG;AACA,6B;AACA,K;AACA,kC;AACA,sC;AACA,4C;AACA,K;AACA,U;AACA,gD;AACA,uF;AACA,yG;AACA,K;AACA,E;;AAEA,G;AACA,mD;AACA,E;AACA,mB;AACA,E;AACA,E;AACA,oB;AACA,G;AACA,0D;AACA,wB;AACA,E;;AAEA,G;AACA,kE;AACA,E;AACA,e;AACA,E;AACA,G;AACA,kD;AACA,2B;AACA,E;;AAEA,kC;AACA,uE;AACA,uE;AACA,yE;AACA,6E;AACA,qF;AACA,uE;;AAEA,4D;AACA,+B;AACA,wB;AACA,iE;AACA,M;AACA,E;;AAEA,iC;AACA,2C;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,6C;AACA,qD;AACA,iD;AACA,kD;AACA,uC;;AAEA,G;AACA,2E;AACA,mE;AACA,8E;AACA,uE;AACA,E;AACA,wB;AACA,e;AACA,E;AACA,gD;AACA,G;AACA,gC;AACA,uB;;AAEA,uC;AACA,kC;;AAEA,uD;AACA,6B;;AAEA,gC;AACA,yB;AACA,iD;AACA,+B;;AAEA,uB;AACA,mC;;AAEA,mC;AACA,4D;AACA,C;;AAEA,qC;;AAEA,G;AACA,2C;AACA,e;AACA,a;AACA,U;AACA,G;AACA,kC;;AAEA,O;AACA,4E;AACA,+B;AACA,+B;AACA,M;AACA,wB;AACA,mB;AACA,mB;AACA,O;AACA,iB;;AAEA,O;AACA,+B;AACA,wB;AACA,+D;AACA,iE;AACA,M;AACA,8B;AACA,mB;AACA,mB;AACA,O;AACA,uB;;AAEA,O;AACA,8C;AACA,M;AACA,0B;AACA,yB;AACA,iB;AACA,O;AACA,iB;;AAEA,O;AACA,yD;AACA,M;AACA,6B;AACA,mB;AACA,mB;AACA,O;AACA,qB;AACA,E;;AAEA,uB;AACA,8E;AACA,C;;AAEA,sC;AACA,mE;AACA,6C;AACA,6B;AACA,yC;AACA,C;;AAEA,kB;AACA,mB;AACA,C;;AAEA,mB;AACA,oB;AACA,C;;AAEA,6B;AACA,8B;;AAEA,wD;;AAEA,0B;AACA,wC;AACA,6B;AACA,kD;AACA,6D;AACA,O;;AAEA,yC;AACA,C;;AAEA,kC;AACA,kC;AACA,C;;AAEA,kC;AACA,kC;AACA,C;;AAEA,iC;AACA,mC;AACA,uC;AACA,sC;AACA,C;;AAEA,iC;AACA,mC;AACA,uC;AACA,sC;AACA,C;;AAEA,iC;AACA,8B;AACA,C;;AAEA,oB;AACA,+B;AACA,6B;AACA,oC;AACA,uC;AACA,iB;AACA,S;AACA,e;AACA,K;AACA,uC;AACA,0C;AACA,0B;AACA,uD;AACA,iD;AACA,K;AACA,C;;AAEA,gC;AACA,kD;AACA,+D;AACA,iF;AACA,qE;AACA,8E;;AAEA,kB;AACA,4B;AACA,4B;AACA,uC;AACA,O;;AAEA,gB;AACA,0B;AACA,qC;AACA,O;;AAEA,oB;AACA,kD;AACA,C;;AAEA,G;AACA,gC;AACA,E;AACA,gB;AACA,E;AACA,yC;AACA,6C;AACA,G;AACA,kE;AACA,+C;AACA,sB;AACA,Y;;AAEA,8B;AACA,2C;AACA,4D;AACA,iC;AACA,uC;AACA,E;;AAEA,G;AACA,sB;AACA,E;AACA,sB;AACA,E;AACA,kC;AACA,G;AACA,+D;AACA,2C;AACA,E;;AAEA,G;AACA,sB;AACA,E;AACA,sB;AACA,E;AACA,kC;AACA,G;AACA,uE;AACA,oD;AACA,E;;AAEA,G;AACA,8C;AACA,E;AACA,mB;AACA,E;AACA,oB;AACA,G;AACA,yD;AACA,iC;AACA,E;;AAEA,G;AACA,sB;AACA,E;AACA,e;AACA,G;AACA,iD;AACA,yB;AACA,E;;AAEA,G;AACA,S;AACA,E;AACA,c;AACA,E;AACA,+B;AACA,G;AACA,+C;AACA,uB;AACA,2C;AACA,E;;AAEA,G;AACA,6E;AACA,E;AACA,c;AACA,E;AACA,+C;AACA,yD;AACA,4C;AACA,G;AACA,0E;AACA,sB;AACA,0B;AACA,iC;AACA,e;AACA,K;;AAEA,+C;AACA,sB;AACA,Y;;AAEA,qB;AACA,4C;AACA,iC;AACA,sC;AACA,E;;AAEA,gC;AACA,2L;AACA,kB;AACA,oC;AACA,8B;AACA,sD;AACA,8C;AACA,kD;AACA,8C;AACA,gE;AACA,gD;AACA,6C;AACA,E;;AAEA,mP;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;;;;AAKA,G;AACA,oD;AACA,E;AACA,kB;AACA,U;AACA,G;AACA,gB;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,Y;AACA,Y;AACA,Y;AACA,Y;AACA,Y;AACA,Y;AACA,Y;AACA,Y;AACA,Y;AACA,Y;AACA,Y;AACA,Y;AACA,Y;AACA,Y;AACA,Y;AACA,Y;AACA,Y;AACA,Y;AACA,Y;AACA,Y;AACA,Y;AACA,Y;AACA,Y;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,W;AACA,e;AACA,mB;AACA,oB;AACA,iB;AACA,mB;AACA,c;AACA,c;AACA,U;AACA,E;;AAEA,0B;AACA,2C;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;AACA,sB;AACA,0C;;AAEA,G;AACA,qE;AACA,wF;AACA,uF;AACA,8C;AACA,E;AACA,e;AACA,e;AACA,G;AACA,6C;;AAEA,0B;;AAEA,8D;AACA,gB;AACA,wC;AACA,K;AACA,kB;AACA,0B;AACA,M;;AAEA,G;AACA,8C;AACA,E;AACA,2B;AACA,E;AACA,0D;AACA,E;AACA,qD;AACA,G;AACA,+B;AACA,gC;AACA,c;AACA,C;;AAEA,G;AACA,iE;AACA,iE;AACA,4C;AACA,E;AACA,qB;AACA,E;AACA,qE;AACA,yE;AACA,E;AACA,qD;AACA,G;AACA,mC;AACA,sB;AACA,+B;AACA,2B;AACA,iC;AACA,sC;AACA,0D;AACA,S;AACA,M;AACA,sC;AACA,C;;AAEA,G;AACA,iE;AACA,iE;AACA,8B;AACA,E;AACA,sB;AACA,E;AACA,qE;AACA,wE;AACA,E;AACA,qD;AACA,G;AACA,oC;AACA,sB;AACA,+B;AACA,2B;AACA,iC;AACA,sC;AACA,0B;AACA,S;AACA,M;AACA,sC;AACA,C;;AAEA,G;AACA,4E;AACA,iE;AACA,E;AACA,gB;AACA,E;AACA,4E;AACA,8D;AACA,E;AACA,qD;AACA,G;AACA,8B;AACA,iD;AACA,+B;AACA,mB;AACA,uE;AACA,sC;AACA,4B;AACA,S;AACA,M;AACA,sC;AACA,C;;AAEA,G;AACA,wF;AACA,kE;AACA,E;AACA,gB;AACA,E;AACA,4E;AACA,8D;AACA,E;AACA,qD;AACA,G;AACA,8B;AACA,6B;AACA,2B;AACA,+B;AACA,mB;AACA,uE;AACA,sC;AACA,+B;AACA,S;AACA,M;AACA,sC;AACA,C;;AAEA,G;AACA,qD;AACA,E;AACA,gB;AACA,E;AACA,uC;AACA,G;AACA,oB;AACA,4C;AACA,C;;AAEA,G;AACA,iE;AACA,2C;AACA,E;AACA,mB;AACA,E;AACA,sE;AACA,sC;AACA,E;AACA,2D;AACA,G;AACA,+B;AACA,gB;AACA,Y;AACA,kB;AACA,e;AACA,a;AACA,uB;AACA,mB;AACA,yB;AACA,8B;;AAEA,6B;AACA,2C;;AAEA,8B;AACA,sD;AACA,oB;AACA,+B;AACA,+C;AACA,a;AACA,U;;AAEA,uB;AACA,uC;;AAEA,sB;AACA,M;AACA,C;;AAEA,kB;AACA,4B;AACA,8B;AACA,wB;AACA,kB;AACA,kB;AACA,iB;AACA,E;AACA,6D;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;;;AAIA,G;AACA,iD;AACA,0D;AACA,4D;AACA,E;AACA,iB;AACA,U;AACA,G;AACA,iB;;AAEA,G;AACA,qC;AACA,E;AACA,+B;AACA,S;AACA,G;AACA,qB;AACA,S;AACA,S;AACA,Q;AACA,E;;AAEA,G;AACA,wE;AACA,wE;AACA,E;AACA,gB;AACA,E;AACA,yE;AACA,uD;AACA,E;AACA,4D;AACA,G;AACA,iD;AACA,wB;AACA,uB;AACA,kB;AACA,2D;AACA,M;AACA,E;;AAEA,G;AACA,mD;AACA,E;AACA,kB;AACA,E;AACA,oC;AACA,+D;AACA,G;AACA,mD;AACA,mC;AACA,4D;AACA,oC;AACA,sD;AACA,S;AACA,M;AACA,yB;AACA,e;AACA,E;;AAEA,G;AACA,mD;AACA,E;AACA,yC;AACA,E;AACA,2D;AACA,E;AACA,sE;AACA,G;AACA,wF;AACA,gD;AACA,6B;AACA,mD;AACA,2E;AACA,kB;AACA,E;;AAEA,E;AACA,yB;AACA,qC;AACA,qC;AACA,G;AACA,mC;AACA,U;AACA,gC;AACA,2C;AACA,4B;AACA,gE;AACA,8C;AACA,sD;AACA,6D;AACA,6D;AACA,qB;AACA,iB;AACA,sB;AACA,iD;AACA,iB;AACA,a;AACA,kB;AACA,gC;AACA,a;AACA,S;AACA,K;AACA,U;AACA,c;AACA,K;AACA,a;AACA,E;;AAEA,yB;AACA,2C;AACA,kB;AACA,kC;AACA,4B;AACA,+B;AACA,E;;AAEA,sF;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;AAEA,uC;AACA,6C;AACA,mD;AACA,uD;;AAEA,G;AACA,iE;AACA,+D;AACA,mE;AACA,uE;AACA,wB;AACA,e;AACA,gE;AACA,G;AACA,kC;AACA,qG;AACA,4D;AACA,0C;;AAEA,0C;AACA,2C;AACA,yD;AACA,2D;;AAEA,qC;AACA,C;;AAEA,oC;;AAEA,G;AACA,2E;AACA,E;AACA,qB;AACA,gG;AACA,G;AACA,oE;AACA,oD;AACA,E;;AAEA,G;AACA,+C;AACA,E;AACA,qB;AACA,sB;AACA,2E;AACA,G;AACA,gE;AACA,gD;AACA,E;;AAEA,G;AACA,yD;AACA,E;AACA,W;AACA,iB;AACA,wC;AACA,G;AACA,qD;AACA,oB;AACA,E;;AAEA,G;AACA,2E;AACA,4E;AACA,yB;AACA,E;AACA,W;AACA,iB;AACA,0C;AACA,G;AACA,8D;;AAEA,gC;AACA,yI;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,6C;AACA,uD;AACA,8D;AACA,8C;AACA,qD;;AAEA,G;AACA,qE;AACA,E;AACA,+C;AACA,qD;AACA,+D;AACA,E;AACA,c;AACA,e;AACA,4B;AACA,E;AACA,+D;AACA,kF;AACA,6E;AACA,sF;AACA,iD;AACA,wF;AACA,oF;AACA,G;AACA,wB;AACA,4C;AACA,uC;AACA,yB;;AAEA,2D;AACA,yC;AACA,+E;AACA,kF;AACA,iF;AACA,oC;AACA,yC;AACA,0E;AACA,sB;AACA,qD;AACA,mC;AACA,8B;AACA,c;AACA,S;AACA,gB;AACA,sC;AACA,kC;AACA,0B;AACA,U;AACA,O;AACA,C;AACA,2D;AACA,kC;;AAEA,+E;AACA,iB;AACA,+B;AACA,qB;AACA,M;AACA,oB;AACA,G;;AAEA,G;AACA,yD;AACA,E;AACA,kB;AACA,wF;AACA,qC;AACA,G;AACA,6C;AACA,iF;AACA,uE;AACA,uC;AACA,qC;AACA,6B;AACA,kH;AACA,E;;AAEA,iC;AACA,iD;AACA,iC;AACA,C;;AAEA,+C;AACA,sB;AACA,8C;AACA,C;;AAEA,G;AACA,iF;AACA,E;AACA,iB;AACA,kF;AACA,G;AACA,2C;AACA,wB;AACA,E;;AAEA,G;AACA,2C;AACA,E;AACA,e;AACA,mF;AACA,G;AACA,+C;AACA,wB;AACA,8D;AACA,E;;AAEA,G;AACA,2C;AACA,E;AACA,gB;AACA,qF;AACA,G;AACA,iD;AACA,yB;AACA,+D;AACA,E;;AAEA,G;AACA,uE;AACA,E;AACA,gB;AACA,kF;AACA,G;AACA,mD;AACA,2C;AACA,6B;AACA,E;;AAEA,sB;AACA,mL;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,+C;AACA,6C;AACA,uD;AACA,8D;AACA,mD;;AAEA,G;AACA,yE;AACA,sE;AACA,gE;AACA,E;AACA,0D;AACA,E;AACA,Y;AACA,kC;AACA,kC;AACA,E;AACA,sB;AACA,E;AACA,e;AACA,E;AACA,6F;AACA,yG;AACA,8G;AACA,4F;AACA,sG;AACA,sG;AACA,iF;AACA,G;AACA,gC;AACA,+D;AACA,4D;AACA,0C;;AAEA,2C;AACA,+D;AACA,mE;AACA,yB;AACA,2B;;AAEA,mC;AACA,oC;;AAEA,0C;AACA,2C;AACA,yD;AACA,2D;;AAEA,4D;AACA,sD;AACA,C;;AAEA,oB;AACA,oB;;AAEA,sB;AACA,e;AACA,e;AACA,e;AACA,c;AACA,E;;AAEA,gC;AACA,kC;AACA,qB;AACA,0B;AACA,0B;AACA,qB;AACA,E;;AAEA,sC;AACA,mC;AACA,qF;AACA,C;;AAEA,wC;AACA,mC;AACA,gE;AACA,C;;AAEA,iC;AACA,+B;AACA,a;AACA,0D;AACA,U;AACA,sC;AACA,2E;AACA,K;AACA,oC;AACA,C;;AAEA,8B;AACA,sD;;AAEA,mB;AACA,mB;AACA,kE;;AAEA,iC;AACA,uB;AACA,wC;AACA,K;AACA,U;AACA,wC;AACA,uB;AACA,K;;AAEA,2D;AACA,gE;;AAEA,kC;AACA,C;;AAEA,2B;AACA,iC;AACA,0D;AACA,+B;;AAEA,4D;AACA,wE;AACA,sD;;AAEA,6C;AACA,oD;;AAEA,yB;AACA,6B;AACA,e;AACA,K;;AAEA,kC;AACA,4B;AACA,e;AACA,K;;AAEA,mK;AACA,oC;AACA,sB;AACA,C;;AAEA,G;AACA,uE;AACA,E;AACA,qB;AACA,kC;AACA,G;AACA,kE;AACA,6C;AACA,qC;AACA,8D;AACA,kE;AACA,K;AACA,E;;AAEA,G;AACA,uC;AACA,4E;AACA,E;AACA,e;AACA,6D;AACA,gD;AACA,G;AACA,mE;AACA,8D;AACA,uE;AACA,kE;AACA,+D;AACA,wB;AACA,4B;AACA,uC;AACA,K;AACA,E;;AAEA,G;AACA,wC;AACA,4E;AACA,E;AACA,gB;AACA,6D;AACA,gD;AACA,G;AACA,qE;AACA,8D;AACA,uE;AACA,8C;AACA,sB;AACA,6B;AACA,wC;AACA,K;AACA,E;;AAEA,G;AACA,6D;AACA,E;AACA,sB;AACA,gD;AACA,6D;AACA,gD;AACA,G;AACA,2F;AACA,yD;AACA,uD;AACA,E;;AAEA,G;AACA,6D;AACA,E;AACA,sB;AACA,qC;AACA,G;AACA,6D;AACA,gC;AACA,E;;AAEA,G;AACA,qE;AACA,E;AACA,sB;AACA,gD;AACA,6D;AACA,gD;AACA,G;AACA,2F;AACA,mF;AACA,E;;AAEA,G;AACA,qE;AACA,E;AACA,sB;AACA,qC;AACA,G;AACA,6D;AACA,qD;AACA,E;;AAEA,G;AACA,yC;AACA,E;AACA,iB;AACA,6D;AACA,G;AACA,6D;AACA,6C;AACA,+B;AACA,E;;AAEA,G;AACA,+C;AACA,E;AACA,gB;AACA,6D;AACA,G;AACA,2D;AACA,4C;AACA,gC;AACA,E;;AAEA,G;AACA,yD;AACA,E;AACA,iB;AACA,oB;AACA,G;AACA,6D;AACA,wB;AACA,E;;AAEA,G;AACA,8D;AACA,E;AACA,W;AACA,iB;AACA,iB;AACA,G;AACA,mD;AACA,sC;;AAEA,gC;AACA,mH;AACA,qB;AACA,mC;AACA,K;;AAEA,4D;AACA,6C;AACA,8C;;AAEA,Y;AACA,S;AACA,yC;AACA,wC;AACA,U;AACA,S;AACA,wC;AACA,yC;AACA,S;AACA,M;AACA,E;;AAEA,8B;AACA,kL;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,oD;AACA,uC;AACA,mD;AACA,6C;AACA,qD;;AAEA,G;AACA,oF;AACA,qB;AACA,e;AACA,gE;AACA,gD;AACA,yB;AACA,G;AACA,+B;AACA,+B;AACA,wC;;AAEA,qD;AACA,yF;AACA,2F;;AAEA,0C;AACA,yD;;AAEA,2C;AACA,0C;AACA,C;;AAEA,wC;AACA,yF;AACA,C;;AAEA,G;AACA,qF;AACA,E;AACA,e;AACA,8D;AACA,G;AACA,qD;AACA,uC;AACA,0E;;AAEA,kC;;AAEA,wC;AACA,uG;;AAEA,6D;AACA,E;;AAEA,G;AACA,sE;AACA,E;AACA,qB;AACA,2F;AACA,G;AACA,iE;AACA,yC;AACA,E;;AAEA,G;AACA,8D;AACA,E;AACA,W;AACA,iB;AACA,kD;AACA,G;AACA,kD;AACA,0B;AACA,E;;AAEA,G;AACA,2E;AACA,4E;AACA,yB;AACA,E;AACA,W;AACA,iB;AACA,0C;AACA,G;AACA,yD;AACA,oC;AACA,oC;;AAEA,Y;AACA,qC;AACA,iC;AACA,+B;AACA,2B;AACA,yC;AACA,M;AACA,E;;AAEA,6B;AACA,qK;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;AAEA,uC;AACA,6C;AACA,uD;AACA,mD;AACA,8D;;AAEA,G;AACA,uE;AACA,2E;AACA,oC;AACA,wB;AACA,e;AACA,gE;AACA,0G;AACA,mH;AACA,sF;AACA,G;AACA,kC;AACA,iE;AACA,2D;AACA,0C;;AAEA,oC;;AAEA,2D;AACA,qB;AACA,wB;;AAEA,iC;AACA,6B;AACA,kC;AACA,8B;;AAEA,2C;AACA,2D;AACA,C;;AAEA,+B;AACA,+B;;AAEA,kC;AACA,0C;AACA,sB;AACA,e;AACA,E;;AAEA,6C;AACA,sB;AACA,wB;AACA,4B;AACA,qB;AACA,c;AACA,a;AACA,U;;AAEA,6B;AACA,gC;;AAEA,wC;AACA,0B;AACA,8B;;AAEA,sC;AACA,yD;AACA,Y;AACA,8B;AACA,K;;AAEA,yC;AACA,8B;AACA,0B;;AAEA,4C;AACA,2C;AACA,wC;;AAEA,kE;AACA,oD;AACA,qD;;AAEA,mD;AACA,yC;;AAEA,8B;AACA,K;AACA,C;;AAEA,6C;AACA,6C;AACA,4C;AACA,+E;AACA,4B;AACA,S;AACA,K;;AAEA,iB;AACA,C;;AAEA,G;AACA,8D;AACA,E;AACA,W;AACA,iB;AACA,kD;AACA,G;AACA,qD;AACA,mB;AACA,E;;AAEA,G;AACA,0E;AACA,E;AACA,qB;AACA,8F;AACA,G;AACA,oE;AACA,4C;AACA,E;;AAEA,G;AACA,6F;AACA,mE;AACA,E;AACA,uB;AACA,mD;AACA,G;AACA,yE;AACA,2B;;AAEA,0C;AACA,wB;AACA,oE;AACA,+B;AACA,K;AACA,E;;AAEA,G;AACA,+D;AACA,E;AACA,oB;AACA,wG;AACA,G;AACA,uF;AACA,uE;AACA,kC;AACA,8D;AACA,iD;AACA,iD;AACA,6B;AACA,E;;AAEA,G;AACA,iE;AACA,E;AACA,kB;AACA,E;AACA,uE;AACA,G;AACA,uD;AACA,sB;AACA,E;;AAEA,G;AACA,2E;AACA,4E;AACA,yB;AACA,E;AACA,W;AACA,iB;AACA,0C;AACA,G;AACA,4D;AACA,kC;AACA,4C;AACA,sC;AACA,wC;;AAEA,oC;AACA,2C;AACA,uC;AACA,a;;AAEA,mL;AACA,sD;;AAEA,+C;AACA,0C;AACA,0C;AACA,S;;AAEA,mF;AACA,yD;AACA,K;;AAEA,oB;AACA,6C;AACA,sC;AACA,wC;AACA,iC;AACA,qB;AACA,kD;AACA,uB;AACA,4C;AACA,W;AACA,K;;AAEA,uE;AACA,mI;;AAEA,Y;AACA,mC;AACA,yB;AACA,+B;AACA,sB;AACA,M;AACA,E;;AAEA,gC;AACA,6K;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,6C;AACA,8D;AACA,+C;AACA,uD;;AAEA,G;AACA,yE;AACA,6E;AACA,0B;AACA,E;AACA,iB;AACA,e;AACA,mD;AACA,6G;AACA,G;AACA,2B;AACA,0D;AACA,4D;AACA,0C;;AAEA,uC;;AAEA,+B;AACA,8B;;AAEA,yB;AACA,C;;AAEA,wB;AACA,wB;;AAEA,0B;;AAEA,2B;AACA,qB;AACA,kC;AACA,E;;AAEA,G;AACA,8D;AACA,E;AACA,e;AACA,qD;AACA,wC;AACA,G;AACA,8D;AACA,2C;AACA,+C;AACA,iC;AACA,E;;AAEA,G;AACA,4B;AACA,E;AACA,mB;AACA,wB;AACA,qD;AACA,wC;AACA,G;AACA,6E;AACA,uE;AACA,iD;AACA,gD;AACA,E;;AAEA,G;AACA,kE;AACA,E;AACA,qB;AACA,uF;AACA,G;AACA,6D;AACA,oD;AACA,E;;AAEA,G;AACA,iG;AACA,E;AACA,mB;AACA,a;AACA,oE;AACA,G;AACA,sD;AACA,0B;AACA,E;;AAEA,G;AACA,gG;AACA,E;AACA,kB;AACA,a;AACA,mE;AACA,G;AACA,oD;AACA,yB;AACA,E;;AAEA,G;AACA,8D;AACA,E;AACA,W;AACA,iB;AACA,kD;AACA,G;AACA,8C;AACA,iC;;AAEA,uB;AACA,sB;;AAEA,yD;AACA,kD;AACA,2D;AACA,K;AACA,U;AACA,kD;AACA,2D;AACA,K;;AAEA,oB;AACA,wB;AACA,qB;AACA,sC;AACA,2C;AACA,W;AACA,K;;AAEA,uB;AACA,qB;AACA,oF;AACA,0C;AACA,W;AACA,K;;AAEA,kB;AACA,E;;AAEA,yB;AACA,yJ;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,uC;AACA,+C;AACA,6C;AACA,mD;AACA,mD;AACA,2C;AACA,uD;AACA,8D;AACA,gF;;AAEA,G;AACA,yE;AACA,4E;AACA,6F;AACA,mD;AACA,oB;AACA,e;AACA,gE;AACA,4G;AACA,wC;AACA,kG;AACA,oE;AACA,+G;AACA,G;AACA,8B;AACA,6D;AACA,2D;AACA,0C;;AAEA,oC;;AAEA,yB;AACA,sB;AACA,oC;AACA,mC;AACA,0B;;AAEA,2C;AACA,2D;AACA,C;;AAEA,oC;AACA,wC;AACA,6D;AACA,6D;;AAEA,mD;AACA,mD;;AAEA,kB;AACA,c;AACA,sB;AACA,oC;AACA,kB;AACA,wC;AACA,2D;AACA,gG;AACA,a;AACA,kB;AACA,iG;AACA,a;;AAEA,wB;AACA,0D;AACA,S;;AAEA,sD;AACA,K;;AAEA,qF;AACA,gD;;AAEA,oC;;AAEA,wJ;;AAEA,qC;AACA,C;;AAEA,0D;AACA,0B;AACA,0F;AACA,6C;AACA,sC;AACA,M;;AAEA,iC;AACA,4C;AACA,wC;AACA,iC;AACA,O;;AAEA,yC;AACA,sC;;AAEA,C;;AAEA,2D;AACA,wC;;AAEA,kC;AACA,wC;AACA,4C;;AAEA,6C;;AAEA,yB;AACA,uB;AACA,oB;;AAEA,qD;AACA,mC;AACA,yC;AACA,C;;AAEA,8B;AACA,uB;AACA,sB;AACA,sB;AACA,E;;AAEA,G;AACA,8D;AACA,E;AACA,W;AACA,iB;AACA,kD;AACA,G;AACA,iD;AACA,mB;AACA,E;;AAEA,G;AACA,qE;AACA,E;AACA,qB;AACA,0F;AACA,G;AACA,gE;AACA,mD;AACA,E;;AAEA,G;AACA,8E;AACA,E;AACA,uB;AACA,gG;AACA,G;AACA,qE;AACA,yE;AACA,6B;AACA,E;;AAEA,G;AACA,2E;AACA,4E;AACA,yB;AACA,E;AACA,W;AACA,iB;AACA,0C;AACA,G;AACA,wD;AACA,sC;AACA,kC;AACA,gC;AACA,4B;;AAEA,0C;AACA,0C;;AAEA,mK;AACA,6C;AACA,K;;AAEA,iC;AACA,oB;AACA,sB;AACA,8D;AACA,kC;AACA,kD;AACA,2F;AACA,iD;AACA,8C;AACA,S;AACA,mB;AACA,wB;AACA,iC;AACA,mC;AACA,yC;AACA,kB;AACA,c;AACA,S;AACA,sC;AACA,oB;AACA,K;;AAEA,qG;AACA,Y;AACA,6B;AACA,yB;AACA,mB;AACA,sB;AACA,M;AACA,E;;AAEA,4B;AACA,gS;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,uC;AACA,+C;AACA,6C;AACA,uD;;AAEA,G;AACA,+F;AACA,sC;AACA,4B;AACA,e;AACA,gE;AACA,mH;AACA,wG;AACA,0B;AACA,oG;AACA,kD;AACA,mG;AACA,kD;AACA,G;AACA,sC;AACA,qE;AACA,4D;AACA,0C;;AAEA,2C;;AAEA,mC;AACA,mC;AACA,oC;AACA,C;;AAEA,G;AACA,2G;AACA,E;AACA,0B;AACA,gB;AACA,W;AACA,c;AACA,c;AACA,G;AACA,mC;;AAEA,G;AACA,yG;AACA,E;AACA,0B;AACA,gB;AACA,W;AACA,c;AACA,c;AACA,G;AACA,mC;;AAEA,sC;AACA,8C;AACA,0B;AACA,0B;AACA,yB;AACA,wB;AACA,E;;AAEA,G;AACA,8D;AACA,E;AACA,W;AACA,iB;AACA,kD;AACA,G;AACA,yD;AACA,0B;AACA,E;;AAEA,G;AACA,6E;AACA,E;AACA,qB;AACA,kG;AACA,G;AACA,wE;AACA,oD;AACA,E;;AAEA,8C;AACA,kC;AACA,qE;AACA,C;;AAEA,mC;AACA,4G;AACA,kD;AACA,C;;AAEA,0C;AACA,mG;AACA,yC;AACA,C;;AAEA,G;AACA,2E;AACA,4E;AACA,yB;AACA,E;AACA,W;AACA,iB;AACA,0C;AACA,G;AACA,gE;AACA,sC;AACA,gC;AACA,4B;AACA,kC;;AAEA,kK;AACA,kK;AACA,6E;;AAEA,qG;;AAEA,kB;AACA,S;AACA,0D;AACA,wC;AACA,U;AACA,S;AACA,+D;AACA,2D;AACA,yC;AACA,U;AACA,S;AACA,6E;AACA,0D;AACA,wC;AACA,S;AACA,M;;AAEA,Y;AACA,6B;AACA,yB;AACA,mB;AACA,sB;AACA,M;AACA,E;;AAEA,oC;AACA,yI;AACA,6C;AACA,2C;AACA,+C;AACA,8C;AACA,uD;AACA,8D;AACA,gF;;AAEA,G;AACA,kG;AACA,+E;AACA,E;AACA,kB;AACA,e;AACA,gE;AACA,8G;AACA,wG;AACA,yH;AACA,yI;AACA,yB;AACA,sI;AACA,0B;AACA,4H;AACA,oC;AACA,4I;AACA,8C;AACA,4I;AACA,4B;AACA,8I;AACA,uC;AACA,2I;AACA,6C;AACA,2I;AACA,2B;AACA,6I;AACA,sC;AACA,oG;AACA,uH;AACA,yD;AACA,oG;AACA,+F;AACA,iC;AACA,G;AACA,4B;AACA,2D;AACA,4D;;AAEA,0C;;AAEA,0B;AACA,oB;AACA,yB;AACA,qB;AACA,C;;AAEA,4B;AACA,sD;AACA,iB;AACA,yB;AACA,wB;AACA,uD;AACA,kB;AACA,0B;AACA,yB;AACA,sC;AACA,mB;AACA,2B;AACA,0B;AACA,uB;AACA,wB;AACA,kB;AACA,E;;AAEA,G;AACA,mE;AACA,E;AACA,qB;AACA,wF;AACA,G;AACA,8D;AACA,oD;AACA,E;;AAEA,M;AACA,sF;AACA,uB;AACA,e;AACA,8D;AACA,uF;AACA,wB;AACA,+E;AACA,G;AACA,2E;AACA,sB;AACA,mC;AACA,K;;AAEA,yC;AACA,8B;AACA,+B;AACA,K;;AAEA,wB;AACA,8C;AACA,c;AACA,qF;AACA,S;AACA,K;AACA,yB;;AAEA,qB;AACA,yE;AACA,0D;AACA,wD;AACA,2D;AACA,M;;AAEA,kC;AACA,uC;AACA,mC;AACA,iC;AACA,8B;AACA,O;AACA,gC;AACA,wC;AACA,0B;AACA,gC;AACA,oC;;AAEA,gE;;AAEA,4D;AACA,yE;AACA,qE;AACA,mE;AACA,iE;AACA,E;;AAEA,G;AACA,wE;AACA,e;AACA,oF;AACA,mC;AACA,gF;AACA,G;AACA,+D;AACA,+B;AACA,0B;;AAEA,yC;AACA,8B;AACA,+B;AACA,K;;AAEA,iD;AACA,gE;AACA,wD;AACA,2C;AACA,uD;AACA,8D;AACA,sE;AACA,0C;AACA,kB;;AAEA,6D;AACA,wE;AACA,oE;AACA,kE;AACA,gE;AACA,E;;AAEA,G;AACA,8D;AACA,E;AACA,W;AACA,iB;AACA,kD;AACA,G;AACA,+C;AACA,oB;AACA,iD;AACA,4C;AACA,K;AACA,kB;AACA,E;;AAEA,0B;AACA,oP;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,2C;AACA,+C;AACA,6C;AACA,8D;AACA,mC;;AAEA,G;AACA,8E;AACA,0B;AACA,e;AACA,gE;AACA,4F;AACA,+G;AACA,yD;AACA,2F;AACA,4F;AACA,+B;AACA,G;AACA,oC;AACA,gC;;AAEA,uB;AACA,mC;AACA,gC;;AAEA,2B;AACA,qB;AACA,yB;AACA,sB;;AAEA,gE;AACA,4D;AACA,0D;AACA,iE;AACA,6D;AACA,2D;;AAEA,sB;AACA,C;AACA,2D;AACA,0D;;AAEA,oC;AACA,uB;AACA,wB;AACA,iB;AACA,E;;AAEA,+B;AACA,2B;AACA,kC;AACA,M;AACA,iC;AACA,wB;AACA,M;AACA,gB;AACA,E;;AAEA,mC;AACA,4B;AACA,C;;AAEA,G;AACA,mG;AACA,2H;AACA,qJ;AACA,gH;AACA,uD;AACA,E;AACA,0B;AACA,6G;AACA,0E;AACA,a;AACA,G;AACA,kF;AACA,uE;AACA,6F;AACA,iF;AACA,4B;AACA,gB;AACA,E;;AAEA,G;AACA,qG;AACA,wB;AACA,0G;AACA,yE;AACA,a;AACA,G;AACA,4E;AACA,iE;AACA,mF;AACA,+E;AACA,yB;AACA,gB;AACA,E;;AAEA,G;AACA,mG;AACA,uB;AACA,uG;AACA,4F;AACA,a;AACA,G;AACA,yE;AACA,8D;AACA,8E;AACA,8E;AACA,wB;AACA,gB;AACA,E;;AAEA,G;AACA,2G;AACA,2B;AACA,6G;AACA,0E;AACA,a;AACA,G;AACA,oF;AACA,wE;AACA,8F;AACA,kF;AACA,4B;AACA,gB;AACA,E;;AAEA,G;AACA,uG;AACA,yB;AACA,0G;AACA,yE;AACA,a;AACA,G;AACA,8E;AACA,kE;AACA,oF;AACA,gF;AACA,yB;AACA,gB;AACA,E;;AAEA,G;AACA,qG;AACA,wB;AACA,uG;AACA,4F;AACA,a;AACA,G;AACA,2E;AACA,+D;AACA,+E;AACA,+E;AACA,wB;AACA,gB;AACA,E;;AAEA,G;AACA,sF;AACA,sB;AACA,e;AACA,8D;AACA,uF;AACA,wB;AACA,+E;AACA,a;AACA,G;AACA,mF;AACA,sB;AACA,mC;AACA,K;;AAEA,yC;AACA,8B;AACA,0B;AACA,K;;AAEA,6B;AACA,8C;AACA,c;AACA,uC;AACA,kD;AACA,a;AACA,kB;AACA,kD;AACA,sC;AACA,uG;AACA,gD;AACA,mB;AACA,a;AACA,6B;AACA,S;AACA,K;;AAEA,qB;;AAEA,wC;AACA,gE;AACA,+B;AACA,wC;AACA,8C;AACA,qB;;AAEA,0E;AACA,mF;AACA,K;AACA,U;AACA,sC;;AAEA,qC;AACA,wG;AACA,kG;AACA,8F;AACA,W;AACA,oC;AACA,2C;;AAEA,2C;AACA,+B;AACA,uC;AACA,iC;AACA,2C;AACA,K;;AAEA,4D;AACA,uC;AACA,E;;AAEA,G;AACA,wE;AACA,e;AACA,oF;AACA,mC;AACA,gF;AACA,a;AACA,G;AACA,uE;AACA,kC;AACA,8B;AACA,uB;;AAEA,yC;AACA,8B;AACA,+B;AACA,K;;AAEA,kC;AACA,0C;AACA,oC;AACA,8C;;AAEA,+G;AACA,yG;AACA,sG;;AAEA,sG;;AAEA,6D;AACA,iB;AACA,0E;AACA,iE;AACA,kD;AACA,yC;AACA,6C;AACA,0C;AACA,+C;AACA,+F;;AAEA,wD;AACA,S;AACA,0C;AACA,qD;AACA,E;;AAEA,G;AACA,8D;AACA,E;AACA,W;AACA,iB;AACA,kD;AACA,G;AACA,uD;AACA,8B;AACA,8E;AACA,kD;AACA,4C;AACA,K;AACA,kB;AACA,E;;AAEA,kC;AACA,oK;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,+D;AACA,mD;AACA,yC;AACA,8C;AACA,uD;;AAEA,G;AACA,wG;AACA,sG;AACA,qG;AACA,W;AACA,yB;AACA,e;AACA,gE;AACA,qG;AACA,gI;AACA,G;AACA,mC;AACA,kE;AACA,4D;;AAEA,0C;;AAEA,kE;AACA,8D;;AAEA,wC;;AAEA,0C;AACA,yD;;AAEA,2C;;AAEA,2C;AACA,2D;;AAEA,2C;AACA,4C;AACA,C;;AAEA,mC;AACA,gB;AACA,yC;AACA,M;AACA,kB;AACA,E;;AAEA,G;AACA,0E;AACA,E;AACA,qB;AACA,+F;AACA,G;AACA,qE;AACA,oD;AACA,E;;AAEA,G;AACA,8F;AACA,E;AACA,uB;AACA,gG;AACA,G;AACA,kE;AACA,0E;AACA,E;;AAEA,G;AACA,oE;AACA,E;AACA,kB;AACA,gH;AACA,G;AACA,wD;AACA,mE;AACA,E;;AAEA,G;AACA,8D;AACA,E;AACA,W;AACA,iB;AACA,kD;AACA,G;AACA,sD;AACA,mC;AACA,E;;AAEA,iC;AACA,+K;AACA,uC;AACA,qC;AACA,uD;AACA,6C;AACA,8C;AACA,mD;AACA,mD;;AAEA,G;AACA,uF;AACA,wH;AACA,6D;AACA,kB;AACA,e;AACA,gB;AACA,gE;AACA,iH;AACA,2F;AACA,qG;AACA,gC;AACA,+G;AACA,0I;AACA,G;AACA,4B;AACA,mE;AACA,4D;AACA,0D;;AAEA,sB;AACA,uB;;AAEA,8B;AACA,6B;;AAEA,gC;AACA,gC;AACA,sC;AACA,sB;;AAEA,iD;;AAEA,6B;AACA,sD;;AAEA,2C;AACA,wC;AACA,+C;;AAEA,0C;AACA,2C;;AAEA,yD;AACA,2D;AACA,C;;AAEA,4B;AACA,mC;AACA,c;AACA,wB;AACA,sB;AACA,E;;AAEA,6D;;AAEA,4B;AACA,wC;AACA,2C;AACA,4F;AACA,C;;AAEA,wC;AACA,iE;AACA,iD;AACA,+D;AACA,wC;AACA,C;;AAEA,yB;AACA,0E;AACA,uG;AACA,gE;AACA,Y;AACA,yD;AACA,K;AACA,C;;AAEA,G;AACA,qE;AACA,2B;AACA,2F;AACA,E;AACA,wD;AACA,6E;AACA,uC;AACA,E;;AAEA,G;AACA,mE;AACA,qB;AACA,wF;AACA,G;AACA,8D;AACA,2D;AACA,gC;AACA,+C;AACA,Y;AACA,iD;AACA,K;AACA,6C;AACA,E;;AAEA,G;AACA,oD;AACA,iB;AACA,wE;AACA,G;AACA,+C;AACA,wB;AACA,E;;AAEA,G;AACA,oF;AACA,+F;AACA,6C;AACA,+C;AACA,qB;AACA,gF;AACA,+B;AACA,G;AACA,mE;AACA,c;AACA,+B;AACA,sI;AACA,qB;AACA,qC;AACA,K;AACA,8B;AACA,yE;AACA,8C;AACA,M;AACA,E;;AAEA,G;AACA,sF;AACA,qE;AACA,uB;AACA,6E;AACA,0D;AACA,G;AACA,mE;AACA,sE;AACA,0F;AACA,U;AACA,oC;AACA,kC;AACA,K;AACA,+E;AACA,E;;AAEA,G;AACA,4E;AACA,E;AACA,uB;AACA,4F;AACA,a;AACA,G;AACA,+D;AACA,sE;AACA,sB;AACA,6B;AACA,E;;AAEA,G;AACA,6D;AACA,E;AACA,kB;AACA,yG;AACA,G;AACA,uD;AACA,mD;AACA,E;;AAEA,G;AACA,8D;AACA,E;AACA,W;AACA,iB;AACA,kD;AACA,G;AACA,+C;AACA,iC;AACA,+E;AACA,0B;AACA,E;;AAEA,G;AACA,2E;AACA,4E;AACA,yB;AACA,E;AACA,W;AACA,iB;AACA,0C;AACA,G;AACA,sD;AACA,sC;AACA,kC;AACA,gC;AACA,4B;;AAEA,0C;AACA,2G;AACA,yB;AACA,uC;AACA,uC;;AAEA,6D;AACA,oD;AACA,sC;AACA,S;AACA,c;AACA,sC;AACA,oD;AACA,S;AACA,K;;AAEA,sE;;AAEA,Y;AACA,kE;AACA,mB;AACA,yB;AACA,uB;AACA,mC;AACA,M;AACA,E;;AAEA,yB;AACA,oB;AACA,kC;AACA,oB;;AAEA,uC;AACA,2C;AACA,8B;AACA,4E;AACA,+D;AACA,gE;AACA,K;;AAEA,8B;AACA,+D;AACA,4B;AACA,kD;AACA,8C;AACA,kF;AACA,S;AACA,8B;AACA,kD;AACA,0C;AACA,kF;AACA,S;AACA,K;;AAEA,qE;AACA,gC;AACA,6B;AACA,8C;AACA,2C;AACA,e;AACA,S;AACA,K;AACA,uE;AACA,kC;AACA,8B;AACA,8C;AACA,2B;AACA,e;AACA,S;AACA,K;AACA,U;AACA,gC;AACA,6B;AACA,8C;AACA,S;AACA,K;;AAEA,gB;AACA,wF;AACA,mC;AACA,mB;AACA,yE;AACA,+C;AACA,K;;AAEA,mF;AACA,qD;AACA,wE;AACA,uB;AACA,6E;AACA,mD;AACA,S;AACA,K;;AAEA,kB;AACA,C;;AAEA,0B;AACA,gN;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,wD;AACA,qD;AACA,6C;AACA,iD;AACA,mD;AACA,uD;AACA,mD;AACA,4C;AACA,8C;AACA,mD;AACA,iD;AACA,+C;AACA,+D;;AAEA,a;AACA,oB;;AAEA,Y;AACA,oB;AACA,Y;AACA,Y;AACA,W;AACA,E;;AAEA,Y;AACA,kB;AACA,c;AACA,c;AACA,a;AACA,E;;AAEA,G;AACA,wG;AACA,oE;AACA,oB;AACA,e;AACA,gE;AACA,iH;AACA,6F;AACA,qG;AACA,gC;AACA,4H;AACA,iH;AACA,4I;AACA,+F;AACA,kE;AACA,0G;AACA,mE;AACA,4F;AACA,oG;AACA,wC;AACA,kG;AACA,wC;AACA,iG;AACA,2B;AACA,qG;AACA,mB;AACA,oG;AACA,mB;AACA,gG;AACA,mG;AACA,4F;AACA,6E;AACA,G;AACA,8B;AACA,kC;AACA,6D;AACA,4D;;AAEA,4B;AACA,gD;;AAEA,gC;AACA,4B;AACA,S;AACA,+C;AACA,2C;AACA,sC;AACA,qE;AACA,6C;AACA,gE;AACA,S;AACA,M;;AAEA,8C;AACA,oC;AACA,gD;;AAEA,8B;AACA,0B;AACA,wC;AACA,2C;AACA,O;AACA,0B;AACA,sD;AACA,mC;AACA,O;AACA,8B;AACA,mD;AACA,uC;AACA,O;;AAEA,Y;AACA,sB;AACA,yB;AACA,0C;AACA,mC;AACA,iC;AACA,iC;AACA,4B;AACA,2B;AACA,uC;AACA,2B;AACA,yB;AACA,0B;;AAEA,yB;AACA,6D;;AAEA,e;AACA,0C;AACA,2C;;AAEA,qC;AACA,qC;;AAEA,yD;AACA,2D;;AAEA,2B;;AAEA,6D;AACA,0C;AACA,C;;AAEA,8B;AACA,mC;AACA,gB;AACA,oB;AACA,iB;AACA,kB;AACA,oB;AACA,gB;AACA,sC;AACA,qB;AACA,oB;AACA,kB;AACA,sB;AACA,yB;AACA,kB;AACA,uB;AACA,gB;AACA,E;;AAEA,8B;AACA,mC;AACA,wD;;AAEA,6B;;AAEA,wB;AACA,4B;AACA,2B;AACA,C;;AAEA,6B;AACA,mC;AACA,6B;;AAEA,yD;AACA,wH;AACA,kC;AACA,6C;AACA,sC;AACA,a;AACA,S;AACA,yF;AACA,2C;AACA,S;AACA,K;AACA,+B;AACA,mC;;AAEA,qB;AACA,iD;AACA,2D;AACA,8D;;AAEA,mC;;AAEA,yC;AACA,mD;AACA,0D;AACA,K;;AAEA,iD;AACA,gC;;AAEA,4E;AACA,C;;AAEA,4B;AACA,wC;AACA,4B;AACA,iC;AACA,iH;AACA,iC;AACA,uC;AACA,iD;AACA,4D;AACA,2D;AACA,8D;AACA,mC;AACA,gC;AACA,0C;AACA,K;AACA,C;;AAEA,wB;AACA,oC;AACA,+C;AACA,+C;AACA,2C;;AAEA,8C;AACA,qC;AACA,kB;;AAEA,gD;AACA,iD;AACA,wD;AACA,yC;AACA,kB;;AAEA,6C;AACA,8D;AACA,+C;AACA,0C;AACA,kB;;AAEA,oD;AACA,gF;AACA,oE;AACA,kB;;AAEA,yC;AACA,2G;AACA,6C;AACA,kB;AACA,C;;AAEA,0B;AACA,qF;AACA,gF;AACA,C;;AAEA,0B;AACA,0C;AACA,oC;AACA,C;;AAEA,sC;AACA,2C;AACA,kC;AACA,mF;AACA,C;;AAEA,4B;AACA,yD;AACA,wB;;AAEA,uE;AACA,2E;AACA,K;;AAEA,oE;AACA,6C;AACA,iC;AACA,iC;AACA,K;AACA,C;;AAEA,8B;AACA,iC;AACA,wD;;AAEA,sC;AACA,iE;;AAEA,sC;AACA,2E;;AAEA,6C;AACA,gE;AACA,iD;AACA,iD;;AAEA,oC;AACA,oC;;AAEA,uC;;AAEA,gF;AACA,4B;AACA,K;AACA,8C;AACA,gC;AACA,K;AACA,qD;AACA,C;;AAEA,4C;AACA,sB;AACA,4C;AACA,4C;AACA,yB;AACA,qD;AACA,4C;AACA,+C;AACA,U;AACA,K;AACA,iD;AACA,4C;AACA,yB;AACA,qD;AACA,4C;AACA,+C;AACA,U;AACA,K;;AAEA,0C;AACA,4C;AACA,iC;AACA,wC;AACA,iC;AACA,K;AACA,oC;AACA,C;;AAEA,4B;AACA,mB;;AAEA,sC;AACA,iD;;AAEA,gE;AACA,wC;;AAEA,uD;AACA,2B;AACA,8C;AACA,8B;AACA,wC;AACA,gE;AACA,K;;AAEA,gD;AACA,yB;;AAEA,oD;AACA,0E;AACA,kD;AACA,kC;AACA,mC;AACA,gD;AACA,K;;AAEA,gD;;AAEA,qB;AACA,qD;AACA,sD;AACA,qD;AACA,gG;AACA,a;AACA,gB;AACA,sD;AACA,yD;AACA,+F;AACA,a;AACA,S;AACA,K;AACA,C;;AAEA,+B;AACA,uC;AACA,uC;AACA,kD;AACA,+B;;AAEA,kD;AACA,2E;AACA,K;AACA,uD;AACA,2E;AACA,K;AACA,C;;AAEA,G;AACA,oD;AACA,E;AACA,0B;AACA,yD;AACA,G;AACA,mE;AACA,4B;AACA,E;;AAEA,G;AACA,6E;AACA,E;AACA,2B;AACA,4C;AACA,G;AACA,qE;AACA,oE;;AAEA,yC;AACA,4E;AACA,oD;AACA,0B;AACA,K;;AAEA,qC;AACA,gD;AACA,uB;AACA,8E;AACA,kD;AACA,kC;AACA,kD;AACA,oD;AACA,K;AACA,wB;AACA,E;;AAEA,G;AACA,wE;AACA,E;AACA,uB;AACA,wC;AACA,G;AACA,6D;AACA,uE;AACA,wC;AACA,mB;AACA,2E;AACA,8C;AACA,8B;AACA,kD;AACA,oD;AACA,K;AACA,oB;AACA,E;;AAEA,G;AACA,sD;AACA,E;AACA,mB;AACA,G;AACA,0D;AACA,8C;AACA,U;;AAEA,+B;AACA,kD;AACA,oC;AACA,K;;AAEA,+B;AACA,kD;AACA,gC;AACA,K;AACA,E;;AAEA,yD;AACA,sE;AACA,E;;AAEA,G;AACA,8E;AACA,8C;AACA,E;AACA,c;AACA,sB;AACA,6F;AACA,sD;AACA,gG;AACA,wB;AACA,G;AACA,2D;AACA,0C;AACA,E;;AAEA,G;AACA,wE;AACA,E;AACA,8B;AACA,kE;AACA,wB;AACA,G;AACA,2E;AACA,iH;AACA,E;;AAEA,G;AACA,4E;AACA,8C;AACA,E;AACA,oB;AACA,6F;AACA,sD;AACA,gG;AACA,wB;AACA,G;AACA,kE;;AAEA,G;AACA,2F;AACA,E;AACA,c;AACA,sB;AACA,kF;AACA,G;AACA,4D;AACA,oC;AACA,E;;AAEA,G;AACA,yF;AACA,E;AACA,sB;AACA,kF;AACA,G;AACA,kE;;AAEA,G;AACA,8C;AACA,E;AACA,sB;AACA,iC;AACA,G;;AAEA,2D;AACA,mF;AACA,E;;AAEA,G;AACA,kG;AACA,kE;AACA,E;AACA,sB;AACA,mD;AACA,G;AACA,4D;AACA,oC;AACA,E;;AAEA,G;AACA,qE;AACA,E;AACA,qB;AACA,0F;AACA,G;AACA,gE;AACA,gC;AACA,0C;AACA,+E;AACA,oF;AACA,K;;AAEA,2D;AACA,gC;AACA,2C;AACA,Y;AACA,6C;AACA,K;;AAEA,2B;AACA,6C;;AAEA,0C;;AAEA,6B;AACA,uC;;AAEA,6B;AACA,wF;AACA,oG;AACA,6E;AACA,gC;AACA,4C;AACA,+C;AACA,W;AACA,K;;AAEA,yB;AACA,wH;AACA,8B;AACA,sC;AACA,4H;AACA,0C;AACA,uD;AACA,W;AACA,K;AACA,E;;AAEA,G;AACA,iF;AACA,kE;AACA,mG;AACA,wB;AACA,E;AACA,uB;AACA,4F;AACA,G;AACA,iE;AACA,uF;AACA,sB;AACA,6C;AACA,E;;AAEA,G;AACA,+D;AACA,E;AACA,kB;AACA,2G;AACA,G;AACA,mD;AACA,mE;AACA,E;;AAEA,G;AACA,8D;AACA,E;AACA,W;AACA,iB;AACA,kD;AACA,G;AACA,iD;AACA,2F;;AAEA,mC;AACA,E;;AAEA,4B;AACA,kX;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,uB;AACA,mB;AACA,0C;AACA,G;;AAEA,uD;AACA,6C;AACA,mD;AACA,8C;;AAEA,G;AACA,qG;AACA,0B;AACA,e;AACA,gE;AACA,iH;AACA,mG;AACA,qG;AACA,gC;AACA,G;AACA,oC;AACA,uB;AACA,sB;AACA,oE;;AAEA,uG;AACA,2D;;AAEA,0C;AACA,C;;AAEA,oC;AACA,mC;AACA,kB;AACA,E;;AAEA,mG;AACA,uI;AACA,Y;AACA,6B;AACA,8B;AACA,M;AACA,E;;AAEA,G;AACA,qE;AACA,E;AACA,kB;AACA,iH;AACA,G;AACA,yD;AACA,mD;AACA,sB;AACA,E;;AAEA,G;AACA,oF;AACA,E;AACA,uB;AACA,6F;AACA,a;AACA,G;AACA,wE;AACA,gE;AACA,wB;AACA,gB;AACA,E;;AAEA,G;AACA,2E;AACA,E;AACA,qB;AACA,gG;AACA,a;AACA,G;AACA,sE;AACA,yE;AACA,gB;AACA,E;;AAEA,G;AACA,mG;AACA,6F;AACA,E;AACA,4B;AACA,mG;AACA,Y;AACA,a;AACA,G;AACA,2F;AACA,0C;AACA,gB;AACA,E;;AAEA,G;AACA,8D;AACA,E;AACA,W;AACA,iB;AACA,kD;AACA,G;AACA,uD;AACA,+B;AACA,wD;AACA,yC;AACA,kC;AACA,gC;AACA,gC;AACA,gC;AACA,+B;;AAEA,wB;;AAEA,yB;AACA,iC;AACA,yB;;AAEA,oD;;AAEA,oE;AACA,4B;;AAEA,uB;AACA,6F;AACA,6I;AACA,S;;AAEA,4C;;AAEA,wF;AACA,K;;AAEA,gD;;AAEA,kB;AACA,E;;AAEA,kC;AACA,kJ;AACA,kB;AACA,8C;AACA,0B;AACA,0C;AACA,wC;AACA,8C;AACA,gC;AACA,sC;AACA,sD;AACA,kC;AACA,kD;AACA,gD;AACA,kC;AACA,sC;AACA,iD;AACA,E;;AAEA,yU;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;AAEA,qC;AACA,yC;AACA,6C;AACA,mC;;AAEA,G;AACA,sD;AACA,yD;AACA,mB;AACA,E;AACA,uB;AACA,gB;AACA,e;AACA,E;AACA,yD;AACA,wG;AACA,iG;AACA,+E;AACA,6F;AACA,oE;AACA,2F;AACA,+E;AACA,G;AACA,iC;AACA,gC;;AAEA,8B;AACA,sC;AACA,qC;AACA,O;;AAEA,6B;AACA,2D;AACA,sC;AACA,yC;AACA,O;AACA,sC;AACA,2C;AACA,kB;;AAEA,6B;AACA,2D;AACA,sC;AACA,yC;AACA,O;AACA,sC;AACA,2C;AACA,kB;;AAEA,6B;AACA,qB;AACA,gC;AACA,iB;AACA,a;AACA,6C;AACA,iC;AACA,iC;AACA,c;AACA,a;AACA,mC;AACA,kC;AACA,c;AACA,a;AACA,6C;AACA,iC;AACA,iC;AACA,a;AACA,S;AACA,O;;AAEA,2B;;AAEA,uD;AACA,2B;AACA,+B;AACA,6B;AACA,gD;AACA,qC;AACA,kD;AACA,kD;AACA,S;AACA,yC;AACA,mG;AACA,S;AACA,yC;AACA,2D;AACA,S;AACA,qC;AACA,mE;AACA,mG;AACA,mG;AACA,S;AACA,qC;AACA,kD;AACA,S;AACA,yC;AACA,mG;AACA,S;AACA,yC;AACA,uD;AACA,S;AACA,kB;AACA,C;;AAEA,wD;AACA,oD;;AAEA,iC;AACA,0B;AACA,0B;AACA,4B;AACA,4B;AACA,gB;AACA,0B;AACA,2B;AACA,E;;AAEA,G;AACA,qC;AACA,E;AACA,qB;AACA,E;AACA,mE;AACA,E;AACA,sB;AACA,G;AACA,mE;AACA,0C;AACA,E;;AAEA,+B;AACA,4H;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;AAEA,yC;AACA,yD;AACA,6C;AACA,mD;AACA,6C;AACA,uD;AACA,+C;AACA,+C;AACA,mD;;AAEA,sB;AACA,sB;AACA,qB;AACA,G;;AAEA,mB;AACA,0B;AACA,yD;AACA,2D;AACA,0C;;AAEA,wC;AACA,yC;AACA,iC;AACA,O;;AAEA,8B;AACA,qC;AACA,oC;AACA,8C;AACA,iC;AACA,O;;AAEA,0C;AACA,yC;AACA,wD;AACA,0D;;AAEA,gG;;AAEA,gC;AACA,2B;AACA,S;AACA,0B;AACA,+C;AACA,S;AACA,M;;AAEA,mC;AACA,yB;;AAEA,iD;AACA,gC;AACA,kB;;AAEA,sB;AACA,4B;AACA,C;;AAEA,0B;AACA,oB;AACA,6B;AACA,yB;AACA,kB;AACA,iB;AACA,a;AACA,c;AACA,uC;AACA,E;;AAEA,yB;AACA,uI;AACA,C;;AAEA,4D;AACA,mD;AACA,E;;AAEA,uC;AACA,8B;AACA,E;;AAEA,4C;AACA,6C;AACA,oE;AACA,4B;AACA,oD;AACA,E;;AAEA,+C;AACA,6B;AACA,E;;AAEA,6C;AACA,mC;AACA,iH;;AAEA,mC;AACA,4H;AACA,K;AACA,wC;AACA,kD;AACA,+C;AACA,oG;AACA,K;AACA,6B;;AAEA,Y;AACA,gC;AACA,iB;AACA,a;AACA,+B;AACA,+C;AACA,c;AACA,a;AACA,wD;AACA,+B;AACA,2C;AACA,a;AACA,S;AACA,M;AACA,E;;AAEA,wB;AACA,+Q;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;AAEA,8C;AACA,mC;AACA,gD;AACA,6C;;AAEA,G;AACA,0D;AACA,kD;AACA,E;AACA,gB;AACA,gB;AACA,e;AACA,E;AACA,uD;AACA,G;AACA,0B;AACA,gC;;AAEA,mC;AACA,sB;AACA,yB;AACA,+B;;AAEA,2C;AACA,2B;;AAEA,iE;AACA,C;;AAEA,iD;AACA,sC;;AAEA,0B;AACA,iB;AACA,yB;AACA,0B;AACA,mC;AACA,c;AACA,mC;AACA,K;AACA,E;;AAEA,G;AACA,oD;AACA,E;AACA,yB;AACA,E;AACA,yC;AACA,G;AACA,+B;AACA,qB;AACA,2B;;AAEA,6B;AACA,uH;AACA,K;AACA,gC;AACA,qC;AACA,8C;AACA,S;AACA,K;AACA,iC;AACA,sD;AACA,4E;AACA,S;AACA,K;AACA,C;;AAEA,G;AACA,wD;AACA,E;AACA,iC;AACA,E;AACA,0C;AACA,oD;AACA,E;AACA,oD;AACA,G;AACA,mD;AACA,6D;AACA,2B;AACA,C;;AAEA,G;AACA,yE;AACA,kC;AACA,E;AACA,wB;AACA,E;AACA,wC;AACA,sE;AACA,G;AACA,sE;AACA,e;AACA,gC;;AAEA,0B;AACA,gC;AACA,gC;AACA,yC;AACA,8B;AACA,iC;AACA,kH;AACA,K;AACA,U;AACA,iC;AACA,2D;AACA,K;;AAEA,sE;AACA,+B;;AAEA,2D;AACA,mD;AACA,E;;AAEA,G;AACA,kE;AACA,0C;AACA,E;AACA,iB;AACA,E;AACA,+B;AACA,G;AACA,+C;AACA,kC;AACA,+B;AACA,8D;AACA,mD;AACA,K;AACA,iC;AACA,mC;AACA,K;;AAEA,mD;AACA,kD;AACA,K;AACA,E;;AAEA,wB;AACA,sI;AACA,sE;AACA,sE;AACA,2D;AACA,E;AACA,sB;AACA,mB;AACA,0C;AACA,G;;AAEA,yC;AACA,mD;AACA,4D;;AAEA,G;AACA,sD;AACA,6B;AACA,E;AACA,gB;AACA,gB;AACA,e;AACA,E;AACA,uD;AACA,G;AACA,gC;AACA,oB;AACA,oB;AACA,4B;AACA,0B;AACA,wB;AACA,2D;AACA,0D;AACA,wC;AACA,uB;AACA,M;;AAEA,2C;AACA,2D;;AAEA,oC;AACA,4C;AACA,wE;AACA,kB;AACA,4C;;AAEA,mC;AACA,2C;AACA,yE;AACA,kB;AACA,2C;;AAEA,yC;AACA,wC;AACA,O;;AAEA,oB;;AAEA,0C;AACA,C;;AAEA,qB;AACA,oB;AACA,wB;;AAEA,G;AACA,6D;AACA,yC;AACA,E;AACA,iB;AACA,G;AACA,mD;AACA,yB;AACA,iE;AACA,2E;AACA,qC;AACA,E;;AAEA,G;AACA,8D;AACA,2C;AACA,E;AACA,mB;AACA,G;AACA,uD;AACA,0B;AACA,mE;AACA,uC;AACA,E;;AAEA,G;AACA,iC;AACA,E;AACA,qB;AACA,E;AACA,mC;AACA,G;AACA,2D;AACA,yB;AACA,E;;AAEA,G;AACA,+B;AACA,E;AACA,qB;AACA,E;AACA,+B;AACA,G;AACA,kE;AACA,wC;AACA,+C;AACA,yD;AACA,wD;AACA,K;AACA,6B;AACA,qD;AACA,4D;AACA,K;AACA,4B;AACA,mD;AACA,0D;AACA,K;AACA,qC;AACA,yC;AACA,kD;AACA,mD;AACA,K;AACA,uF;AACA,gG;AACA,6F;AACA,0C;AACA,mD;AACA,mE;AACA,K;AACA,E;;AAEA,G;AACA,gD;AACA,E;AACA,kB;AACA,E;AACA,oD;AACA,G;AACA,qD;AACA,6B;AACA,E;;AAEA,G;AACA,8D;AACA,E;AACA,W;AACA,iB;AACA,kD;AACA,G;AACA,mD;AACA,iC;AACA,E;;AAEA,8B;AACA,yH;AACA,kB;AACA,4C;AACA,8B;AACA,8B;AACA,yC;AACA,E;;AAEA,2F;AACA,G;;;;;;;;;;;;;;;;;;ACt3kBA,uB","sourcesContent":["if (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n        if (typeof this !== \"function\") {\n            // closest thing possible to the ECMAScript 5 internal IsCallable function\n            throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n        }\n\n        var aArgs = Array.prototype.slice.call(arguments, 1), \n        fToBind = this, \n        fNOP = function () {},\n        fBound = function () {\n            return fToBind.apply(this instanceof fNOP && oThis\n                ? this\n                : oThis,\n                aArgs.concat(Array.prototype.slice.call(arguments)));\n        };\n\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n\n        return fBound;\n    };\n}\n","\n/*\n * classList.js: Cross-browser full element.classList implementation.\n * 2011-06-15\n *\n * By Eli Grey, http://eligrey.com\n * Public Domain.\n * NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n */\n\n/*global self, document, DOMException */\n\n/*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js*/\n\nif (typeof document !== \"undefined\" && !(\"classList\" in document.createElement(\"a\"))) {\n\n(function (view) {\n\n\"use strict\";\n\nvar\n\t  classListProp = \"classList\"\n\t, protoProp = \"prototype\"\n\t, elemCtrProto = (view.HTMLElement || view.Element)[protoProp]\n\t, objCtr = Object\n\t, strTrim = String[protoProp].trim || function () {\n\t\treturn this.replace(/^\\s+|\\s+$/g, \"\");\n\t}\n\t, arrIndexOf = Array[protoProp].indexOf || function (item) {\n\t\tvar\n\t\t\t  i = 0\n\t\t\t, len = this.length\n\t\t;\n\t\tfor (; i < len; i++) {\n\t\t\tif (i in this && this[i] === item) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\t// Vendors: please allow content code to instantiate DOMExceptions\n\t, DOMEx = function (type, message) {\n\t\tthis.name = type;\n\t\tthis.code = DOMException[type];\n\t\tthis.message = message;\n\t}\n\t, checkTokenAndGetIndex = function (classList, token) {\n\t\tif (token === \"\") {\n\t\t\tthrow new DOMEx(\n\t\t\t\t  \"SYNTAX_ERR\"\n\t\t\t\t, \"An invalid or illegal string was specified\"\n\t\t\t);\n\t\t}\n\t\tif (/\\s/.test(token)) {\n\t\t\tthrow new DOMEx(\n\t\t\t\t  \"INVALID_CHARACTER_ERR\"\n\t\t\t\t, \"String contains an invalid character\"\n\t\t\t);\n\t\t}\n\t\treturn arrIndexOf.call(classList, token);\n\t}\n\t, ClassList = function (elem) {\n\t\tvar\n\t\t\t  trimmedClasses = strTrim.call(elem.className)\n\t\t\t, classes = trimmedClasses ? trimmedClasses.split(/\\s+/) : []\n\t\t\t, i = 0\n\t\t\t, len = classes.length\n\t\t;\n\t\tfor (; i < len; i++) {\n\t\t\tthis.push(classes[i]);\n\t\t}\n\t\tthis._updateClassName = function () {\n\t\t\telem.className = this.toString();\n\t\t};\n\t}\n\t, classListProto = ClassList[protoProp] = []\n\t, classListGetter = function () {\n\t\treturn new ClassList(this);\n\t}\n;\n// Most DOMException implementations don't allow calling DOMException's toString()\n// on non-DOMExceptions. Error's toString() is sufficient here.\nDOMEx[protoProp] = Error[protoProp];\nclassListProto.item = function (i) {\n\treturn this[i] || null;\n};\nclassListProto.contains = function (token) {\n\ttoken += \"\";\n\treturn checkTokenAndGetIndex(this, token) !== -1;\n};\nclassListProto.add = function (token) {\n\ttoken += \"\";\n\tif (checkTokenAndGetIndex(this, token) === -1) {\n\t\tthis.push(token);\n\t\tthis._updateClassName();\n\t}\n};\nclassListProto.remove = function (token) {\n\ttoken += \"\";\n\tvar index = checkTokenAndGetIndex(this, token);\n\tif (index !== -1) {\n\t\tthis.splice(index, 1);\n\t\tthis._updateClassName();\n\t}\n};\nclassListProto.toggle = function (token) {\n\ttoken += \"\";\n\tif (checkTokenAndGetIndex(this, token) === -1) {\n\t\tthis.add(token);\n\t} else {\n\t\tthis.remove(token);\n\t}\n};\nclassListProto.toString = function () {\n\treturn this.join(\" \");\n};\n\nif (objCtr.defineProperty) {\n\tvar classListPropDesc = {\n\t\t  get: classListGetter\n\t\t, enumerable: true\n\t\t, configurable: true\n\t};\n\ttry {\n\t\tobjCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n\t} catch (ex) { // IE 8 doesn't support enumerable:true\n\t\tif (ex.number === -0x7FF5EC54) {\n\t\t\tclassListPropDesc.enumerable = false;\n\t\t\tobjCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n\t\t}\n\t}\n} else if (objCtr[protoProp].__defineGetter__) {\n\telemCtrProto.__defineGetter__(classListProp, classListGetter);\n}\n\n}(self));\n\n}\n","// adds requestAnimationFrame functionality\n// Source: http://strd6.com/2011/05/better-window-requestanimationframe-shim/\n\nwindow.requestAnimationFrame || (window.requestAnimationFrame = \n  window.webkitRequestAnimationFrame || \n  window.mozRequestAnimationFrame    || \n  window.oRequestAnimationFrame      || \n  window.msRequestAnimationFrame     || \n  function(callback, element) {\n    return window.setTimeout(function() {\n      callback(+new Date());\n  }, 1000 / 60);\n});\n","!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.famous=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar RenderNode = require('./RenderNode');\nvar EventHandler = require('./EventHandler');\nvar ElementAllocator = require('./ElementAllocator');\nvar Transform = require('./Transform');\nvar Transitionable = require('../transitions/Transitionable');\n\nvar _zeroZero = [0, 0];\nvar usePrefix = !('perspective' in document.documentElement.style);\n\nfunction _getElementSize(element) {\n    return [element.clientWidth, element.clientHeight];\n}\n\nvar _setPerspective = usePrefix ? function(element, perspective) {\n    element.style.webkitPerspective = perspective ? perspective.toFixed() + 'px' : '';\n} : function(element, perspective) {\n    element.style.perspective = perspective ? perspective.toFixed() + 'px' : '';\n};\n\n/**\n * The top-level container for a Famous-renderable piece of the document.\n *   It is directly updated by the process-wide Engine object, and manages one\n *   render tree root, which can contain other renderables.\n *\n * @class Context\n * @constructor\n * @private\n * @param {Node} container Element in which content will be inserted\n */\nfunction Context(container) {\n    this.container = container;\n    this._allocator = new ElementAllocator(container);\n\n    this._node = new RenderNode();\n    this._eventOutput = new EventHandler();\n    this._size = _getElementSize(this.container);\n\n    this._perspectiveState = new Transitionable(0);\n    this._perspective = undefined;\n\n    this._nodeContext = {\n        allocator: this._allocator,\n        transform: Transform.identity,\n        opacity: 1,\n        origin: _zeroZero,\n        align: _zeroZero,\n        size: this._size\n    };\n\n    this._eventOutput.on('resize', function() {\n        this.setSize(_getElementSize(this.container));\n    }.bind(this));\n\n}\n\n// Note: Unused\nContext.prototype.getAllocator = function getAllocator() {\n    return this._allocator;\n};\n\n/**\n * Add renderables to this Context's render tree.\n *\n * @method add\n *\n * @param {Object} obj renderable object\n * @return {RenderNode} RenderNode wrapping this object, if not already a RenderNode\n */\nContext.prototype.add = function add(obj) {\n    return this._node.add(obj);\n};\n\n/**\n * Move this Context to another containing document element.\n *\n * @method migrate\n *\n * @param {Node} container Element to which content will be migrated\n */\nContext.prototype.migrate = function migrate(container) {\n    if (container === this.container) return;\n    this.container = container;\n    this._allocator.migrate(container);\n};\n\n/**\n * Gets viewport size for Context.\n *\n * @method getSize\n *\n * @return {Array.Number} viewport size as [width, height]\n */\nContext.prototype.getSize = function getSize() {\n    return this._size;\n};\n\n/**\n * Sets viewport size for Context.\n *\n * @method setSize\n *\n * @param {Array.Number} size [width, height].  If unspecified, use size of root document element.\n */\nContext.prototype.setSize = function setSize(size) {\n    if (!size) size = _getElementSize(this.container);\n    this._size[0] = size[0];\n    this._size[1] = size[1];\n};\n\n/**\n * Commit this Context's content changes to the document.\n *\n * @private\n * @method update\n * @param {Object} contextParameters engine commit specification\n */\nContext.prototype.update = function update(contextParameters) {\n    if (contextParameters) {\n        if (contextParameters.transform) this._nodeContext.transform = contextParameters.transform;\n        if (contextParameters.opacity) this._nodeContext.opacity = contextParameters.opacity;\n        if (contextParameters.origin) this._nodeContext.origin = contextParameters.origin;\n        if (contextParameters.align) this._nodeContext.align = contextParameters.align;\n        if (contextParameters.size) this._nodeContext.size = contextParameters.size;\n    }\n    var perspective = this._perspectiveState.get();\n    if (perspective !== this._perspective) {\n        _setPerspective(this.container, perspective);\n        this._perspective = perspective;\n    }\n\n    this._node.commit(this._nodeContext);\n};\n\n/**\n * Get current perspective of this context in pixels.\n *\n * @method getPerspective\n * @return {Number} depth perspective in pixels\n */\nContext.prototype.getPerspective = function getPerspective() {\n    return this._perspectiveState.get();\n};\n\n/**\n * Set current perspective of this context in pixels.\n *\n * @method setPerspective\n * @param {Number} perspective in pixels\n * @param {Object} [transition] Transitionable object for applying the change\n * @param {function(Object)} callback function called on completion of transition\n */\nContext.prototype.setPerspective = function setPerspective(perspective, transition, callback) {\n    return this._perspectiveState.set(perspective, transition, callback);\n};\n\n/**\n * Trigger an event, sending to all downstream handlers\n *   listening for provided 'type' key.\n *\n * @method emit\n *\n * @param {string} type event type key (for example, 'click')\n * @param {Object} event event data\n * @return {EventHandler} this\n */\nContext.prototype.emit = function emit(type, event) {\n    return this._eventOutput.emit(type, event);\n};\n\n/**\n * Bind a callback function to an event type handled by this object.\n *\n * @method \"on\"\n *\n * @param {string} type event type key (for example, 'click')\n * @param {function(string, Object)} handler callback\n * @return {EventHandler} this\n */\nContext.prototype.on = function on(type, handler) {\n    return this._eventOutput.on(type, handler);\n};\n\n/**\n * Unbind an event by type and handler.\n *   This undoes the work of \"on\".\n *\n * @method removeListener\n *\n * @param {string} type event type key (for example, 'click')\n * @param {function} handler function object to remove\n * @return {EventHandler} internal event handler object (for chaining)\n */\nContext.prototype.removeListener = function removeListener(type, handler) {\n    return this._eventOutput.removeListener(type, handler);\n};\n\n/**\n * Add event handler object to set of downstream handlers.\n *\n * @method pipe\n *\n * @param {EventHandler} target event handler target object\n * @return {EventHandler} passed event handler\n */\nContext.prototype.pipe = function pipe(target) {\n    return this._eventOutput.pipe(target);\n};\n\n/**\n * Remove handler object from set of downstream handlers.\n *   Undoes work of \"pipe\".\n *\n * @method unpipe\n *\n * @param {EventHandler} target target handler object\n * @return {EventHandler} provided target\n */\nContext.prototype.unpipe = function unpipe(target) {\n    return this._eventOutput.unpipe(target);\n};\n\nmodule.exports = Context;\n},{\"../transitions/Transitionable\":88,\"./ElementAllocator\":2,\"./EventHandler\":7,\"./RenderNode\":11,\"./Transform\":15}],2:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\n\n\n\n/**\n * Internal helper object to Context that handles the process of\n *   creating and allocating DOM elements within a managed div.\n *   Private.\n *\n * @class ElementAllocator\n * @constructor\n * @private\n * @param {Node} container document element in which Famo.us content will be inserted\n */\nfunction ElementAllocator(container) {\n    if (!container) container = document.createDocumentFragment();\n    this.container = container;\n    this.detachedNodes = {};\n    this.nodeCount = 0;\n}\n\n/**\n * Move the document elements from their original container to a new one.\n *\n * @private\n * @method migrate\n *\n * @param {Node} container document element to which Famo.us content will be migrated\n */\nElementAllocator.prototype.migrate = function migrate(container) {\n    var oldContainer = this.container;\n    if (container === oldContainer) return;\n\n    if (oldContainer instanceof DocumentFragment) {\n        container.appendChild(oldContainer);\n    }\n    else {\n        while (oldContainer.hasChildNodes()) {\n            container.appendChild(oldContainer.removeChild(oldContainer.firstChild));\n        }\n    }\n\n    this.container = container;\n};\n\n/**\n * Allocate an element of specified type from the pool.\n *\n * @private\n * @method allocate\n *\n * @param {string} type type of element, e.g. 'div'\n * @return {Node} allocated document element\n */\nElementAllocator.prototype.allocate = function allocate(type) {\n    type = type.toLowerCase();\n    if (!(type in this.detachedNodes)) this.detachedNodes[type] = [];\n    var nodeStore = this.detachedNodes[type];\n    var result;\n    if (nodeStore.length > 0) {\n        result = nodeStore.pop();\n    }\n    else {\n        result = document.createElement(type);\n        this.container.appendChild(result);\n    }\n    this.nodeCount++;\n    return result;\n};\n\n/**\n * De-allocate an element of specified type to the pool.\n *\n * @private\n * @method deallocate\n *\n * @param {Node} element document element to deallocate\n */\nElementAllocator.prototype.deallocate = function deallocate(element) {\n    var nodeType = element.nodeName.toLowerCase();\n    var nodeStore = this.detachedNodes[nodeType];\n    nodeStore.push(element);\n    this.nodeCount--;\n};\n\n/**\n * Get count of total allocated nodes in the document.\n *\n * @private\n * @method getNodeCount\n *\n * @return {Number} total node count\n */\nElementAllocator.prototype.getNodeCount = function getNodeCount() {\n    return this.nodeCount;\n};\n\nmodule.exports = ElementAllocator;\n},{}],3:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Entity = require('./Entity');\nvar EventHandler = require('./EventHandler');\nvar Transform = require('./Transform');\n\nvar usePrefix = !('transform' in document.documentElement.style);\nvar devicePixelRatio = window.devicePixelRatio || 1;\n\n/**\n * A base class for viewable content and event\n *   targets inside a Famo.us application, containing a renderable document\n *   fragment. Like an HTML div, it can accept internal markup,\n *   properties, classes, and handle events.\n *\n * @class ElementOutput\n * @constructor\n *\n * @param {Node} element document parent of this container\n */\nfunction ElementOutput(element) {\n    this._matrix = null;\n    this._opacity = 1;\n    this._origin = null;\n    this._size = null;\n\n    this._eventOutput = new EventHandler();\n    this._eventOutput.bindThis(this);\n\n    /** @ignore */\n    this.eventForwarder = function eventForwarder(event) {\n        this._eventOutput.emit(event.type, event);\n    }.bind(this);\n\n    this.id = Entity.register(this);\n    this._element = null;\n    this._sizeDirty = false;\n    this._originDirty = false;\n    this._transformDirty = false;\n\n    this._invisible = false;\n    if (element) this.attach(element);\n}\n\n/**\n * Bind a callback function to an event type handled by this object.\n *\n * @method \"on\"\n *\n * @param {string} type event type key (for example, 'click')\n * @param {function(string, Object)} fn handler callback\n * @return {EventHandler} this\n */\nElementOutput.prototype.on = function on(type, fn) {\n    if (this._element) this._element.addEventListener(type, this.eventForwarder);\n    this._eventOutput.on(type, fn);\n};\n\n/**\n * Unbind an event by type and handler.\n *   This undoes the work of \"on\"\n *\n * @method removeListener\n * @param {string} type event type key (for example, 'click')\n * @param {function(string, Object)} fn handler\n */\nElementOutput.prototype.removeListener = function removeListener(type, fn) {\n    this._eventOutput.removeListener(type, fn);\n};\n\n/**\n * Trigger an event, sending to all downstream handlers\n *   listening for provided 'type' key.\n *\n * @method emit\n *\n * @param {string} type event type key (for example, 'click')\n * @param {Object} [event] event data\n * @return {EventHandler} this\n */\nElementOutput.prototype.emit = function emit(type, event) {\n    if (event && !event.origin) event.origin = this;\n    var handled = this._eventOutput.emit(type, event);\n    if (handled && event && event.stopPropagation) event.stopPropagation();\n    return handled;\n};\n\n/**\n * Add event handler object to set of downstream handlers.\n *\n * @method pipe\n *\n * @param {EventHandler} target event handler target object\n * @return {EventHandler} passed event handler\n */\nElementOutput.prototype.pipe = function pipe(target) {\n    return this._eventOutput.pipe(target);\n};\n\n/**\n * Remove handler object from set of downstream handlers.\n *   Undoes work of \"pipe\"\n *\n * @method unpipe\n *\n * @param {EventHandler} target target handler object\n * @return {EventHandler} provided target\n */\nElementOutput.prototype.unpipe = function unpipe(target) {\n    return this._eventOutput.unpipe(target);\n};\n\n/**\n * Return spec for this surface. Note that for a base surface, this is\n *    simply an id.\n *\n * @method render\n * @private\n * @return {Object} render spec for this surface (spec id)\n */\nElementOutput.prototype.render = function render() {\n    return this.id;\n};\n\n//  Attach Famous event handling to document events emanating from target\n//    document element.  This occurs just after attachment to the document.\n//    Calling this enables methods like #on and #pipe.\nfunction _addEventListeners(target) {\n    for (var i in this._eventOutput.listeners) {\n        target.addEventListener(i, this.eventForwarder);\n    }\n}\n\n//  Detach Famous event handling from document events emanating from target\n//  document element.  This occurs just before detach from the document.\nfunction _removeEventListeners(target) {\n    for (var i in this._eventOutput.listeners) {\n        target.removeEventListener(i, this.eventForwarder);\n    }\n}\n\n/**\n * Return a Matrix's webkit css representation to be used with the\n *    CSS3 -webkit-transform style.\n *    Example: -webkit-transform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,716,243,0,1)\n *\n * @method _formatCSSTransform\n * @private\n * @param {FamousMatrix} m matrix\n * @return {string} matrix3d CSS style representation of the transform\n */\nfunction _formatCSSTransform(m) {\n    m[12] = Math.round(m[12] * devicePixelRatio) / devicePixelRatio;\n    m[13] = Math.round(m[13] * devicePixelRatio) / devicePixelRatio;\n\n    var result = 'matrix3d(';\n    for (var i = 0; i < 15; i++) {\n        result += (m[i] < 0.000001 && m[i] > -0.000001) ? '0,' : m[i] + ',';\n    }\n    result += m[15] + ')';\n    return result;\n}\n\n/**\n * Directly apply given FamousMatrix to the document element as the\n *   appropriate webkit CSS style.\n *\n * @method setMatrix\n *\n * @static\n * @private\n * @param {Element} element document element\n * @param {FamousMatrix} matrix\n */\n\nvar _setMatrix;\nif (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {\n    _setMatrix = function(element, matrix) {\n        element.style.zIndex = (matrix[14] * 1000000) | 0;    // fix for Firefox z-buffer issues\n        element.style.transform = _formatCSSTransform(matrix);\n    };\n}\nelse if (usePrefix) {\n    _setMatrix = function(element, matrix) {\n        element.style.webkitTransform = _formatCSSTransform(matrix);\n    };\n}\nelse {\n    _setMatrix = function(element, matrix) {\n        element.style.transform = _formatCSSTransform(matrix);\n    };\n}\n\n// format origin as CSS percentage string\nfunction _formatCSSOrigin(origin) {\n    return (100 * origin[0]) + '% ' + (100 * origin[1]) + '%';\n}\n\n// Directly apply given origin coordinates to the document element as the\n// appropriate webkit CSS style.\nvar _setOrigin = usePrefix ? function(element, origin) {\n    element.style.webkitTransformOrigin = _formatCSSOrigin(origin);\n} : function(element, origin) {\n    element.style.transformOrigin = _formatCSSOrigin(origin);\n};\n\n// Shrink given document element until it is effectively invisible.\nvar _setInvisible = usePrefix ? function(element) {\n    element.style.webkitTransform = 'scale3d(0.0001,0.0001,0.0001)';\n    element.style.opacity = 0;\n} : function(element) {\n    element.style.transform = 'scale3d(0.0001,0.0001,0.0001)';\n    element.style.opacity = 0;\n};\n\nfunction _xyNotEquals(a, b) {\n    return (a && b) ? (a[0] !== b[0] || a[1] !== b[1]) : a !== b;\n}\n\n/**\n * Apply changes from this component to the corresponding document element.\n * This includes changes to classes, styles, size, content, opacity, origin,\n * and matrix transforms.\n *\n * @private\n * @method commit\n * @param {Context} context commit context\n */\nElementOutput.prototype.commit = function commit(context) {\n    var target = this._element;\n    if (!target) return;\n\n    var matrix = context.transform;\n    var opacity = context.opacity;\n    var origin = context.origin;\n    var size = context.size;\n\n    if (!matrix && this._matrix) {\n        this._matrix = null;\n        this._opacity = 0;\n        _setInvisible(target);\n        return;\n    }\n\n    if (_xyNotEquals(this._origin, origin)) this._originDirty = true;\n    if (Transform.notEquals(this._matrix, matrix)) this._transformDirty = true;\n\n    if (this._invisible) {\n        this._invisible = false;\n        this._element.style.display = '';\n    }\n\n    if (this._opacity !== opacity) {\n        this._opacity = opacity;\n        target.style.opacity = (opacity >= 1) ? '0.999999' : opacity;\n    }\n\n    if (this._transformDirty || this._originDirty || this._sizeDirty) {\n        if (this._sizeDirty) this._sizeDirty = false;\n\n        if (this._originDirty) {\n            if (origin) {\n                if (!this._origin) this._origin = [0, 0];\n                this._origin[0] = origin[0];\n                this._origin[1] = origin[1];\n            }\n            else this._origin = null;\n            _setOrigin(target, this._origin);\n            this._originDirty = false;\n        }\n\n        if (!matrix) matrix = Transform.identity;\n        this._matrix = matrix;\n        var aaMatrix = this._size ? Transform.thenMove(matrix, [-this._size[0]*origin[0], -this._size[1]*origin[1], 0]) : matrix;\n        _setMatrix(target, aaMatrix);\n        this._transformDirty = false;\n    }\n};\n\nElementOutput.prototype.cleanup = function cleanup() {\n    if (this._element) {\n        this._invisible = true;\n        this._element.style.display = 'none';\n    }\n};\n\n/**\n * Place the document element that this component manages into the document.\n *\n * @private\n * @method attach\n * @param {Node} target document parent of this container\n */\nElementOutput.prototype.attach = function attach(target) {\n    this._element = target;\n    _addEventListeners.call(this, target);\n};\n\n/**\n * Remove any contained document content associated with this surface\n *   from the actual document.\n *\n * @private\n * @method detach\n */\nElementOutput.prototype.detach = function detach() {\n    var target = this._element;\n    if (target) {\n        _removeEventListeners.call(this, target);\n        if (this._invisible) {\n            this._invisible = false;\n            this._element.style.display = '';\n        }\n    }\n    this._element = null;\n    return target;\n};\n\nmodule.exports = ElementOutput;\n},{\"./Entity\":5,\"./EventHandler\":7,\"./Transform\":15}],4:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\n/**\n * The singleton object initiated upon process\n *   startup which manages all active Context instances, runs\n *   the render dispatch loop, and acts as a listener and dispatcher\n *   for events.  All methods are therefore static.\n *\n *   On static initialization, window.requestAnimationFrame is called with\n *     the event loop function.\n *\n *   Note: Any window in which Engine runs will prevent default\n *     scrolling behavior on the 'touchmove' event.\n *\n * @static\n * @class Engine\n */\nvar Context = require('./Context');\nvar EventHandler = require('./EventHandler');\nvar OptionsManager = require('./OptionsManager');\n\nvar Engine = {};\n\nvar contexts = [];\nvar nextTickQueue = [];\nvar deferQueue = [];\n\nvar lastTime = Date.now();\nvar frameTime;\nvar frameTimeLimit;\nvar loopEnabled = true;\nvar eventForwarders = {};\nvar eventHandler = new EventHandler();\n\nvar options = {\n    containerType: 'div',\n    containerClass: 'famous-container',\n    fpsCap: undefined,\n    runLoop: true,\n    appMode: true\n};\nvar optionsManager = new OptionsManager(options);\n\n/** @const */\nvar MAX_DEFER_FRAME_TIME = 10;\n\n/**\n * Inside requestAnimationFrame loop, step() is called, which:\n *   calculates current FPS (throttling loop if it is over limit set in setFPSCap),\n *   emits dataless 'prerender' event on start of loop,\n *   calls in order any one-shot functions registered by nextTick on last loop,\n *   calls Context.update on all Context objects registered,\n *   and emits dataless 'postrender' event on end of loop.\n *\n * @static\n * @private\n * @method step\n */\nEngine.step = function step() {\n    var currentTime = Date.now();\n\n    // skip frame if we're over our framerate cap\n    if (frameTimeLimit && currentTime - lastTime < frameTimeLimit) return;\n\n    var i = 0;\n\n    frameTime = currentTime - lastTime;\n    lastTime = currentTime;\n\n    eventHandler.emit('prerender');\n\n    // empty the queue\n    for (i = 0; i < nextTickQueue.length; i++) nextTickQueue[i].call(this);\n    nextTickQueue.splice(0);\n\n    // limit total execution time for deferrable functions\n    while (deferQueue.length && (Date.now() - currentTime) < MAX_DEFER_FRAME_TIME) {\n        deferQueue.shift().call(this);\n    }\n\n    for (i = 0; i < contexts.length; i++) contexts[i].update();\n\n    eventHandler.emit('postrender');\n};\n\n// engage requestAnimationFrame\nfunction loop() {\n    if (options.runLoop) {\n        Engine.step();\n        window.requestAnimationFrame(loop);\n    }\n    else loopEnabled = false;\n}\nwindow.requestAnimationFrame(loop);\n\n//\n// Upon main document window resize (unless on an \"input\" HTML element):\n//   scroll to the top left corner of the window,\n//   and for each managed Context: emit the 'resize' event and update its size.\n// @param {Object=} event document event\n//\nfunction handleResize(event) {\n    for (var i = 0; i < contexts.length; i++) {\n        contexts[i].emit('resize');\n    }\n    eventHandler.emit('resize');\n}\nwindow.addEventListener('resize', handleResize, false);\nhandleResize();\n\n/**\n * Initialize famous for app mode\n *\n * @static\n * @private\n * @method initialize\n */\nfunction initialize() {\n    // prevent scrolling via browser\n    window.addEventListener('touchmove', function(event) {\n        event.preventDefault();\n    }, true);\n    document.body.classList.add('famous-root');\n    document.documentElement.classList.add('famous-root');\n}\nvar initialized = false;\n\n/**\n * Add event handler object to set of downstream handlers.\n *\n * @method pipe\n *\n * @param {EventHandler} target event handler target object\n * @return {EventHandler} passed event handler\n */\nEngine.pipe = function pipe(target) {\n    if (target.subscribe instanceof Function) return target.subscribe(Engine);\n    else return eventHandler.pipe(target);\n};\n\n/**\n * Remove handler object from set of downstream handlers.\n *   Undoes work of \"pipe\".\n *\n * @method unpipe\n *\n * @param {EventHandler} target target handler object\n * @return {EventHandler} provided target\n */\nEngine.unpipe = function unpipe(target) {\n    if (target.unsubscribe instanceof Function) return target.unsubscribe(Engine);\n    else return eventHandler.unpipe(target);\n};\n\n/**\n * Bind a callback function to an event type handled by this object.\n *\n * @static\n * @method \"on\"\n *\n * @param {string} type event type key (for example, 'click')\n * @param {function(string, Object)} handler callback\n * @return {EventHandler} this\n */\nEngine.on = function on(type, handler) {\n    if (!(type in eventForwarders)) {\n        eventForwarders[type] = eventHandler.emit.bind(eventHandler, type);\n        if (document.body) {\n            document.body.addEventListener(type, eventForwarders[type]);\n        }\n        else {\n            Engine.nextTick(function(type, forwarder) {\n                document.body.addEventListener(type, forwarder);\n            }.bind(this, type, eventForwarders[type]));\n        }\n    }\n    return eventHandler.on(type, handler);\n};\n\n/**\n * Trigger an event, sending to all downstream handlers\n *   listening for provided 'type' key.\n *\n * @method emit\n *\n * @param {string} type event type key (for example, 'click')\n * @param {Object} event event data\n * @return {EventHandler} this\n */\nEngine.emit = function emit(type, event) {\n    return eventHandler.emit(type, event);\n};\n\n/**\n * Unbind an event by type and handler.\n *   This undoes the work of \"on\".\n *\n * @static\n * @method removeListener\n *\n * @param {string} type event type key (for example, 'click')\n * @param {function} handler function object to remove\n * @return {EventHandler} internal event handler object (for chaining)\n */\nEngine.removeListener = function removeListener(type, handler) {\n    return eventHandler.removeListener(type, handler);\n};\n\n/**\n * Return the current calculated frames per second of the Engine.\n *\n * @static\n * @method getFPS\n *\n * @return {Number} calculated fps\n */\nEngine.getFPS = function getFPS() {\n    return 1000 / frameTime;\n};\n\n/**\n * Set the maximum fps at which the system should run. If internal render\n *    loop is called at a greater frequency than this FPSCap, Engine will\n *    throttle render and update until this rate is achieved.\n *\n * @static\n * @method setFPSCap\n *\n * @param {Number} fps maximum frames per second\n */\nEngine.setFPSCap = function setFPSCap(fps) {\n    frameTimeLimit = Math.floor(1000 / fps);\n};\n\n/**\n * Return engine options.\n *\n * @static\n * @method getOptions\n * @param {string} key\n * @return {Object} engine options\n */\nEngine.getOptions = function getOptions(key) {\n    return optionsManager.getOptions(key);\n};\n\n/**\n * Set engine options\n *\n * @static\n * @method setOptions\n *\n * @param {Object} [options] overrides of default options\n * @param {Number} [options.fpsCap]  maximum fps at which the system should run\n * @param {boolean} [options.runLoop=true] whether the run loop should continue\n * @param {string} [options.containerType=\"div\"] type of container element.  Defaults to 'div'.\n * @param {string} [options.containerClass=\"famous-container\"] type of container element.  Defaults to 'famous-container'.\n */\nEngine.setOptions = function setOptions(options) {\n    return optionsManager.setOptions.apply(optionsManager, arguments);\n};\n\n/**\n * Creates a new Context for rendering and event handling with\n *    provided document element as top of each tree. This will be tracked by the\n *    process-wide Engine.\n *\n * @static\n * @method createContext\n *\n * @param {Node} el will be top of Famo.us document element tree\n * @return {Context} new Context within el\n */\nEngine.createContext = function createContext(el) {\n    if (!initialized && options.appMode) Engine.nextTick(initialize);\n\n    var needMountContainer = false;\n    if (!el) {\n        el = document.createElement(options.containerType);\n        el.classList.add(options.containerClass);\n        needMountContainer = true;\n    }\n    var context = new Context(el);\n    Engine.registerContext(context);\n    if (needMountContainer) {\n        Engine.nextTick(function(context, el) {\n            document.body.appendChild(el);\n            context.emit('resize');\n        }.bind(this, context, el));\n    }\n    return context;\n};\n\n/**\n * Registers an existing context to be updated within the run loop.\n *\n * @static\n * @method registerContext\n *\n * @param {Context} context Context to register\n * @return {FamousContext} provided context\n */\nEngine.registerContext = function registerContext(context) {\n    contexts.push(context);\n    return context;\n};\n\n/**\n * Returns a list of all contexts.\n *\n * @static\n * @method getContexts\n * @return {Array} contexts that are updated on each tick\n */\nEngine.getContexts = function getContexts() {\n    return contexts;\n};\n\n/**\n * Removes a context from the run loop. Note: this does not do any\n *     cleanup.\n *\n * @static\n * @method deregisterContext\n *\n * @param {Context} context Context to deregister\n */\nEngine.deregisterContext = function deregisterContext(context) {\n    var i = contexts.indexOf(context);\n    if (i >= 0) contexts.splice(i, 1);\n};\n\n/**\n * Queue a function to be executed on the next tick of the\n *    Engine.\n *\n * @static\n * @method nextTick\n *\n * @param {function(Object)} fn function accepting window object\n */\nEngine.nextTick = function nextTick(fn) {\n    nextTickQueue.push(fn);\n};\n\n/**\n * Queue a function to be executed sometime soon, at a time that is\n *    unlikely to affect frame rate.\n *\n * @static\n * @method defer\n *\n * @param {Function} fn\n */\nEngine.defer = function defer(fn) {\n    deferQueue.push(fn);\n};\n\noptionsManager.on('change', function(data) {\n    if (data.id === 'fpsCap') Engine.setFPSCap(data.value);\n    else if (data.id === 'runLoop') {\n        // kick off the loop only if it was stopped\n        if (!loopEnabled && data.value) {\n            loopEnabled = true;\n            window.requestAnimationFrame(loop);\n        }\n    }\n});\n\nmodule.exports = Engine;\n},{\"./Context\":1,\"./EventHandler\":7,\"./OptionsManager\":10}],5:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\n\n\n/**\n * A singleton that maintains a global registry of Surfaces.\n *   Private.\n *\n * @private\n * @static\n * @class Entity\n */\n\nvar entities = [];\n\n/**\n * Get entity from global index.\n *\n * @private\n * @method get\n * @param {Number} id entity registration id\n * @return {Surface} entity in the global index\n */\nfunction get(id) {\n    return entities[id];\n}\n\n/**\n * Overwrite entity in the global index\n *\n * @private\n * @method set\n * @param {Number} id entity registration id\n * @param {Surface} entity to add to the global index\n */\nfunction set(id, entity) {\n    entities[id] = entity;\n}\n\n/**\n * Add entity to global index\n *\n * @private\n * @method register\n * @param {Surface} entity to add to global index\n * @return {Number} new id\n */\nfunction register(entity) {\n    var id = entities.length;\n    set(id, entity);\n    return id;\n}\n\n/**\n * Remove entity from global index\n *\n * @private\n * @method unregister\n * @param {Number} id entity registration id\n */\nfunction unregister(id) {\n    set(id, null);\n}\n\nmodule.exports = {\n    register: register,\n    unregister: unregister,\n    get: get,\n    set: set\n};\n},{}],6:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\n\n\n/**\n * EventEmitter represents a channel for events.\n *\n * @class EventEmitter\n * @constructor\n */\nfunction EventEmitter() {\n    this.listeners = {};\n    this._owner = this;\n}\n\n/**\n * Trigger an event, sending to all downstream handlers\n *   listening for provided 'type' key.\n *\n * @method emit\n *\n * @param {string} type event type key (for example, 'click')\n * @param {Object} event event data\n * @return {EventHandler} this\n */\nEventEmitter.prototype.emit = function emit(type, event) {\n    var handlers = this.listeners[type];\n    if (handlers) {\n        for (var i = 0; i < handlers.length; i++) {\n            handlers[i].call(this._owner, event);\n        }\n    }\n    return this;\n};\n\n/**\n * Bind a callback function to an event type handled by this object.\n *\n * @method \"on\"\n *\n * @param {string} type event type key (for example, 'click')\n * @param {function(string, Object)} handler callback\n * @return {EventHandler} this\n */\n   EventEmitter.prototype.on = function on(type, handler) {\n    if (!(type in this.listeners)) this.listeners[type] = [];\n    var index = this.listeners[type].indexOf(handler);\n    if (index < 0) this.listeners[type].push(handler);\n    return this;\n};\n\n/**\n * Alias for \"on\".\n * @method addListener\n */\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n   /**\n * Unbind an event by type and handler.\n *   This undoes the work of \"on\".\n *\n * @method removeListener\n *\n * @param {string} type event type key (for example, 'click')\n * @param {function} handler function object to remove\n * @return {EventEmitter} this\n */\nEventEmitter.prototype.removeListener = function removeListener(type, handler) {\n    var listener = this.listeners[type];\n    if (listener !== undefined) {\n        var index = listener.indexOf(handler);\n        if (index >= 0) listener.splice(index, 1);\n    }\n    return this;\n};\n\n/**\n * Call event handlers with this set to owner.\n *\n * @method bindThis\n *\n * @param {Object} owner object this EventEmitter belongs to\n */\nEventEmitter.prototype.bindThis = function bindThis(owner) {\n    this._owner = owner;\n};\n\nmodule.exports = EventEmitter;\n},{}],7:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar EventEmitter = require('./EventEmitter');\n\n/**\n * EventHandler forwards received events to a set of provided callback functions.\n * It allows events to be captured, processed, and optionally piped through to other event handlers.\n *\n * @class EventHandler\n * @extends EventEmitter\n * @constructor\n */\nfunction EventHandler() {\n    EventEmitter.apply(this, arguments);\n\n    this.downstream = []; // downstream event handlers\n    this.downstreamFn = []; // downstream functions\n\n    this.upstream = []; // upstream event handlers\n    this.upstreamListeners = {}; // upstream listeners\n}\nEventHandler.prototype = Object.create(EventEmitter.prototype);\nEventHandler.prototype.constructor = EventHandler;\n\n/**\n * Assign an event handler to receive an object's input events.\n *\n * @method setInputHandler\n * @static\n *\n * @param {Object} object object to mix trigger, subscribe, and unsubscribe functions into\n * @param {EventHandler} handler assigned event handler\n */\nEventHandler.setInputHandler = function setInputHandler(object, handler) {\n    object.trigger = handler.trigger.bind(handler);\n    if (handler.subscribe && handler.unsubscribe) {\n        object.subscribe = handler.subscribe.bind(handler);\n        object.unsubscribe = handler.unsubscribe.bind(handler);\n    }\n};\n\n/**\n * Assign an event handler to receive an object's output events.\n *\n * @method setOutputHandler\n * @static\n *\n * @param {Object} object object to mix pipe, unpipe, on, addListener, and removeListener functions into\n * @param {EventHandler} handler assigned event handler\n */\nEventHandler.setOutputHandler = function setOutputHandler(object, handler) {\n    if (handler instanceof EventHandler) handler.bindThis(object);\n    object.pipe = handler.pipe.bind(handler);\n    object.unpipe = handler.unpipe.bind(handler);\n    object.on = handler.on.bind(handler);\n    object.addListener = object.on;\n    object.removeListener = handler.removeListener.bind(handler);\n};\n\n/**\n * Trigger an event, sending to all downstream handlers\n *   listening for provided 'type' key.\n *\n * @method emit\n *\n * @param {string} type event type key (for example, 'click')\n * @param {Object} event event data\n * @return {EventHandler} this\n */\nEventHandler.prototype.emit = function emit(type, event) {\n    EventEmitter.prototype.emit.apply(this, arguments);\n    var i = 0;\n    for (i = 0; i < this.downstream.length; i++) {\n        if (this.downstream[i].trigger) this.downstream[i].trigger(type, event);\n    }\n    for (i = 0; i < this.downstreamFn.length; i++) {\n        this.downstreamFn[i](type, event);\n    }\n    return this;\n};\n\n/**\n * Alias for emit\n * @method addListener\n */\nEventHandler.prototype.trigger = EventHandler.prototype.emit;\n\n/**\n * Add event handler object to set of downstream handlers.\n *\n * @method pipe\n *\n * @param {EventHandler} target event handler target object\n * @return {EventHandler} passed event handler\n */\nEventHandler.prototype.pipe = function pipe(target) {\n    if (target.subscribe instanceof Function) return target.subscribe(this);\n\n    var downstreamCtx = (target instanceof Function) ? this.downstreamFn : this.downstream;\n    var index = downstreamCtx.indexOf(target);\n    if (index < 0) downstreamCtx.push(target);\n\n    if (target instanceof Function) target('pipe', null);\n    else if (target.trigger) target.trigger('pipe', null);\n\n    return target;\n};\n\n/**\n * Remove handler object from set of downstream handlers.\n *   Undoes work of \"pipe\".\n *\n * @method unpipe\n *\n * @param {EventHandler} target target handler object\n * @return {EventHandler} provided target\n */\nEventHandler.prototype.unpipe = function unpipe(target) {\n    if (target.unsubscribe instanceof Function) return target.unsubscribe(this);\n\n    var downstreamCtx = (target instanceof Function) ? this.downstreamFn : this.downstream;\n    var index = downstreamCtx.indexOf(target);\n    if (index >= 0) {\n        downstreamCtx.splice(index, 1);\n        if (target instanceof Function) target('unpipe', null);\n        else if (target.trigger) target.trigger('unpipe', null);\n        return target;\n    }\n    else return false;\n};\n\n/**\n * Bind a callback function to an event type handled by this object.\n *\n * @method \"on\"\n *\n * @param {string} type event type key (for example, 'click')\n * @param {function(string, Object)} handler callback\n * @return {EventHandler} this\n */\nEventHandler.prototype.on = function on(type, handler) {\n    EventEmitter.prototype.on.apply(this, arguments);\n    if (!(type in this.upstreamListeners)) {\n        var upstreamListener = this.trigger.bind(this, type);\n        this.upstreamListeners[type] = upstreamListener;\n        for (var i = 0; i < this.upstream.length; i++) {\n            this.upstream[i].on(type, upstreamListener);\n        }\n    }\n    return this;\n};\n\n/**\n * Alias for \"on\"\n * @method addListener\n */\nEventHandler.prototype.addListener = EventHandler.prototype.on;\n\n/**\n * Listen for events from an upstream event handler.\n *\n * @method subscribe\n *\n * @param {EventEmitter} source source emitter object\n * @return {EventHandler} this\n */\nEventHandler.prototype.subscribe = function subscribe(source) {\n    var index = this.upstream.indexOf(source);\n    if (index < 0) {\n        this.upstream.push(source);\n        for (var type in this.upstreamListeners) {\n            source.on(type, this.upstreamListeners[type]);\n        }\n    }\n    return this;\n};\n\n/**\n * Stop listening to events from an upstream event handler.\n *\n * @method unsubscribe\n *\n * @param {EventEmitter} source source emitter object\n * @return {EventHandler} this\n */\nEventHandler.prototype.unsubscribe = function unsubscribe(source) {\n    var index = this.upstream.indexOf(source);\n    if (index >= 0) {\n        this.upstream.splice(index, 1);\n        for (var type in this.upstreamListeners) {\n            source.removeListener(type, this.upstreamListeners[type]);\n        }\n    }\n    return this;\n};\n\nmodule.exports = EventHandler;\n},{\"./EventEmitter\":6}],8:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Context = require('./Context');\nvar Transform = require('./Transform');\nvar Surface = require('./Surface');\n\n/**\n * A Context designed to contain surfaces and set properties\n *   to be applied to all of them at once.\n *   This is primarily used for specific performance improvements in the rendering engine.\n *   Private.\n *\n * @private\n * @class Group\n * @extends Surface\n * @constructor\n * @param {Object} [options] Surface options array (see Surface})\n */\nfunction Group(options) {\n    Surface.call(this, options);\n    this._shouldRecalculateSize = false;\n    this._container = document.createDocumentFragment();\n    this.context = new Context(this._container);\n    this.setContent(this._container);\n    this._groupSize = [undefined, undefined];\n}\n\n/** @const */\nGroup.SIZE_ZERO = [0, 0];\n\nGroup.prototype = Object.create(Surface.prototype);\nGroup.prototype.elementType = 'div';\nGroup.prototype.elementClass = 'famous-group';\n\n/**\n * Add renderables to this component's render tree.\n *\n * @method add\n * @private\n * @param {Object} obj renderable object\n * @return {RenderNode} Render wrapping provided object, if not already a RenderNode\n */\nGroup.prototype.add = function add() {\n    return this.context.add.apply(this.context, arguments);\n};\n\n/**\n * Generate a render spec from the contents of this component.\n *\n * @private\n * @method render\n * @return {Number} Render spec for this component\n */\nGroup.prototype.render = function render() {\n    return Surface.prototype.render.call(this);\n};\n\n/**\n * Place the document element this component manages into the document.\n *\n * @private\n * @method deploy\n * @param {Node} target document parent of this container\n */\nGroup.prototype.deploy = function deploy(target) {\n    this.context.migrate(target);\n};\n\n/**\n * Remove this component and contained content from the document\n *\n * @private\n * @method recall\n *\n * @param {Node} target node to which the component was deployed\n */\nGroup.prototype.recall = function recall(target) {\n    this._container = document.createDocumentFragment();\n    this.context.migrate(this._container);\n};\n\n/**\n * Apply changes from this component to the corresponding document element.\n *\n * @private\n * @method commit\n *\n * @param {Object} context update spec passed in from above in the render tree.\n */\nGroup.prototype.commit = function commit(context) {\n    var transform = context.transform;\n    var origin = context.origin;\n    var opacity = context.opacity;\n    var size = context.size;\n    var result = Surface.prototype.commit.call(this, {\n        allocator: context.allocator,\n        transform: Transform.thenMove(transform, [-origin[0] * size[0], -origin[1] * size[1], 0]),\n        opacity: opacity,\n        origin: origin,\n        size: Group.SIZE_ZERO\n    });\n    if (size[0] !== this._groupSize[0] || size[1] !== this._groupSize[1]) {\n        this._groupSize[0] = size[0];\n        this._groupSize[1] = size[1];\n        this.context.setSize(size);\n    }\n    this.context.update({\n        transform: Transform.translate(-origin[0] * size[0], -origin[1] * size[1], 0),\n        origin: origin,\n        size: size\n    });\n    return result;\n};\n\nmodule.exports = Group;\n},{\"./Context\":1,\"./Surface\":14,\"./Transform\":15}],9:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Transform = require('./Transform');\nvar Transitionable = require('../transitions/Transitionable');\nvar TransitionableTransform = require('../transitions/TransitionableTransform');\n\n/**\n *\n *  A collection of visual changes to be\n *    applied to another renderable component. This collection includes a\n *    transform matrix, an opacity constant, a size, an origin specifier.\n *    Modifier objects can be added to any RenderNode or object\n *    capable of displaying renderables.  The Modifier's children and descendants\n *    are transformed by the amounts specified in the Modifier's properties.\n *\n * @class Modifier\n * @constructor\n * @param {Object} [options] overrides of default options\n * @param {Transform} [options.transform] affine transformation matrix\n * @param {Number} [options.opacity]\n * @param {Array.Number} [options.origin] origin adjustment\n * @param {Array.Number} [options.size] size to apply to descendants\n */\nfunction Modifier(options) {\n    this._transformGetter = null;\n    this._opacityGetter = null;\n    this._originGetter = null;\n    this._alignGetter = null;\n    this._sizeGetter = null;\n    this._proportionGetter = null;\n\n    /* TODO: remove this when deprecation complete */\n    this._legacyStates = {};\n\n    this._output = {\n        transform: Transform.identity,\n        opacity: 1,\n        origin: null,\n        align: null,\n        size: null,\n        proportions: null,\n        target: null\n    };\n\n    if (options) {\n        if (options.transform) this.transformFrom(options.transform);\n        if (options.opacity !== undefined) this.opacityFrom(options.opacity);\n        if (options.origin) this.originFrom(options.origin);\n        if (options.align) this.alignFrom(options.align);\n        if (options.size) this.sizeFrom(options.size);\n        if (options.proportions) this.proportionsFrom(options.proportions);\n    }\n}\n\n/**\n * Function, object, or static transform matrix which provides the transform.\n *   This is evaluated on every tick of the engine.\n *\n * @method transformFrom\n *\n * @param {Object} transform transform provider object\n * @return {Modifier} this\n */\nModifier.prototype.transformFrom = function transformFrom(transform) {\n    if (transform instanceof Function) this._transformGetter = transform;\n    else if (transform instanceof Object && transform.get) this._transformGetter = transform.get.bind(transform);\n    else {\n        this._transformGetter = null;\n        this._output.transform = transform;\n    }\n    return this;\n};\n\n/**\n * Set function, object, or number to provide opacity, in range [0,1].\n *\n * @method opacityFrom\n *\n * @param {Object} opacity provider object\n * @return {Modifier} this\n */\nModifier.prototype.opacityFrom = function opacityFrom(opacity) {\n    if (opacity instanceof Function) this._opacityGetter = opacity;\n    else if (opacity instanceof Object && opacity.get) this._opacityGetter = opacity.get.bind(opacity);\n    else {\n        this._opacityGetter = null;\n        this._output.opacity = opacity;\n    }\n    return this;\n};\n\n/**\n * Set function, object, or numerical array to provide origin, as [x,y],\n *   where x and y are in the range [0,1].\n *\n * @method originFrom\n *\n * @param {Object} origin provider object\n * @return {Modifier} this\n */\nModifier.prototype.originFrom = function originFrom(origin) {\n    if (origin instanceof Function) this._originGetter = origin;\n    else if (origin instanceof Object && origin.get) this._originGetter = origin.get.bind(origin);\n    else {\n        this._originGetter = null;\n        this._output.origin = origin;\n    }\n    return this;\n};\n\n/**\n * Set function, object, or numerical array to provide align, as [x,y],\n *   where x and y are in the range [0,1].\n *\n * @method alignFrom\n *\n * @param {Object} align provider object\n * @return {Modifier} this\n */\nModifier.prototype.alignFrom = function alignFrom(align) {\n    if (align instanceof Function) this._alignGetter = align;\n    else if (align instanceof Object && align.get) this._alignGetter = align.get.bind(align);\n    else {\n        this._alignGetter = null;\n        this._output.align = align;\n    }\n    return this;\n};\n\n/**\n * Set function, object, or numerical array to provide size, as [width, height].\n *\n * @method sizeFrom\n *\n * @param {Object} size provider object\n * @return {Modifier} this\n */\nModifier.prototype.sizeFrom = function sizeFrom(size) {\n    if (size instanceof Function) this._sizeGetter = size;\n    else if (size instanceof Object && size.get) this._sizeGetter = size.get.bind(size);\n    else {\n        this._sizeGetter = null;\n        this._output.size = size;\n    }\n    return this;\n};\n\n/**\n * Set function, object, or numerical array to provide proportions, as [percent of width, percent of height].\n *\n * @method proportionsFrom\n *\n * @param {Object} proportions provider object\n * @return {Modifier} this\n */\nModifier.prototype.proportionsFrom = function proportionsFrom(proportions) {\n    if (proportions instanceof Function) this._proportionGetter = proportions;\n    else if (proportions instanceof Object && proportions.get) this._proportionGetter = proportions.get.bind(proportions);\n    else {\n        this._proportionGetter = null;\n        this._output.proportions = proportions;\n    }\n    return this;\n};\n\n /**\n * Deprecated: Prefer transformFrom with static Transform, or use a TransitionableTransform.\n * @deprecated\n * @method setTransform\n *\n * @param {Transform} transform Transform to transition to\n * @param {Transitionable} transition Valid transitionable object\n * @param {Function} callback callback to call after transition completes\n * @return {Modifier} this\n */\nModifier.prototype.setTransform = function setTransform(transform, transition, callback) {\n    if (transition || this._legacyStates.transform) {\n        if (!this._legacyStates.transform) {\n            this._legacyStates.transform = new TransitionableTransform(this._output.transform);\n        }\n        if (!this._transformGetter) this.transformFrom(this._legacyStates.transform);\n\n        this._legacyStates.transform.set(transform, transition, callback);\n        return this;\n    }\n    else return this.transformFrom(transform);\n};\n\n/**\n * Deprecated: Prefer opacityFrom with static opacity array, or use a Transitionable with that opacity.\n * @deprecated\n * @method setOpacity\n *\n * @param {Number} opacity Opacity value to transition to.\n * @param {Transitionable} transition Valid transitionable object\n * @param {Function} callback callback to call after transition completes\n * @return {Modifier} this\n */\nModifier.prototype.setOpacity = function setOpacity(opacity, transition, callback) {\n    if (transition || this._legacyStates.opacity) {\n        if (!this._legacyStates.opacity) {\n            this._legacyStates.opacity = new Transitionable(this._output.opacity);\n        }\n        if (!this._opacityGetter) this.opacityFrom(this._legacyStates.opacity);\n\n        return this._legacyStates.opacity.set(opacity, transition, callback);\n    }\n    else return this.opacityFrom(opacity);\n};\n\n/**\n * Deprecated: Prefer originFrom with static origin array, or use a Transitionable with that origin.\n * @deprecated\n * @method setOrigin\n *\n * @param {Array.Number} origin two element array with values between 0 and 1.\n * @param {Transitionable} transition Valid transitionable object\n * @param {Function} callback callback to call after transition completes\n * @return {Modifier} this\n */\nModifier.prototype.setOrigin = function setOrigin(origin, transition, callback) {\n    /* TODO: remove this if statement when deprecation complete */\n    if (transition || this._legacyStates.origin) {\n\n        if (!this._legacyStates.origin) {\n            this._legacyStates.origin = new Transitionable(this._output.origin || [0, 0]);\n        }\n        if (!this._originGetter) this.originFrom(this._legacyStates.origin);\n\n        this._legacyStates.origin.set(origin, transition, callback);\n        return this;\n    }\n    else return this.originFrom(origin);\n};\n\n/**\n * Deprecated: Prefer alignFrom with static align array, or use a Transitionable with that align.\n * @deprecated\n * @method setAlign\n *\n * @param {Array.Number} align two element array with values between 0 and 1.\n * @param {Transitionable} transition Valid transitionable object\n * @param {Function} callback callback to call after transition completes\n * @return {Modifier} this\n */\nModifier.prototype.setAlign = function setAlign(align, transition, callback) {\n    /* TODO: remove this if statement when deprecation complete */\n    if (transition || this._legacyStates.align) {\n\n        if (!this._legacyStates.align) {\n            this._legacyStates.align = new Transitionable(this._output.align || [0, 0]);\n        }\n        if (!this._alignGetter) this.alignFrom(this._legacyStates.align);\n\n        this._legacyStates.align.set(align, transition, callback);\n        return this;\n    }\n    else return this.alignFrom(align);\n};\n\n/**\n * Deprecated: Prefer sizeFrom with static origin array, or use a Transitionable with that size.\n * @deprecated\n * @method setSize\n * @param {Array.Number} size two element array of [width, height]\n * @param {Transitionable} transition Valid transitionable object\n * @param {Function} callback callback to call after transition completes\n * @return {Modifier} this\n */\nModifier.prototype.setSize = function setSize(size, transition, callback) {\n    if (size && (transition || this._legacyStates.size)) {\n        if (!this._legacyStates.size) {\n            this._legacyStates.size = new Transitionable(this._output.size || [0, 0]);\n        }\n        if (!this._sizeGetter) this.sizeFrom(this._legacyStates.size);\n\n        this._legacyStates.size.set(size, transition, callback);\n        return this;\n    }\n    else return this.sizeFrom(size);\n};\n\n/**\n * Deprecated: Prefer proportionsFrom with static origin array, or use a Transitionable with those proportions.\n * @deprecated\n * @method setProportions\n * @param {Array.Number} proportions two element array of [percent of width, percent of height]\n * @param {Transitionable} transition Valid transitionable object\n * @param {Function} callback callback to call after transition completes\n * @return {Modifier} this\n */\nModifier.prototype.setProportions = function setProportions(proportions, transition, callback) {\n    if (proportions && (transition || this._legacyStates.proportions)) {\n        if (!this._legacyStates.proportions) {\n            this._legacyStates.proportions = new Transitionable(this._output.proportions || [0, 0]);\n        }\n        if (!this._proportionGetter) this.proportionsFrom(this._legacyStates.proportions);\n\n        this._legacyStates.proportions.set(proportions, transition, callback);\n        return this;\n    }\n    else return this.proportionsFrom(proportions);\n};\n\n/**\n * Deprecated: Prefer to stop transform in your provider object.\n * @deprecated\n * @method halt\n */\nModifier.prototype.halt = function halt() {\n    if (this._legacyStates.transform) this._legacyStates.transform.halt();\n    if (this._legacyStates.opacity) this._legacyStates.opacity.halt();\n    if (this._legacyStates.origin) this._legacyStates.origin.halt();\n    if (this._legacyStates.align) this._legacyStates.align.halt();\n    if (this._legacyStates.size) this._legacyStates.size.halt();\n    if (this._legacyStates.proportions) this._legacyStates.proportions.halt();\n    this._transformGetter = null;\n    this._opacityGetter = null;\n    this._originGetter = null;\n    this._alignGetter = null;\n    this._sizeGetter = null;\n    this._proportionGetter = null;\n};\n\n/**\n * Deprecated: Prefer to use your provided transform or output of your transform provider.\n * @deprecated\n * @method getTransform\n * @return {Object} transform provider object\n */\nModifier.prototype.getTransform = function getTransform() {\n    return this._transformGetter();\n};\n\n/**\n * Deprecated: Prefer to determine the end state of your transform from your transform provider\n * @deprecated\n * @method getFinalTransform\n * @return {Transform} transform matrix\n */\nModifier.prototype.getFinalTransform = function getFinalTransform() {\n    return this._legacyStates.transform ? this._legacyStates.transform.getFinal() : this._output.transform;\n};\n\n/**\n * Deprecated: Prefer to use your provided opacity or output of your opacity provider.\n * @deprecated\n * @method getOpacity\n * @return {Object} opacity provider object\n */\nModifier.prototype.getOpacity = function getOpacity() {\n    return this._opacityGetter();\n};\n\n/**\n * Deprecated: Prefer to use your provided origin or output of your origin provider.\n * @deprecated\n * @method getOrigin\n * @return {Object} origin provider object\n */\nModifier.prototype.getOrigin = function getOrigin() {\n    return this._originGetter();\n};\n\n/**\n * Deprecated: Prefer to use your provided align or output of your align provider.\n * @deprecated\n * @method getAlign\n * @return {Object} align provider object\n */\nModifier.prototype.getAlign = function getAlign() {\n    return this._alignGetter();\n};\n\n/**\n * Deprecated: Prefer to use your provided size or output of your size provider.\n * @deprecated\n * @method getSize\n * @return {Object} size provider object\n */\nModifier.prototype.getSize = function getSize() {\n    return this._sizeGetter ? this._sizeGetter() : this._output.size;\n};\n\n/**\n * Deprecated: Prefer to use your provided proportions or output of your proportions provider.\n * @deprecated\n * @method getProportions\n * @return {Object} proportions provider object\n */\nModifier.prototype.getProportions = function getProportions() {\n    return this._proportionGetter ? this._proportionGetter() : this._output.proportions;\n};\n\n// call providers on tick to receive render spec elements to apply\nfunction _update() {\n    if (this._transformGetter) this._output.transform = this._transformGetter();\n    if (this._opacityGetter) this._output.opacity = this._opacityGetter();\n    if (this._originGetter) this._output.origin = this._originGetter();\n    if (this._alignGetter) this._output.align = this._alignGetter();\n    if (this._sizeGetter) this._output.size = this._sizeGetter();\n    if (this._proportionGetter) this._output.proportions = this._proportionGetter();\n}\n\n/**\n * Return render spec for this Modifier, applying to the provided\n *    target component.  This is similar to render() for Surfaces.\n *\n * @private\n * @method modify\n *\n * @param {Object} target (already rendered) render spec to\n *    which to apply the transform.\n * @return {Object} render spec for this Modifier, including the\n *    provided target\n */\nModifier.prototype.modify = function modify(target) {\n    _update.call(this);\n    this._output.target = target;\n    return this._output;\n};\n\nmodule.exports = Modifier;\n},{\"../transitions/Transitionable\":88,\"../transitions/TransitionableTransform\":89,\"./Transform\":15}],10:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar EventHandler = require('./EventHandler');\n\n/**\n *  A collection of methods for setting options which can be extended\n *  onto other classes.\n *\n *\n *  **** WARNING ****\n *  You can only pass through objects that will compile into valid JSON.\n *\n *  Valid options:\n *      Strings,\n *      Arrays,\n *      Objects,\n *      Numbers,\n *      Nested Objects,\n *      Nested Arrays.\n *\n *    This excludes:\n *        Document Fragments,\n *        Functions\n * @class OptionsManager\n * @constructor\n * @param {Object} value options dictionary\n */\nfunction OptionsManager(value) {\n    this._value = value;\n    this.eventOutput = null;\n}\n\n/**\n * Create options manager from source dictionary with arguments overriden by patch dictionary.\n *\n * @static\n * @method OptionsManager.patch\n *\n * @param {Object} source source arguments\n * @param {...Object} data argument additions and overwrites\n * @return {Object} source object\n */\nOptionsManager.patch = function patchObject(source, data) {\n    var manager = new OptionsManager(source);\n    for (var i = 1; i < arguments.length; i++) manager.patch(arguments[i]);\n    return source;\n};\n\nfunction _createEventOutput() {\n    this.eventOutput = new EventHandler();\n    this.eventOutput.bindThis(this);\n    EventHandler.setOutputHandler(this, this.eventOutput);\n}\n\n/**\n * Create OptionsManager from source with arguments overriden by patches.\n *   Triggers 'change' event on this object's event handler if the state of\n *   the OptionsManager changes as a result.\n *\n * @method patch\n *\n * @param {...Object} arguments list of patch objects\n * @return {OptionsManager} this\n */\nOptionsManager.prototype.patch = function patch() {\n    var myState = this._value;\n    for (var i = 0; i < arguments.length; i++) {\n        var data = arguments[i];\n        for (var k in data) {\n            if ((k in myState) && (data[k] && data[k].constructor === Object) && (myState[k] && myState[k].constructor === Object)) {\n                if (!myState.hasOwnProperty(k)) myState[k] = Object.create(myState[k]);\n                this.key(k).patch(data[k]);\n                if (this.eventOutput) this.eventOutput.emit('change', {id: k, value: this.key(k).value()});\n            }\n            else this.set(k, data[k]);\n        }\n    }\n    return this;\n};\n\n/**\n * Alias for patch\n *\n * @method setOptions\n *\n */\nOptionsManager.prototype.setOptions = OptionsManager.prototype.patch;\n\n/**\n * Return OptionsManager based on sub-object retrieved by key\n *\n * @method key\n *\n * @param {string} identifier key\n * @return {OptionsManager} new options manager with the value\n */\nOptionsManager.prototype.key = function key(identifier) {\n    var result = new OptionsManager(this._value[identifier]);\n    if (!(result._value instanceof Object) || result._value instanceof Array) result._value = {};\n    return result;\n};\n\n/**\n * Look up value by key or get the full options hash\n * @method get\n *\n * @param {string} key key\n * @return {Object} associated object or full options hash\n */\nOptionsManager.prototype.get = function get(key) {\n    return key ? this._value[key] : this._value;\n};\n\n/**\n * Alias for get\n * @method getOptions\n */\nOptionsManager.prototype.getOptions = OptionsManager.prototype.get;\n\n/**\n * Set key to value.  Outputs 'change' event if a value is overwritten.\n *\n * @method set\n *\n * @param {string} key key string\n * @param {Object} value value object\n * @return {OptionsManager} new options manager based on the value object\n */\nOptionsManager.prototype.set = function set(key, value) {\n    var originalValue = this.get(key);\n    this._value[key] = value;\n    if (this.eventOutput && value !== originalValue) this.eventOutput.emit('change', {id: key, value: value});\n    return this;\n};\n\n/**\n * Bind a callback function to an event type handled by this object.\n *\n * @method \"on\"\n *\n * @param {string} type event type key (for example, 'change')\n * @param {function(string, Object)} handler callback\n * @return {EventHandler} this\n */\nOptionsManager.prototype.on = function on() {\n    _createEventOutput.call(this);\n    return this.on.apply(this, arguments);\n};\n\n/**\n * Unbind an event by type and handler.\n *   This undoes the work of \"on\".\n *\n * @method removeListener\n *\n * @param {string} type event type key (for example, 'change')\n * @param {function} handler function object to remove\n * @return {EventHandler} internal event handler object (for chaining)\n */\nOptionsManager.prototype.removeListener = function removeListener() {\n    _createEventOutput.call(this);\n    return this.removeListener.apply(this, arguments);\n};\n\n/**\n * Add event handler object to set of downstream handlers.\n *\n * @method pipe\n *\n * @param {EventHandler} target event handler target object\n * @return {EventHandler} passed event handler\n */\nOptionsManager.prototype.pipe = function pipe() {\n    _createEventOutput.call(this);\n    return this.pipe.apply(this, arguments);\n};\n\n/**\n * Remove handler object from set of downstream handlers.\n * Undoes work of \"pipe\"\n *\n * @method unpipe\n *\n * @param {EventHandler} target target handler object\n * @return {EventHandler} provided target\n */\nOptionsManager.prototype.unpipe = function unpipe() {\n    _createEventOutput.call(this);\n    return this.unpipe.apply(this, arguments);\n};\n\nmodule.exports = OptionsManager;\n},{\"./EventHandler\":7}],11:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Entity = require('./Entity');\nvar SpecParser = require('./SpecParser');\n\n/**\n * A wrapper for inserting a renderable component (like a Modifer or\n *   Surface) into the render tree.\n *\n * @class RenderNode\n * @constructor\n *\n * @param {Object} object Target renderable component\n */\nfunction RenderNode(object) {\n    this._object = null;\n    this._child = null;\n    this._hasMultipleChildren = false;\n    this._isRenderable = false;\n    this._isModifier = false;\n\n    this._resultCache = {};\n    this._prevResults = {};\n\n    this._childResult = null;\n\n    if (object) this.set(object);\n}\n\n/**\n * Append a renderable to the list of this node's children.\n *   This produces a new RenderNode in the tree.\n *   Note: Does not double-wrap if child is a RenderNode already.\n *\n * @method add\n * @param {Object} child renderable object\n * @return {RenderNode} new render node wrapping child\n */\nRenderNode.prototype.add = function add(child) {\n    var childNode = (child instanceof RenderNode) ? child : new RenderNode(child);\n    if (this._child instanceof Array) this._child.push(childNode);\n    else if (this._child) {\n        this._child = [this._child, childNode];\n        this._hasMultipleChildren = true;\n        this._childResult = []; // to be used later\n    }\n    else this._child = childNode;\n\n    return childNode;\n};\n\n/**\n * Return the single wrapped object.  Returns null if this node has multiple child nodes.\n *\n * @method get\n *\n * @return {Ojbect} contained renderable object\n */\nRenderNode.prototype.get = function get() {\n    return this._object || (this._hasMultipleChildren ? null : (this._child ? this._child.get() : null));\n};\n\n/**\n * Overwrite the list of children to contain the single provided object\n *\n * @method set\n * @param {Object} child renderable object\n * @return {RenderNode} this render node, or child if it is a RenderNode\n */\nRenderNode.prototype.set = function set(child) {\n    this._childResult = null;\n    this._hasMultipleChildren = false;\n    this._isRenderable = child.render ? true : false;\n    this._isModifier = child.modify ? true : false;\n    this._object = child;\n    this._child = null;\n    if (child instanceof RenderNode) return child;\n    else return this;\n};\n\n/**\n * Get render size of contained object.\n *\n * @method getSize\n * @return {Array.Number} size of this or size of single child.\n */\nRenderNode.prototype.getSize = function getSize() {\n    var result = null;\n    var target = this.get();\n    if (target && target.getSize) result = target.getSize();\n    if (!result && this._child && this._child.getSize) result = this._child.getSize();\n    return result;\n};\n\n// apply results of rendering this subtree to the document\nfunction _applyCommit(spec, context, cacheStorage) {\n    var result = SpecParser.parse(spec, context);\n    var keys = Object.keys(result);\n    for (var i = 0; i < keys.length; i++) {\n        var id = keys[i];\n        var childNode = Entity.get(id);\n        var commitParams = result[id];\n        commitParams.allocator = context.allocator;\n        var commitResult = childNode.commit(commitParams);\n        if (commitResult) _applyCommit(commitResult, context, cacheStorage);\n        else cacheStorage[id] = commitParams;\n    }\n}\n\n/**\n * Commit the content change from this node to the document.\n *\n * @private\n * @method commit\n * @param {Context} context render context\n */\nRenderNode.prototype.commit = function commit(context) {\n    // free up some divs from the last loop\n    var prevKeys = Object.keys(this._prevResults);\n    for (var i = 0; i < prevKeys.length; i++) {\n        var id = prevKeys[i];\n        if (this._resultCache[id] === undefined) {\n            var object = Entity.get(id);\n            if (object.cleanup) object.cleanup(context.allocator);\n        }\n    }\n\n    this._prevResults = this._resultCache;\n    this._resultCache = {};\n    _applyCommit(this.render(), context, this._resultCache);\n};\n\n/**\n * Generate a render spec from the contents of the wrapped component.\n *\n * @private\n * @method render\n *\n * @return {Object} render specification for the component subtree\n *    only under this node.\n */\nRenderNode.prototype.render = function render() {\n    if (this._isRenderable) return this._object.render();\n\n    var result = null;\n    if (this._hasMultipleChildren) {\n        result = this._childResult;\n        var children = this._child;\n        for (var i = 0; i < children.length; i++) {\n            result[i] = children[i].render();\n        }\n    }\n    else if (this._child) result = this._child.render();\n\n    return this._isModifier ? this._object.modify(result) : result;\n};\n\nmodule.exports = RenderNode;\n},{\"./Entity\":5,\"./SpecParser\":13}],12:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Transform = require('./Transform');\nvar Modifier = require('./Modifier');\nvar RenderNode = require('./RenderNode');\n\n/**\n * Builds and renders a scene graph based on a declarative structure definition.\n * See the Scene examples in the examples distribution (http://github.com/Famous/examples.git).\n *\n * @class Scene\n * @constructor\n * @param {Object|Array|Spec} definition in the format of a render spec.\n */\nfunction Scene(definition) {\n    this.id = null;\n    this._objects = null;\n\n    this.node = new RenderNode();\n    this._definition = null;\n\n    if (definition) this.load(definition);\n}\n\nvar _MATRIX_GENERATORS = {\n    'translate': Transform.translate,\n    'rotate': Transform.rotate,\n    'rotateX': Transform.rotateX,\n    'rotateY': Transform.rotateY,\n    'rotateZ': Transform.rotateZ,\n    'rotateAxis': Transform.rotateAxis,\n    'scale': Transform.scale,\n    'skew': Transform.skew,\n    'matrix3d': function() {\n        return arguments;\n    }\n};\n\n/**\n * Clone this scene\n *\n * @method create\n * @return {Scene} deep copy of this scene\n */\nScene.prototype.create = function create() {\n    return new Scene(this._definition);\n};\n\nfunction _resolveTransformMatrix(matrixDefinition) {\n    for (var type in _MATRIX_GENERATORS) {\n        if (type in matrixDefinition) {\n            var args = matrixDefinition[type];\n            if (!(args instanceof Array)) args = [args];\n            return _MATRIX_GENERATORS[type].apply(this, args);\n        }\n    }\n}\n\n// parse transform into tree of render nodes, doing matrix multiplication\n// when available\nfunction _parseTransform(definition) {\n    var transformDefinition = definition.transform;\n    var opacity = definition.opacity;\n    var origin = definition.origin;\n    var align = definition.align;\n    var size = definition.size;\n    var transform = Transform.identity;\n    if (transformDefinition instanceof Array) {\n        if (transformDefinition.length === 16 && typeof transformDefinition[0] === 'number') {\n            transform = transformDefinition;\n        }\n        else {\n            for (var i = 0; i < transformDefinition.length; i++) {\n                transform = Transform.multiply(transform, _resolveTransformMatrix(transformDefinition[i]));\n            }\n        }\n    }\n    else if (transformDefinition instanceof Function) {\n        transform = transformDefinition;\n    }\n    else if (transformDefinition instanceof Object) {\n        transform = _resolveTransformMatrix(transformDefinition);\n    }\n\n    var result = new Modifier({\n        transform: transform,\n        opacity: opacity,\n        origin: origin,\n        align: align,\n        size: size\n    });\n    return result;\n}\n\nfunction _parseArray(definition) {\n    var result = new RenderNode();\n    for (var i = 0; i < definition.length; i++) {\n        var obj = _parse.call(this, definition[i]);\n        if (obj) result.add(obj);\n    }\n    return result;\n}\n\n// parse object directly into tree of RenderNodes\nfunction _parse(definition) {\n    var result;\n    var id;\n    if (definition instanceof Array) {\n        result = _parseArray.call(this, definition);\n    }\n    else {\n        id = this._objects.length;\n        if (definition.render && (definition.render instanceof Function)) {\n            result = definition;\n        }\n        else if (definition.target) {\n            var targetObj = _parse.call(this, definition.target);\n            var obj = _parseTransform.call(this, definition);\n\n            result = new RenderNode(obj);\n            result.add(targetObj);\n            if (definition.id) this.id[definition.id] = obj;\n        }\n        else if (definition.id) {\n            result = new RenderNode();\n            this.id[definition.id] = result;\n        }\n    }\n    this._objects[id] = result;\n    return result;\n}\n\n/**\n * Builds and renders a scene graph based on a canonical declarative scene definition.\n * See examples/Scene/example.js.\n *\n * @method load\n * @param {Object} definition definition in the format of a render spec.\n */\nScene.prototype.load = function load(definition) {\n    this._definition = definition;\n    this.id = {};\n    this._objects = [];\n    this.node.set(_parse.call(this, definition));\n};\n\n/**\n * Add renderables to this component's render tree\n *\n * @method add\n *\n * @param {Object} obj renderable object\n * @return {RenderNode} Render wrapping provided object, if not already a RenderNode\n */\nScene.prototype.add = function add() {\n    return this.node.add.apply(this.node, arguments);\n};\n\n/**\n * Generate a render spec from the contents of this component.\n *\n * @private\n * @method render\n * @return {number} Render spec for this component\n */\nScene.prototype.render = function render() {\n    return this.node.render.apply(this.node, arguments);\n};\n\nmodule.exports = Scene;\n},{\"./Modifier\":9,\"./RenderNode\":11,\"./Transform\":15}],13:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Transform = require('./Transform');\n\n/**\n *\n * This object translates the rendering instructions (\"render specs\")\n *   that renderable components generate into document update\n *   instructions (\"update specs\").  Private.\n *\n * @private\n * @class SpecParser\n * @constructor\n */\nfunction SpecParser() {\n    this.result = {};\n}\nSpecParser._instance = new SpecParser();\n\n/**\n * Convert a render spec coming from the context's render chain to an\n *    update spec for the update chain. This is the only major entry point\n *    for a consumer of this class.\n *\n * @method parse\n * @static\n * @private\n *\n * @param {renderSpec} spec input render spec\n * @param {Object} context context to do the parse in\n * @return {Object} the resulting update spec (if no callback\n *   specified, else none)\n */\nSpecParser.parse = function parse(spec, context) {\n    return SpecParser._instance.parse(spec, context);\n};\n\n/**\n * Convert a renderSpec coming from the context's render chain to an update\n *    spec for the update chain. This is the only major entrypoint for a\n *    consumer of this class.\n *\n * @method parse\n *\n * @private\n * @param {renderSpec} spec input render spec\n * @param {Context} context\n * @return {updateSpec} the resulting update spec\n */\nSpecParser.prototype.parse = function parse(spec, context) {\n    this.reset();\n    this._parseSpec(spec, context, Transform.identity);\n    return this.result;\n};\n\n/**\n * Prepare SpecParser for re-use (or first use) by setting internal state\n *  to blank.\n *\n * @private\n * @method reset\n */\nSpecParser.prototype.reset = function reset() {\n    this.result = {};\n};\n\n// Multiply matrix M by vector v\nfunction _vecInContext(v, m) {\n    return [\n        v[0] * m[0] + v[1] * m[4] + v[2] * m[8],\n        v[0] * m[1] + v[1] * m[5] + v[2] * m[9],\n        v[0] * m[2] + v[1] * m[6] + v[2] * m[10]\n    ];\n}\n\nvar _zeroZero = [0, 0];\n\n// From the provided renderSpec tree, recursively compose opacities,\n//    origins, transforms, and sizes corresponding to each surface id from\n//    the provided renderSpec tree structure. On completion, those\n//    properties of 'this' object should be ready to use to build an\n//    updateSpec.\nSpecParser.prototype._parseSpec = function _parseSpec(spec, parentContext, sizeContext) {\n    var id;\n    var target;\n    var transform;\n    var opacity;\n    var origin;\n    var align;\n    var size;\n\n    if (typeof spec === 'number') {\n        id = spec;\n        transform = parentContext.transform;\n        align = parentContext.align || _zeroZero;\n        if (parentContext.size && align && (align[0] || align[1])) {\n            var alignAdjust = [align[0] * parentContext.size[0], align[1] * parentContext.size[1], 0];\n            transform = Transform.thenMove(transform, _vecInContext(alignAdjust, sizeContext));\n        }\n        this.result[id] = {\n            transform: transform,\n            opacity: parentContext.opacity,\n            origin: parentContext.origin || _zeroZero,\n            align: parentContext.align || _zeroZero,\n            size: parentContext.size\n        };\n    }\n    else if (!spec) { // placed here so 0 will be cached earlier\n        return;\n    }\n    else if (spec instanceof Array) {\n        for (var i = 0; i < spec.length; i++) {\n            this._parseSpec(spec[i], parentContext, sizeContext);\n        }\n    }\n    else {\n        target = spec.target;\n        transform = parentContext.transform;\n        opacity = parentContext.opacity;\n        origin = parentContext.origin;\n        align = parentContext.align;\n        size = parentContext.size;\n        var nextSizeContext = sizeContext;\n\n        if (spec.opacity !== undefined) opacity = parentContext.opacity * spec.opacity;\n        if (spec.transform) transform = Transform.multiply(parentContext.transform, spec.transform);\n        if (spec.origin) {\n            origin = spec.origin;\n            nextSizeContext = parentContext.transform;\n        }\n        if (spec.align) align = spec.align;\n\n        if (spec.size || spec.proportions) {\n            var parentSize = size;\n            size = [size[0], size[1]];\n\n            if (spec.size) {\n                if (spec.size[0] !== undefined) size[0] = spec.size[0];\n                if (spec.size[1] !== undefined) size[1] = spec.size[1];\n            }\n\n            if (spec.proportions) {\n                if (spec.proportions[0] !== undefined) size[0] = size[0] * spec.proportions[0];\n                if (spec.proportions[1] !== undefined) size[1] = size[1] * spec.proportions[1];\n            }\n\n            if (parentSize) {\n                if (align && (align[0] || align[1])) transform = Transform.thenMove(transform, _vecInContext([align[0] * parentSize[0], align[1] * parentSize[1], 0], sizeContext));\n                if (origin && (origin[0] || origin[1])) transform = Transform.moveThen([-origin[0] * size[0], -origin[1] * size[1], 0], transform);\n            }\n\n            nextSizeContext = parentContext.transform;\n            origin = null;\n            align = null;\n        }\n\n        this._parseSpec(target, {\n            transform: transform,\n            opacity: opacity,\n            origin: origin,\n            align: align,\n            size: size\n        }, nextSizeContext);\n    }\n};\n\nmodule.exports = SpecParser;\n},{\"./Transform\":15}],14:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar ElementOutput = require('./ElementOutput');\n\n/**\n * A base class for viewable content and event\n *   targets inside a Famo.us application, containing a renderable document\n *   fragment. Like an HTML div, it can accept internal markup,\n *   properties, classes, and handle events.\n *\n * @class Surface\n * @constructor\n *\n * @param {Object} [options] default option overrides\n * @param {Array.Number} [options.size] [width, height] in pixels\n * @param {Array.string} [options.classes] CSS classes to set on target div\n * @param {Array} [options.properties] string dictionary of HTML attributes to set on target div\n * @param {string} [options.content] inner (HTML) content of surface\n */\nfunction Surface(options) {\n    ElementOutput.call(this);\n\n    this.options = {};\n\n    this.properties = {};\n    this.attributes = {};\n    this.content = '';\n    this.classList = [];\n    this.size = null;\n\n    this._classesDirty = true;\n    this._stylesDirty = true;\n    this._attributesDirty = true;\n    this._sizeDirty = true;\n    this._contentDirty = true;\n    this._trueSizeCheck = true;\n\n    this._dirtyClasses = [];\n\n    if (options) this.setOptions(options);\n\n    this._currentTarget = null;\n}\nSurface.prototype = Object.create(ElementOutput.prototype);\nSurface.prototype.constructor = Surface;\nSurface.prototype.elementType = 'div';\nSurface.prototype.elementClass = 'famous-surface';\n\n/**\n * Set HTML attributes on this Surface. Note that this will cause\n *    dirtying and thus re-rendering, even if values do not change.\n *\n * @method setAttributes\n* @param {Object} attributes property dictionary of \"key\" => \"value\"\n */\nSurface.prototype.setAttributes = function setAttributes(attributes) {\n    for (var n in attributes) {\n        if (n === 'style') throw new Error('Cannot set styles via \"setAttributes\" as it will break Famo.us.  Use \"setProperties\" instead.');\n        this.attributes[n] = attributes[n];\n    }\n    this._attributesDirty = true;\n};\n\n/**\n * Get HTML attributes on this Surface.\n *\n * @method getAttributes\n *\n * @return {Object} Dictionary of this Surface's attributes.\n */\nSurface.prototype.getAttributes = function getAttributes() {\n    return this.attributes;\n};\n\n/**\n * Set CSS-style properties on this Surface. Note that this will cause\n *    dirtying and thus re-rendering, even if values do not change.\n *\n * @method setProperties\n * @chainable\n * @param {Object} properties property dictionary of \"key\" => \"value\"\n */\nSurface.prototype.setProperties = function setProperties(properties) {\n    for (var n in properties) {\n        this.properties[n] = properties[n];\n    }\n    this._stylesDirty = true;\n    return this;\n};\n\n/**\n * Get CSS-style properties on this Surface.\n *\n * @method getProperties\n *\n * @return {Object} Dictionary of this Surface's properties.\n */\nSurface.prototype.getProperties = function getProperties() {\n    return this.properties;\n};\n\n/**\n * Add CSS-style class to the list of classes on this Surface. Note\n *   this will map directly to the HTML property of the actual\n *   corresponding rendered <div>.\n *\n * @method addClass\n * @chainable\n * @param {string} className name of class to add\n */\nSurface.prototype.addClass = function addClass(className) {\n    if (this.classList.indexOf(className) < 0) {\n        this.classList.push(className);\n        this._classesDirty = true;\n    }\n    return this;\n};\n\n/**\n * Remove CSS-style class from the list of classes on this Surface.\n *   Note this will map directly to the HTML property of the actual\n *   corresponding rendered <div>.\n *\n * @method removeClass\n * @chainable\n * @param {string} className name of class to remove\n */\nSurface.prototype.removeClass = function removeClass(className) {\n    var i = this.classList.indexOf(className);\n    if (i >= 0) {\n        this._dirtyClasses.push(this.classList.splice(i, 1)[0]);\n        this._classesDirty = true;\n    }\n    return this;\n};\n\n/**\n * Toggle CSS-style class from the list of classes on this Surface.\n *   Note this will map directly to the HTML property of the actual\n *   corresponding rendered <div>.\n *\n * @method toggleClass\n * @param {string} className name of class to toggle\n */\nSurface.prototype.toggleClass = function toggleClass(className) {\n    var i = this.classList.indexOf(className);\n    if (i >= 0) {\n        this.removeClass(className);\n    } else {\n        this.addClass(className);\n    }\n    return this;\n};\n\n/**\n * Reset class list to provided dictionary.\n * @method setClasses\n * @chainable\n * @param {Array.string} classList\n */\nSurface.prototype.setClasses = function setClasses(classList) {\n    var i = 0;\n    var removal = [];\n    for (i = 0; i < this.classList.length; i++) {\n        if (classList.indexOf(this.classList[i]) < 0) removal.push(this.classList[i]);\n    }\n    for (i = 0; i < removal.length; i++) this.removeClass(removal[i]);\n    // duplicates are already checked by addClass()\n    for (i = 0; i < classList.length; i++) this.addClass(classList[i]);\n    return this;\n};\n\n/**\n * Get array of CSS-style classes attached to this div.\n *\n * @method getClasslist\n * @return {Array.string} array of class names\n */\nSurface.prototype.getClassList = function getClassList() {\n    return this.classList;\n};\n\n/**\n * Set or overwrite inner (HTML) content of this surface. Note that this\n *    causes a re-rendering if the content has changed.\n *\n * @method setContent\n * @chainable\n * @param {string|Document Fragment} content HTML content\n */\nSurface.prototype.setContent = function setContent(content) {\n    if (this.content !== content) {\n        this.content = content;\n        this._contentDirty = true;\n    }\n    return this;\n};\n\n/**\n * Return inner (HTML) content of this surface.\n *\n * @method getContent\n *\n * @return {string} inner (HTML) content\n */\nSurface.prototype.getContent = function getContent() {\n    return this.content;\n};\n\n/**\n * Set options for this surface\n *\n * @method setOptions\n * @chainable\n * @param {Object} [options] overrides for default options.  See constructor.\n */\nSurface.prototype.setOptions = function setOptions(options) {\n    if (options.size) this.setSize(options.size);\n    if (options.classes) this.setClasses(options.classes);\n    if (options.properties) this.setProperties(options.properties);\n    if (options.attributes) this.setAttributes(options.attributes);\n    if (options.content) this.setContent(options.content);\n    return this;\n};\n\n//  Apply to document all changes from removeClass() since last setup().\nfunction _cleanupClasses(target) {\n    for (var i = 0; i < this._dirtyClasses.length; i++) target.classList.remove(this._dirtyClasses[i]);\n    this._dirtyClasses = [];\n}\n\n// Apply values of all Famous-managed styles to the document element.\n//  These will be deployed to the document on call to #setup().\nfunction _applyStyles(target) {\n    for (var n in this.properties) {\n        target.style[n] = this.properties[n];\n    }\n}\n\n// Clear all Famous-managed styles from the document element.\n// These will be deployed to the document on call to #setup().\nfunction _cleanupStyles(target) {\n    for (var n in this.properties) {\n        target.style[n] = '';\n    }\n}\n\n// Apply values of all Famous-managed attributes to the document element.\n//  These will be deployed to the document on call to #setup().\nfunction _applyAttributes(target) {\n    for (var n in this.attributes) {\n        target.setAttribute(n, this.attributes[n]);\n    }\n}\n\n// Clear all Famous-managed attributes from the document element.\n// These will be deployed to the document on call to #setup().\nfunction _cleanupAttributes(target) {\n    for (var n in this.attributes) {\n        target.removeAttribute(n);\n    }\n}\n\nfunction _xyNotEquals(a, b) {\n    return (a && b) ? (a[0] !== b[0] || a[1] !== b[1]) : a !== b;\n}\n\n/**\n * One-time setup for an element to be ready for commits to document.\n *\n * @private\n * @method setup\n *\n * @param {ElementAllocator} allocator document element pool for this context\n */\nSurface.prototype.setup = function setup(allocator) {\n    var target = allocator.allocate(this.elementType);\n    if (this.elementClass) {\n        if (this.elementClass instanceof Array) {\n            for (var i = 0; i < this.elementClass.length; i++) {\n                target.classList.add(this.elementClass[i]);\n            }\n        }\n        else {\n            target.classList.add(this.elementClass);\n        }\n    }\n    target.style.display = '';\n    this.attach(target);\n    this._opacity = null;\n    this._currentTarget = target;\n    this._stylesDirty = true;\n    this._classesDirty = true;\n    this._attributesDirty = true;\n    this._sizeDirty = true;\n    this._contentDirty = true;\n    this._originDirty = true;\n    this._transformDirty = true;\n};\n\n/**\n * Apply changes from this component to the corresponding document element.\n * This includes changes to classes, styles, size, content, opacity, origin,\n * and matrix transforms.\n *\n * @private\n * @method commit\n * @param {Context} context commit context\n */\nSurface.prototype.commit = function commit(context) {\n    if (!this._currentTarget) this.setup(context.allocator);\n    var target = this._currentTarget;\n    var size = context.size;\n\n    if (this._classesDirty) {\n        _cleanupClasses.call(this, target);\n        var classList = this.getClassList();\n        for (var i = 0; i < classList.length; i++) target.classList.add(classList[i]);\n        this._classesDirty = false;\n        this._trueSizeCheck = true;\n    }\n\n    if (this._stylesDirty) {\n        _applyStyles.call(this, target);\n        this._stylesDirty = false;\n        this._trueSizeCheck = true;\n    }\n\n    if (this._attributesDirty) {\n        _applyAttributes.call(this, target);\n        this._attributesDirty = false;\n        this._trueSizeCheck = true;\n    }\n\n    if (this.size) {\n        var origSize = context.size;\n        size = [this.size[0], this.size[1]];\n        if (size[0] === undefined) size[0] = origSize[0];\n        if (size[1] === undefined) size[1] = origSize[1];\n        if (size[0] === true || size[1] === true) {\n            if (size[0] === true && (this._trueSizeCheck || this._size[0] === 0)) {\n                var width = target.offsetWidth;\n                if (this._size && this._size[0] !== width) {\n                    this._size[0] = width;\n                    this._sizeDirty = true;\n                }\n                size[0] = width;\n            } else {\n                if (this._size) size[0] = this._size[0];\n            }\n            if (size[1] === true && (this._trueSizeCheck || this._size[1] === 0)) {\n                var height = target.offsetHeight;\n                if (this._size && this._size[1] !== height) {\n                    this._size[1] = height;\n                    this._sizeDirty = true;\n                }\n                size[1] = height;\n            } else {\n                if (this._size) size[1] = this._size[1];\n            }\n            this._trueSizeCheck = false;\n        }\n    }\n\n    if (_xyNotEquals(this._size, size)) {\n        if (!this._size) this._size = [0, 0];\n        this._size[0] = size[0];\n        this._size[1] = size[1];\n\n        this._sizeDirty = true;\n    }\n\n    if (this._sizeDirty) {\n        if (this._size) {\n            target.style.width = (this.size && this.size[0] === true) ? '' : this._size[0] + 'px';\n            target.style.height = (this.size && this.size[1] === true) ?  '' : this._size[1] + 'px';\n        }\n\n        this._eventOutput.emit('resize');\n    }\n\n    if (this._contentDirty) {\n        this.deploy(target);\n        this._eventOutput.emit('deploy');\n        this._contentDirty = false;\n        this._trueSizeCheck = true;\n    }\n\n    ElementOutput.prototype.commit.call(this, context);\n};\n\n/**\n *  Remove all Famous-relevant attributes from a document element.\n *    This is called by SurfaceManager's detach().\n *    This is in some sense the reverse of .deploy().\n *\n * @private\n * @method cleanup\n * @param {ElementAllocator} allocator\n */\nSurface.prototype.cleanup = function cleanup(allocator) {\n    var i = 0;\n    var target = this._currentTarget;\n    this._eventOutput.emit('recall');\n    this.recall(target);\n    target.style.display = 'none';\n    target.style.opacity = '';\n    target.style.width = '';\n    target.style.height = '';\n    _cleanupStyles.call(this, target);\n    _cleanupAttributes.call(this, target);\n    var classList = this.getClassList();\n    _cleanupClasses.call(this, target);\n    for (i = 0; i < classList.length; i++) target.classList.remove(classList[i]);\n    if (this.elementClass) {\n        if (this.elementClass instanceof Array) {\n            for (i = 0; i < this.elementClass.length; i++) {\n                target.classList.remove(this.elementClass[i]);\n            }\n        }\n        else {\n            target.classList.remove(this.elementClass);\n        }\n    }\n    this.detach(target);\n    this._currentTarget = null;\n    allocator.deallocate(target);\n};\n\n/**\n * Place the document element that this component manages into the document.\n *\n * @private\n * @method deploy\n * @param {Node} target document parent of this container\n */\nSurface.prototype.deploy = function deploy(target) {\n    var content = this.getContent();\n    if (content instanceof Node) {\n        while (target.hasChildNodes()) target.removeChild(target.firstChild);\n        target.appendChild(content);\n    }\n    else target.innerHTML = content;\n};\n\n/**\n * Remove any contained document content associated with this surface\n *   from the actual document.\n *\n * @private\n * @method recall\n */\nSurface.prototype.recall = function recall(target) {\n    var df = document.createDocumentFragment();\n    while (target.hasChildNodes()) df.appendChild(target.firstChild);\n    this.setContent(df);\n};\n\n/**\n *  Get the x and y dimensions of the surface.\n *\n * @method getSize\n * @return {Array.Number} [x,y] size of surface\n */\nSurface.prototype.getSize = function getSize() {\n    return this._size ? this._size : this.size;\n};\n\n/**\n * Set x and y dimensions of the surface.\n *\n * @method setSize\n * @chainable\n * @param {Array.Number} size as [width, height]\n */\nSurface.prototype.setSize = function setSize(size) {\n    this.size = size ? [size[0], size[1]] : null;\n    this._sizeDirty = true;\n    return this;\n};\n\nmodule.exports = Surface;\n},{\"./ElementOutput\":3}],15:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\n\n\n\n/**\n *  A high-performance static matrix math library used to calculate\n *    affine transforms on surfaces and other renderables.\n *    Famo.us uses 4x4 matrices corresponding directly to\n *    WebKit matrices (column-major order).\n *\n *    The internal \"type\" of a Matrix is a 16-long float array in\n *    row-major order, with:\n *    elements [0],[1],[2],[4],[5],[6],[8],[9],[10] forming the 3x3\n *          transformation matrix;\n *    elements [12], [13], [14] corresponding to the t_x, t_y, t_z\n *           translation;\n *    elements [3], [7], [11] set to 0;\n *    element [15] set to 1.\n *    All methods are static.\n *\n * @static\n *\n * @class Transform\n */\nvar Transform = {};\n\n// WARNING: these matrices correspond to WebKit matrices, which are\n//    transposed from their math counterparts\nTransform.precision = 1e-6;\nTransform.identity = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n/**\n * Multiply two or more Transform matrix types to return a Transform matrix.\n *\n * @method multiply4x4\n * @static\n * @param {Transform} a left Transform\n * @param {Transform} b right Transform\n * @return {Transform}\n */\nTransform.multiply4x4 = function multiply4x4(a, b) {\n    return [\n        a[0] * b[0] + a[4] * b[1] + a[8] * b[2] + a[12] * b[3],\n        a[1] * b[0] + a[5] * b[1] + a[9] * b[2] + a[13] * b[3],\n        a[2] * b[0] + a[6] * b[1] + a[10] * b[2] + a[14] * b[3],\n        a[3] * b[0] + a[7] * b[1] + a[11] * b[2] + a[15] * b[3],\n        a[0] * b[4] + a[4] * b[5] + a[8] * b[6] + a[12] * b[7],\n        a[1] * b[4] + a[5] * b[5] + a[9] * b[6] + a[13] * b[7],\n        a[2] * b[4] + a[6] * b[5] + a[10] * b[6] + a[14] * b[7],\n        a[3] * b[4] + a[7] * b[5] + a[11] * b[6] + a[15] * b[7],\n        a[0] * b[8] + a[4] * b[9] + a[8] * b[10] + a[12] * b[11],\n        a[1] * b[8] + a[5] * b[9] + a[9] * b[10] + a[13] * b[11],\n        a[2] * b[8] + a[6] * b[9] + a[10] * b[10] + a[14] * b[11],\n        a[3] * b[8] + a[7] * b[9] + a[11] * b[10] + a[15] * b[11],\n        a[0] * b[12] + a[4] * b[13] + a[8] * b[14] + a[12] * b[15],\n        a[1] * b[12] + a[5] * b[13] + a[9] * b[14] + a[13] * b[15],\n        a[2] * b[12] + a[6] * b[13] + a[10] * b[14] + a[14] * b[15],\n        a[3] * b[12] + a[7] * b[13] + a[11] * b[14] + a[15] * b[15]\n    ];\n};\n\n/**\n * Fast-multiply two or more Transform matrix types to return a\n *    Matrix, assuming bottom row on each is [0 0 0 1].\n *\n * @method multiply\n * @static\n * @param {Transform} a left Transform\n * @param {Transform} b right Transform\n * @return {Transform}\n */\nTransform.multiply = function multiply(a, b) {\n    return [\n        a[0] * b[0] + a[4] * b[1] + a[8] * b[2],\n        a[1] * b[0] + a[5] * b[1] + a[9] * b[2],\n        a[2] * b[0] + a[6] * b[1] + a[10] * b[2],\n        0,\n        a[0] * b[4] + a[4] * b[5] + a[8] * b[6],\n        a[1] * b[4] + a[5] * b[5] + a[9] * b[6],\n        a[2] * b[4] + a[6] * b[5] + a[10] * b[6],\n        0,\n        a[0] * b[8] + a[4] * b[9] + a[8] * b[10],\n        a[1] * b[8] + a[5] * b[9] + a[9] * b[10],\n        a[2] * b[8] + a[6] * b[9] + a[10] * b[10],\n        0,\n        a[0] * b[12] + a[4] * b[13] + a[8] * b[14] + a[12],\n        a[1] * b[12] + a[5] * b[13] + a[9] * b[14] + a[13],\n        a[2] * b[12] + a[6] * b[13] + a[10] * b[14] + a[14],\n        1\n    ];\n};\n\n/**\n * Return a Transform translated by additional amounts in each\n *    dimension. This is equivalent to the result of\n *\n *    Transform.multiply(Matrix.translate(t[0], t[1], t[2]), m).\n *\n * @method thenMove\n * @static\n * @param {Transform} m a Transform\n * @param {Array.Number} t floats delta vector of length 2 or 3\n * @return {Transform}\n */\nTransform.thenMove = function thenMove(m, t) {\n    if (!t[2]) t[2] = 0;\n    return [m[0], m[1], m[2], 0, m[4], m[5], m[6], 0, m[8], m[9], m[10], 0, m[12] + t[0], m[13] + t[1], m[14] + t[2], 1];\n};\n\n/**\n * Return a Transform atrix which represents the result of a transform matrix\n *    applied after a move. This is faster than the equivalent multiply.\n *    This is equivalent to the result of:\n *\n *    Transform.multiply(m, Transform.translate(t[0], t[1], t[2])).\n *\n * @method moveThen\n * @static\n * @param {Array.Number} v vector representing initial movement\n * @param {Transform} m matrix to apply afterwards\n * @return {Transform} the resulting matrix\n */\nTransform.moveThen = function moveThen(v, m) {\n    if (!v[2]) v[2] = 0;\n    var t0 = v[0] * m[0] + v[1] * m[4] + v[2] * m[8];\n    var t1 = v[0] * m[1] + v[1] * m[5] + v[2] * m[9];\n    var t2 = v[0] * m[2] + v[1] * m[6] + v[2] * m[10];\n    return Transform.thenMove(m, [t0, t1, t2]);\n};\n\n/**\n * Return a Transform which represents a translation by specified\n *    amounts in each dimension.\n *\n * @method translate\n * @static\n * @param {Number} x x translation\n * @param {Number} y y translation\n * @param {Number} z z translation\n * @return {Transform}\n */\nTransform.translate = function translate(x, y, z) {\n    if (z === undefined) z = 0;\n    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, x, y, z, 1];\n};\n\n/**\n * Return a Transform scaled by a vector in each\n *    dimension. This is a more performant equivalent to the result of\n *\n *    Transform.multiply(Transform.scale(s[0], s[1], s[2]), m).\n *\n * @method thenScale\n * @static\n * @param {Transform} m a matrix\n * @param {Array.Number} s delta vector (array of floats &&\n *    array.length == 3)\n * @return {Transform}\n */\nTransform.thenScale = function thenScale(m, s) {\n    return [\n        s[0] * m[0], s[1] * m[1], s[2] * m[2], 0,\n        s[0] * m[4], s[1] * m[5], s[2] * m[6], 0,\n        s[0] * m[8], s[1] * m[9], s[2] * m[10], 0,\n        s[0] * m[12], s[1] * m[13], s[2] * m[14], 1\n    ];\n};\n\n/**\n * Return a Transform which represents a scale by specified amounts\n *    in each dimension.\n *\n * @method scale\n * @static\n * @param {Number} x x scale factor\n * @param {Number} y y scale factor\n * @param {Number} z z scale factor\n * @return {Transform}\n */\nTransform.scale = function scale(x, y, z) {\n    if (z === undefined) z = 1;\n    if (y === undefined) y = x;\n    return [x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1];\n};\n\n/**\n * Return a Transform which represents a clockwise\n *    rotation around the x axis.\n *\n * @method rotateX\n * @static\n * @param {Number} theta radians\n * @return {Transform}\n */\nTransform.rotateX = function rotateX(theta) {\n    var cosTheta = Math.cos(theta);\n    var sinTheta = Math.sin(theta);\n    return [1, 0, 0, 0, 0, cosTheta, sinTheta, 0, 0, -sinTheta, cosTheta, 0, 0, 0, 0, 1];\n};\n\n/**\n * Return a Transform which represents a clockwise\n *    rotation around the y axis.\n *\n * @method rotateY\n * @static\n * @param {Number} theta radians\n * @return {Transform}\n */\nTransform.rotateY = function rotateY(theta) {\n    var cosTheta = Math.cos(theta);\n    var sinTheta = Math.sin(theta);\n    return [cosTheta, 0, -sinTheta, 0, 0, 1, 0, 0, sinTheta, 0, cosTheta, 0, 0, 0, 0, 1];\n};\n\n/**\n * Return a Transform which represents a clockwise\n *    rotation around the z axis.\n *\n * @method rotateZ\n * @static\n * @param {Number} theta radians\n * @return {Transform}\n */\nTransform.rotateZ = function rotateZ(theta) {\n    var cosTheta = Math.cos(theta);\n    var sinTheta = Math.sin(theta);\n    return [cosTheta, sinTheta, 0, 0, -sinTheta, cosTheta, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n};\n\n/**\n * Return a Transform which represents composed clockwise\n *    rotations along each of the axes. Equivalent to the result of\n *    Matrix.multiply(rotateX(phi), rotateY(theta), rotateZ(psi)).\n *\n * @method rotate\n * @static\n * @param {Number} phi radians to rotate about the positive x axis\n * @param {Number} theta radians to rotate about the positive y axis\n * @param {Number} psi radians to rotate about the positive z axis\n * @return {Transform}\n */\nTransform.rotate = function rotate(phi, theta, psi) {\n    var cosPhi = Math.cos(phi);\n    var sinPhi = Math.sin(phi);\n    var cosTheta = Math.cos(theta);\n    var sinTheta = Math.sin(theta);\n    var cosPsi = Math.cos(psi);\n    var sinPsi = Math.sin(psi);\n    var result = [\n        cosTheta * cosPsi,\n        cosPhi * sinPsi + sinPhi * sinTheta * cosPsi,\n        sinPhi * sinPsi - cosPhi * sinTheta * cosPsi,\n        0,\n        -cosTheta * sinPsi,\n        cosPhi * cosPsi - sinPhi * sinTheta * sinPsi,\n        sinPhi * cosPsi + cosPhi * sinTheta * sinPsi,\n        0,\n        sinTheta,\n        -sinPhi * cosTheta,\n        cosPhi * cosTheta,\n        0,\n        0, 0, 0, 1\n    ];\n    return result;\n};\n\n/**\n * Return a Transform which represents an axis-angle rotation\n *\n * @method rotateAxis\n * @static\n * @param {Array.Number} v unit vector representing the axis to rotate about\n * @param {Number} theta radians to rotate clockwise about the axis\n * @return {Transform}\n */\nTransform.rotateAxis = function rotateAxis(v, theta) {\n    var sinTheta = Math.sin(theta);\n    var cosTheta = Math.cos(theta);\n    var verTheta = 1 - cosTheta; // versine of theta\n\n    var xxV = v[0] * v[0] * verTheta;\n    var xyV = v[0] * v[1] * verTheta;\n    var xzV = v[0] * v[2] * verTheta;\n    var yyV = v[1] * v[1] * verTheta;\n    var yzV = v[1] * v[2] * verTheta;\n    var zzV = v[2] * v[2] * verTheta;\n    var xs = v[0] * sinTheta;\n    var ys = v[1] * sinTheta;\n    var zs = v[2] * sinTheta;\n\n    var result = [\n        xxV + cosTheta, xyV + zs, xzV - ys, 0,\n        xyV - zs, yyV + cosTheta, yzV + xs, 0,\n        xzV + ys, yzV - xs, zzV + cosTheta, 0,\n        0, 0, 0, 1\n    ];\n    return result;\n};\n\n/**\n * Return a Transform which represents a transform matrix applied about\n * a separate origin point.\n *\n * @method aboutOrigin\n * @static\n * @param {Array.Number} v origin point to apply matrix\n * @param {Transform} m matrix to apply\n * @return {Transform}\n */\nTransform.aboutOrigin = function aboutOrigin(v, m) {\n    var t0 = v[0] - (v[0] * m[0] + v[1] * m[4] + v[2] * m[8]);\n    var t1 = v[1] - (v[0] * m[1] + v[1] * m[5] + v[2] * m[9]);\n    var t2 = v[2] - (v[0] * m[2] + v[1] * m[6] + v[2] * m[10]);\n    return Transform.thenMove(m, [t0, t1, t2]);\n};\n\n/**\n * Return a Transform representation of a skew transformation\n *\n * @method skew\n * @static\n * @param {Number} phi scale factor skew in the x axis\n * @param {Number} theta scale factor skew in the y axis\n * @param {Number} psi scale factor skew in the z axis\n * @return {Transform}\n */\nTransform.skew = function skew(phi, theta, psi) {\n    return [1, Math.tan(theta), 0, 0, Math.tan(psi), 1, 0, 0, 0, Math.tan(phi), 1, 0, 0, 0, 0, 1];\n};\n\n/**\n * Return a Transform representation of a skew in the x-direction\n *\n * @method skewX\n * @static\n * @param {Number} angle the angle between the top and left sides\n * @return {Transform}\n */\nTransform.skewX = function skewX(angle) {\n    return [1, 0, 0, 0, Math.tan(angle), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n};\n\n/**\n * Return a Transform representation of a skew in the y-direction\n *\n * @method skewY\n * @static\n * @param {Number} angle the angle between the top and right sides\n * @return {Transform}\n */\nTransform.skewY = function skewY(angle) {\n    return [1, Math.tan(angle), 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n};\n\n/**\n * Returns a perspective Transform matrix\n *\n * @method perspective\n * @static\n * @param {Number} focusZ z position of focal point\n * @return {Transform}\n */\nTransform.perspective = function perspective(focusZ) {\n    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, -1 / focusZ, 0, 0, 0, 1];\n};\n\n/**\n * Return translation vector component of given Transform\n *\n * @method getTranslate\n * @static\n * @param {Transform} m Transform\n * @return {Array.Number} the translation vector [t_x, t_y, t_z]\n */\nTransform.getTranslate = function getTranslate(m) {\n    return [m[12], m[13], m[14]];\n};\n\n/**\n * Return inverse affine transform for given Transform.\n *   Note: This assumes m[3] = m[7] = m[11] = 0, and m[15] = 1.\n *   Will provide incorrect results if not invertible or preconditions not met.\n *\n * @method inverse\n * @static\n * @param {Transform} m Transform\n * @return {Transform}\n */\nTransform.inverse = function inverse(m) {\n    // only need to consider 3x3 section for affine\n    var c0 = m[5] * m[10] - m[6] * m[9];\n    var c1 = m[4] * m[10] - m[6] * m[8];\n    var c2 = m[4] * m[9] - m[5] * m[8];\n    var c4 = m[1] * m[10] - m[2] * m[9];\n    var c5 = m[0] * m[10] - m[2] * m[8];\n    var c6 = m[0] * m[9] - m[1] * m[8];\n    var c8 = m[1] * m[6] - m[2] * m[5];\n    var c9 = m[0] * m[6] - m[2] * m[4];\n    var c10 = m[0] * m[5] - m[1] * m[4];\n    var detM = m[0] * c0 - m[1] * c1 + m[2] * c2;\n    var invD = 1 / detM;\n    var result = [\n        invD * c0, -invD * c4, invD * c8, 0,\n        -invD * c1, invD * c5, -invD * c9, 0,\n        invD * c2, -invD * c6, invD * c10, 0,\n        0, 0, 0, 1\n    ];\n    result[12] = -m[12] * result[0] - m[13] * result[4] - m[14] * result[8];\n    result[13] = -m[12] * result[1] - m[13] * result[5] - m[14] * result[9];\n    result[14] = -m[12] * result[2] - m[13] * result[6] - m[14] * result[10];\n    return result;\n};\n\n/**\n * Returns the transpose of a 4x4 matrix\n *\n * @method transpose\n * @static\n * @param {Transform} m matrix\n * @return {Transform} the resulting transposed matrix\n */\nTransform.transpose = function transpose(m) {\n    return [m[0], m[4], m[8], m[12], m[1], m[5], m[9], m[13], m[2], m[6], m[10], m[14], m[3], m[7], m[11], m[15]];\n};\n\nfunction _normSquared(v) {\n    return (v.length === 2) ? v[0] * v[0] + v[1] * v[1] : v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n}\nfunction _norm(v) {\n    return Math.sqrt(_normSquared(v));\n}\nfunction _sign(n) {\n    return (n < 0) ? -1 : 1;\n}\n\n/**\n * Decompose Transform into separate .translate, .rotate, .scale,\n *    and .skew components.\n *\n * @method interpret\n * @static\n * @param {Transform} M transform matrix\n * @return {Object} matrix spec object with component matrices .translate,\n *    .rotate, .scale, .skew\n */\nTransform.interpret = function interpret(M) {\n\n    // QR decomposition via Householder reflections\n    //FIRST ITERATION\n\n    //default Q1 to the identity matrix;\n    var x = [M[0], M[1], M[2]];                // first column vector\n    var sgn = _sign(x[0]);                     // sign of first component of x (for stability)\n    var xNorm = _norm(x);                      // norm of first column vector\n    var v = [x[0] + sgn * xNorm, x[1], x[2]];  // v = x + sign(x[0])|x|e1\n    var mult = 2 / _normSquared(v);            // mult = 2/v'v\n\n    //bail out if our Matrix is singular\n    if (mult >= Infinity) {\n        return {translate: Transform.getTranslate(M), rotate: [0, 0, 0], scale: [0, 0, 0], skew: [0, 0, 0]};\n    }\n\n    //evaluate Q1 = I - 2vv'/v'v\n    var Q1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1];\n\n    //diagonals\n    Q1[0]  = 1 - mult * v[0] * v[0];    // 0,0 entry\n    Q1[5]  = 1 - mult * v[1] * v[1];    // 1,1 entry\n    Q1[10] = 1 - mult * v[2] * v[2];    // 2,2 entry\n\n    //upper diagonal\n    Q1[1] = -mult * v[0] * v[1];        // 0,1 entry\n    Q1[2] = -mult * v[0] * v[2];        // 0,2 entry\n    Q1[6] = -mult * v[1] * v[2];        // 1,2 entry\n\n    //lower diagonal\n    Q1[4] = Q1[1];                      // 1,0 entry\n    Q1[8] = Q1[2];                      // 2,0 entry\n    Q1[9] = Q1[6];                      // 2,1 entry\n\n    //reduce first column of M\n    var MQ1 = Transform.multiply(Q1, M);\n\n    //SECOND ITERATION on (1,1) minor\n    var x2 = [MQ1[5], MQ1[6]];\n    var sgn2 = _sign(x2[0]);                    // sign of first component of x (for stability)\n    var x2Norm = _norm(x2);                     // norm of first column vector\n    var v2 = [x2[0] + sgn2 * x2Norm, x2[1]];    // v = x + sign(x[0])|x|e1\n    var mult2 = 2 / _normSquared(v2);           // mult = 2/v'v\n\n    //evaluate Q2 = I - 2vv'/v'v\n    var Q2 = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1];\n\n    //diagonal\n    Q2[5]  = 1 - mult2 * v2[0] * v2[0]; // 1,1 entry\n    Q2[10] = 1 - mult2 * v2[1] * v2[1]; // 2,2 entry\n\n    //off diagonals\n    Q2[6] = -mult2 * v2[0] * v2[1];     // 2,1 entry\n    Q2[9] = Q2[6];                      // 1,2 entry\n\n    //calc QR decomposition. Q = Q1*Q2, R = Q'*M\n    var Q = Transform.multiply(Q2, Q1);      //note: really Q transpose\n    var R = Transform.multiply(Q, M);\n\n    //remove negative scaling\n    var remover = Transform.scale(R[0] < 0 ? -1 : 1, R[5] < 0 ? -1 : 1, R[10] < 0 ? -1 : 1);\n    R = Transform.multiply(R, remover);\n    Q = Transform.multiply(remover, Q);\n\n    //decompose into rotate/scale/skew matrices\n    var result = {};\n    result.translate = Transform.getTranslate(M);\n    result.rotate = [Math.atan2(-Q[6], Q[10]), Math.asin(Q[2]), Math.atan2(-Q[1], Q[0])];\n    if (!result.rotate[0]) {\n        result.rotate[0] = 0;\n        result.rotate[2] = Math.atan2(Q[4], Q[5]);\n    }\n    result.scale = [R[0], R[5], R[10]];\n    result.skew = [Math.atan2(R[9], result.scale[2]), Math.atan2(R[8], result.scale[2]), Math.atan2(R[4], result.scale[0])];\n\n    //double rotation workaround\n    if (Math.abs(result.rotate[0]) + Math.abs(result.rotate[2]) > 1.5 * Math.PI) {\n        result.rotate[1] = Math.PI - result.rotate[1];\n        if (result.rotate[1] > Math.PI) result.rotate[1] -= 2 * Math.PI;\n        if (result.rotate[1] < -Math.PI) result.rotate[1] += 2 * Math.PI;\n        if (result.rotate[0] < 0) result.rotate[0] += Math.PI;\n        else result.rotate[0] -= Math.PI;\n        if (result.rotate[2] < 0) result.rotate[2] += Math.PI;\n        else result.rotate[2] -= Math.PI;\n    }\n\n    return result;\n};\n\n/**\n * Weighted average between two matrices by averaging their\n *     translation, rotation, scale, skew components.\n *     f(M1,M2,t) = (1 - t) * M1 + t * M2\n *\n * @method average\n * @static\n * @param {Transform} M1 f(M1,M2,0) = M1\n * @param {Transform} M2 f(M1,M2,1) = M2\n * @param {Number} t\n * @return {Transform}\n */\nTransform.average = function average(M1, M2, t) {\n    t = (t === undefined) ? 0.5 : t;\n    var specM1 = Transform.interpret(M1);\n    var specM2 = Transform.interpret(M2);\n\n    var specAvg = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: [0, 0, 0],\n        skew: [0, 0, 0]\n    };\n\n    for (var i = 0; i < 3; i++) {\n        specAvg.translate[i] = (1 - t) * specM1.translate[i] + t * specM2.translate[i];\n        specAvg.rotate[i] = (1 - t) * specM1.rotate[i] + t * specM2.rotate[i];\n        specAvg.scale[i] = (1 - t) * specM1.scale[i] + t * specM2.scale[i];\n        specAvg.skew[i] = (1 - t) * specM1.skew[i] + t * specM2.skew[i];\n    }\n    return Transform.build(specAvg);\n};\n\n/**\n * Compose .translate, .rotate, .scale, .skew components into\n * Transform matrix\n *\n * @method build\n * @static\n * @param {matrixSpec} spec object with component matrices .translate,\n *    .rotate, .scale, .skew\n * @return {Transform} composed transform\n */\nTransform.build = function build(spec) {\n    var scaleMatrix = Transform.scale(spec.scale[0], spec.scale[1], spec.scale[2]);\n    var skewMatrix = Transform.skew(spec.skew[0], spec.skew[1], spec.skew[2]);\n    var rotateMatrix = Transform.rotate(spec.rotate[0], spec.rotate[1], spec.rotate[2]);\n    return Transform.thenMove(Transform.multiply(Transform.multiply(rotateMatrix, skewMatrix), scaleMatrix), spec.translate);\n};\n\n/**\n * Determine if two Transforms are component-wise equal\n *   Warning: breaks on perspective Transforms\n *\n * @method equals\n * @static\n * @param {Transform} a matrix\n * @param {Transform} b matrix\n * @return {boolean}\n */\nTransform.equals = function equals(a, b) {\n    return !Transform.notEquals(a, b);\n};\n\n/**\n * Determine if two Transforms are component-wise unequal\n *   Warning: breaks on perspective Transforms\n *\n * @method notEquals\n * @static\n * @param {Transform} a matrix\n * @param {Transform} b matrix\n * @return {boolean}\n */\nTransform.notEquals = function notEquals(a, b) {\n    if (a === b) return false;\n\n    // shortci\n    return !(a && b) ||\n        a[12] !== b[12] || a[13] !== b[13] || a[14] !== b[14] ||\n        a[0] !== b[0] || a[1] !== b[1] || a[2] !== b[2] ||\n        a[4] !== b[4] || a[5] !== b[5] || a[6] !== b[6] ||\n        a[8] !== b[8] || a[9] !== b[9] || a[10] !== b[10];\n};\n\n/**\n * Constrain angle-trio components to range of [-pi, pi).\n *\n * @method normalizeRotation\n * @static\n * @param {Array.Number} rotation phi, theta, psi (array of floats\n *    && array.length == 3)\n * @return {Array.Number} new phi, theta, psi triplet\n *    (array of floats && array.length == 3)\n */\nTransform.normalizeRotation = function normalizeRotation(rotation) {\n    var result = rotation.slice(0);\n    if (result[0] === Math.PI * 0.5 || result[0] === -Math.PI * 0.5) {\n        result[0] = -result[0];\n        result[1] = Math.PI - result[1];\n        result[2] -= Math.PI;\n    }\n    if (result[0] > Math.PI * 0.5) {\n        result[0] = result[0] - Math.PI;\n        result[1] = Math.PI - result[1];\n        result[2] -= Math.PI;\n    }\n    if (result[0] < -Math.PI * 0.5) {\n        result[0] = result[0] + Math.PI;\n        result[1] = -Math.PI - result[1];\n        result[2] -= Math.PI;\n    }\n    while (result[1] < -Math.PI) result[1] += 2 * Math.PI;\n    while (result[1] >= Math.PI) result[1] -= 2 * Math.PI;\n    while (result[2] < -Math.PI) result[2] += 2 * Math.PI;\n    while (result[2] >= Math.PI) result[2] -= 2 * Math.PI;\n    return result;\n};\n\n/**\n * (Property) Array defining a translation forward in z by 1\n *\n * @property {array} inFront\n * @static\n * @final\n */\nTransform.inFront = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1e-3, 1];\n\n/**\n * (Property) Array defining a translation backwards in z by 1\n *\n * @property {array} behind\n * @static\n * @final\n */\nTransform.behind = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, -1e-3, 1];\n\nmodule.exports = Transform;\n},{}],16:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar EventHandler = require('./EventHandler');\nvar OptionsManager = require('./OptionsManager');\nvar RenderNode = require('./RenderNode');\nvar Utility = require('../utilities/Utility');\n\n/**\n * Useful for quickly creating elements within applications\n *   with large event systems.  Consists of a RenderNode paired with\n *   an input EventHandler and an output EventHandler.\n *   Meant to be extended by the developer.\n *\n * @class View\n * @uses EventHandler\n * @uses OptionsManager\n * @uses RenderNode\n * @constructor\n */\nfunction View(options) {\n    this._node = new RenderNode();\n\n    this._eventInput = new EventHandler();\n    this._eventOutput = new EventHandler();\n    EventHandler.setInputHandler(this, this._eventInput);\n    EventHandler.setOutputHandler(this, this._eventOutput);\n\n    this.options = Utility.clone(this.constructor.DEFAULT_OPTIONS || View.DEFAULT_OPTIONS);\n    this._optionsManager = new OptionsManager(this.options);\n\n    if (options) this.setOptions(options);\n}\n\nView.DEFAULT_OPTIONS = {}; // no defaults\n\n/**\n * Look up options value by key\n * @method getOptions\n *\n * @param {string} key key\n * @return {Object} associated object\n */\nView.prototype.getOptions = function getOptions(key) {\n    return this._optionsManager.getOptions(key);\n};\n\n/*\n *  Set internal options.\n *  No defaults options are set in View.\n *\n *  @method setOptions\n *  @param {Object} options\n */\nView.prototype.setOptions = function setOptions(options) {\n    this._optionsManager.patch(options);\n};\n\n/**\n * Add a child renderable to the view.\n *   Note: This is meant to be used by an inheriting class\n *   rather than from outside the prototype chain.\n *\n * @method add\n * @return {RenderNode}\n * @protected\n */\nView.prototype.add = function add() {\n    return this._node.add.apply(this._node, arguments);\n};\n\n/**\n * Alias for add\n * @method _add\n */\nView.prototype._add = View.prototype.add;\n\n/**\n * Generate a render spec from the contents of this component.\n *\n * @private\n * @method render\n * @return {number} Render spec for this component\n */\nView.prototype.render = function render() {\n    return this._node.render();\n};\n\n/**\n * Return size of contained element.\n *\n * @method getSize\n * @return {Array.Number} [width, height]\n */\nView.prototype.getSize = function getSize() {\n    if (this._node && this._node.getSize) {\n        return this._node.getSize.apply(this._node, arguments) || this.options.size;\n    }\n    else return this.options.size;\n};\n\nmodule.exports = View;\n},{\"../utilities/Utility\":95,\"./EventHandler\":7,\"./OptionsManager\":10,\"./RenderNode\":11}],17:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\n\n\n\n/**\n * Helper object used to iterate through items sequentially. Used in\n *   views that deal with layout.  A ViewSequence object conceptually points\n *   to a node in a linked list.\n *\n * @class ViewSequence\n *\n * @constructor\n * @param {Object|Array} options Options object, or content array.\n * @param {Number} [options.index] starting index.\n * @param {Number} [options.array] Array of elements to populate the ViewSequence\n * @param {Object} [options._] Optional backing store (internal\n * @param {Boolean} [options.loop] Whether to wrap when accessing elements just past the end\n *   (or beginning) of the sequence.\n */\nfunction ViewSequence(options) {\n    if (!options) options = [];\n    if (options instanceof Array) options = {array: options};\n\n    this._ = null;\n    this.index = options.index || 0;\n\n    if (options.array) this._ = new (this.constructor.Backing)(options.array);\n    else if (options._) this._ = options._;\n\n    if (this.index === this._.firstIndex) this._.firstNode = this;\n    if (this.index === this._.firstIndex + this._.array.length - 1) this._.lastNode = this;\n\n    if (options.loop !== undefined) this._.loop = options.loop;\n\n    if (options.trackSize !== undefined) this._.trackSize = options.trackSize;\n\n    this._previousNode = null;\n    this._nextNode = null;\n}\n\n// constructor for internal storage\nViewSequence.Backing = function Backing(array) {\n    this.array = array;\n    this.firstIndex = 0;\n    this.loop = false;\n    this.firstNode = null;\n    this.lastNode = null;\n    this.cumulativeSizes = [[0, 0]];\n    this.sizeDirty = true;\n    this.trackSize = false;\n};\n\n// Get value \"i\" slots away from the first index.\nViewSequence.Backing.prototype.getValue = function getValue(i) {\n    var _i = i - this.firstIndex;\n    if (_i < 0 || _i >= this.array.length) return null;\n    return this.array[_i];\n};\n\n// Set value \"i\" slots away from the first index.\nViewSequence.Backing.prototype.setValue = function setValue(i, value) {\n    this.array[i - this.firstIndex] = value;\n};\n\n// Get sequence size from backing up to index\n// TODO: remove from viewSequence with proper abstraction\nViewSequence.Backing.prototype.getSize = function getSize(index) {\n    return this.cumulativeSizes[index];\n};\n\n// Calculates cumulative size\n// TODO: remove from viewSequence with proper abstraction\nViewSequence.Backing.prototype.calculateSize = function calculateSize(index) {\n    index = index || this.array.length;\n    var size = [0, 0];\n    for (var i = 0; i < index; i++) {\n        var nodeSize = this.array[i].getSize();\n        if (!nodeSize) return undefined;\n        if (size[0] !== undefined) {\n            if (nodeSize[0] === undefined) size[0] = undefined;\n            else size[0] += nodeSize[0];\n        }\n        if (size[1] !== undefined) {\n            if (nodeSize[1] === undefined) size[1] = undefined;\n            else size[1] += nodeSize[1];\n        }\n        this.cumulativeSizes[i + 1] = size.slice();\n    }\n    this.sizeDirty = false;\n    return size;\n};\n\n// After splicing into the backing store, restore the indexes of each node correctly.\nViewSequence.Backing.prototype.reindex = function reindex(start, removeCount, insertCount) {\n    if (!this.array[0]) return;\n\n    var i = 0;\n    var index = this.firstIndex;\n    var indexShiftAmount = insertCount - removeCount;\n    var node = this.firstNode;\n\n    // find node to begin\n    while (index < start - 1) {\n        node = node.getNext();\n        index++;\n    }\n    // skip removed nodes\n    var spliceStartNode = node;\n    for (i = 0; i < removeCount; i++) {\n        node = node.getNext();\n        if (node) node._previousNode = spliceStartNode;\n    }\n    var spliceResumeNode = node ? node.getNext() : null;\n    // generate nodes for inserted items\n    spliceStartNode._nextNode = null;\n    node = spliceStartNode;\n    for (i = 0; i < insertCount; i++) node = node.getNext();\n    index += insertCount;\n    // resume the chain\n    if (node !== spliceResumeNode) {\n        node._nextNode = spliceResumeNode;\n        if (spliceResumeNode) spliceResumeNode._previousNode = node;\n    }\n    if (spliceResumeNode) {\n        node = spliceResumeNode;\n        index++;\n        while (node && index < this.array.length + this.firstIndex) {\n            if (node._nextNode) node.index += indexShiftAmount;\n            else node.index = index;\n            node = node.getNext();\n            index++;\n        }\n    }\n    if (this.trackSize) this.sizeDirty = true;\n};\n\n/**\n * Return ViewSequence node previous to this node in the list, respecting looping if applied.\n *\n * @method getPrevious\n * @return {ViewSequence} previous node.\n */\nViewSequence.prototype.getPrevious = function getPrevious() {\n    var len = this._.array.length;\n    if (!len) {\n        this._previousNode = null;\n    }\n    else if (this.index === this._.firstIndex) {\n        if (this._.loop) {\n            this._previousNode = this._.lastNode || new (this.constructor)({_: this._, index: this._.firstIndex + len - 1});\n            this._previousNode._nextNode = this;\n        }\n        else {\n            this._previousNode = null;\n        }\n    }\n    else if (!this._previousNode) {\n        this._previousNode = new (this.constructor)({_: this._, index: this.index - 1});\n        this._previousNode._nextNode = this;\n    }\n    return this._previousNode;\n};\n\n/**\n * Return ViewSequence node next after this node in the list, respecting looping if applied.\n *\n * @method getNext\n * @return {ViewSequence} previous node.\n */\nViewSequence.prototype.getNext = function getNext() {\n    var len = this._.array.length;\n    if (!len) {\n        this._nextNode = null;\n    }\n    else if (this.index === this._.firstIndex + len - 1) {\n        if (this._.loop) {\n            this._nextNode = this._.firstNode || new (this.constructor)({_: this._, index: this._.firstIndex});\n            this._nextNode._previousNode = this;\n        }\n        else {\n            this._nextNode = null;\n        }\n    }\n    else if (!this._nextNode) {\n        this._nextNode = new (this.constructor)({_: this._, index: this.index + 1});\n        this._nextNode._previousNode = this;\n    }\n    return this._nextNode;\n};\n\n/**\n * Return index of the provided item in the backing array\n *\n * @method indexOf\n * @return {Number} index or -1 if not found\n */\nViewSequence.prototype.indexOf = function indexOf(item) {\n    return this._.array.indexOf(item);\n};\n\n/**\n * Return index of this ViewSequence node.\n *\n * @method getIndex\n * @return {Number} index\n */\nViewSequence.prototype.getIndex = function getIndex() {\n    return this.index;\n};\n\n/**\n * Return printable version of this ViewSequence node.\n *\n * @method toString\n * @return {string} this index as a string\n */\nViewSequence.prototype.toString = function toString() {\n    return '' + this.index;\n};\n\n/**\n * Add one or more objects to the beginning of the sequence.\n *\n * @method unshift\n * @param {...Object} value arguments array of objects\n */\nViewSequence.prototype.unshift = function unshift(value) {\n    this._.array.unshift.apply(this._.array, arguments);\n    this._.firstIndex -= arguments.length;\n    if (this._.trackSize) this._.sizeDirty = true;\n};\n\n/**\n * Add one or more objects to the end of the sequence.\n *\n * @method push\n * @param {...Object} value arguments array of objects\n */\nViewSequence.prototype.push = function push(value) {\n    this._.array.push.apply(this._.array, arguments);\n    if (this._.trackSize) this._.sizeDirty = true;\n};\n\n/**\n * Remove objects from the sequence\n *\n * @method splice\n * @param {Number} index starting index for removal\n * @param {Number} howMany how many elements to remove\n * @param {...Object} value arguments array of objects\n */\nViewSequence.prototype.splice = function splice(index, howMany) {\n    var values = Array.prototype.slice.call(arguments, 2);\n    this._.array.splice.apply(this._.array, [index - this._.firstIndex, howMany].concat(values));\n    this._.reindex(index, howMany, values.length);\n};\n\n/**\n * Exchange this element's sequence position with another's.\n *\n * @method swap\n * @param {ViewSequence} other element to swap with.\n */\nViewSequence.prototype.swap = function swap(other) {\n    var otherValue = other.get();\n    var myValue = this.get();\n    this._.setValue(this.index, otherValue);\n    this._.setValue(other.index, myValue);\n\n    var myPrevious = this._previousNode;\n    var myNext = this._nextNode;\n    var myIndex = this.index;\n    var otherPrevious = other._previousNode;\n    var otherNext = other._nextNode;\n    var otherIndex = other.index;\n\n    this.index = otherIndex;\n    this._previousNode = (otherPrevious === this) ? other : otherPrevious;\n    if (this._previousNode) this._previousNode._nextNode = this;\n    this._nextNode = (otherNext === this) ? other : otherNext;\n    if (this._nextNode) this._nextNode._previousNode = this;\n\n    other.index = myIndex;\n    other._previousNode = (myPrevious === other) ? this : myPrevious;\n    if (other._previousNode) other._previousNode._nextNode = other;\n    other._nextNode = (myNext === other) ? this : myNext;\n    if (other._nextNode) other._nextNode._previousNode = other;\n\n    if (this.index === this._.firstIndex) this._.firstNode = this;\n    else if (this.index === this._.firstIndex + this._.array.length - 1) this._.lastNode = this;\n    if (other.index === this._.firstIndex) this._.firstNode = other;\n    else if (other.index === this._.firstIndex + this._.array.length - 1) this._.lastNode = other;\n    if (this._.trackSize) this._.sizeDirty = true;\n};\n\n   /**\n * Return value of this ViewSequence node.\n *\n * @method get\n * @return {Object} value of thiss\n */\nViewSequence.prototype.get = function get() {\n    return this._.getValue(this.index);\n};\n\n   /**\n * Call getSize() on the contained View.\n *\n * @method getSize\n * @return {Array.Number} [width, height]\n */\nViewSequence.prototype.getSize = function getSize() {\n    var target = this.get();\n    return target ? target.getSize() : null;\n};\n\n/**\n * Generate a render spec from the contents of this component.\n * Specifically, this will render the value at the current index.\n * @private\n * @method render\n * @return {number} Render spec for this component\n */\nViewSequence.prototype.render = function render() {\n    if (this._.trackSize && this._.sizeDirty) this._.calculateSize();\n    var target = this.get();\n    return target ? target.render.apply(target, arguments) : null;\n};\n\nmodule.exports = ViewSequence;\n},{}],18:[function(require,module,exports){\nmodule.exports = {\n  Context: require('./Context'),\n  ElementAllocator: require('./ElementAllocator'),\n  ElementOutput: require('./ElementOutput'),\n  Engine: require('./Engine'),\n  Entity: require('./Entity'),\n  EventEmitter: require('./EventEmitter'),\n  EventHandler: require('./EventHandler'),\n  Group: require('./Group'),\n  Modifier: require('./Modifier'),\n  OptionsManager: require('./OptionsManager'),\n  RenderNode: require('./RenderNode'),\n  Scene: require('./Scene'),\n  SpecParser: require('./SpecParser'),\n  Surface: require('./Surface'),\n  Transform: require('./Transform'),\n  View: require('./View'),\n  ViewSequence: require('./ViewSequence')\n};\n\n},{\"./Context\":1,\"./ElementAllocator\":2,\"./ElementOutput\":3,\"./Engine\":4,\"./Entity\":5,\"./EventEmitter\":6,\"./EventHandler\":7,\"./Group\":8,\"./Modifier\":9,\"./OptionsManager\":10,\"./RenderNode\":11,\"./Scene\":12,\"./SpecParser\":13,\"./Surface\":14,\"./Transform\":15,\"./View\":16,\"./ViewSequence\":17}],19:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar EventHandler = require('../core/EventHandler');\n\n/**\n * A switch which wraps several event destinations and\n *  redirects received events to at most one of them.\n *  Setting the 'mode' of the object dictates which one\n *  of these destinations will receive events.\n *\n * @class EventArbiter\n * @constructor\n *\n * @param {Number | string} startMode initial setting of switch,\n */\nfunction EventArbiter(startMode) {\n    this.dispatchers = {};\n    this.currMode = undefined;\n    this.setMode(startMode);\n}\n\n/**\n * Set switch to this mode, passing events to the corresponding\n *   EventHandler.  If mode has changed, emits 'change' event,\n *   emits 'unpipe' event to the old mode's handler, and emits 'pipe'\n *   event to the new mode's handler.\n *\n * @method setMode\n *\n * @param {string | number} mode indicating which event handler to send to.\n */\nEventArbiter.prototype.setMode = function setMode(mode) {\n    if (mode !== this.currMode) {\n        var startMode = this.currMode;\n\n        if (this.dispatchers[this.currMode]) this.dispatchers[this.currMode].trigger('unpipe');\n        this.currMode = mode;\n        if (this.dispatchers[mode]) this.dispatchers[mode].emit('pipe');\n        this.emit('change', {from: startMode, to: mode});\n    }\n};\n\n/**\n * Return the existing EventHandler corresponding to this\n *   mode, creating one if it doesn't exist.\n *\n * @method forMode\n *\n * @param {string | number} mode mode to which this eventHandler corresponds\n *\n * @return {EventHandler} eventHandler corresponding to this mode\n */\nEventArbiter.prototype.forMode = function forMode(mode) {\n    if (!this.dispatchers[mode]) this.dispatchers[mode] = new EventHandler();\n    return this.dispatchers[mode];\n};\n\n/**\n * Trigger an event, sending to currently selected handler, if\n *   it is listening for provided 'type' key.\n *\n * @method emit\n *\n * @param {string} eventType event type key (for example, 'click')\n * @param {Object} event event data\n * @return {EventHandler} this\n */\nEventArbiter.prototype.emit = function emit(eventType, event) {\n    if (this.currMode === undefined) return false;\n    if (!event) event = {};\n    var dispatcher = this.dispatchers[this.currMode];\n    if (dispatcher) return dispatcher.trigger(eventType, event);\n};\n\nmodule.exports = EventArbiter;\n},{\"../core/EventHandler\":7}],20:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar EventHandler = require('../core/EventHandler');\n\n/**\n * EventFilter regulates the broadcasting of events based on\n *  a specified condition function of standard event type: function(type, data).\n *\n * @class EventFilter\n * @constructor\n *\n * @param {function} condition function to determine whether or not\n *    events are emitted.\n */\nfunction EventFilter(condition) {\n    EventHandler.call(this);\n    this._condition = condition;\n}\nEventFilter.prototype = Object.create(EventHandler.prototype);\nEventFilter.prototype.constructor = EventFilter;\n\n/**\n * If filter condition is met, trigger an event, sending to all downstream handlers\n *   listening for provided 'type' key.\n *\n * @method emit\n *\n * @param {string} type event type key (for example, 'click')\n * @param {Object} data event data\n * @return {EventHandler} this\n */\nEventFilter.prototype.emit = function emit(type, data) {\n    if (this._condition(type, data))\n        return EventHandler.prototype.emit.apply(this, arguments);\n};\n\n/**\n * An alias of emit. Trigger determines whether to send\n *  events based on the return value of it's condition function\n *  when passed the event type and associated data.\n *\n * @method trigger\n * @param {string} type name of the event\n * @param {object} data associated data\n */\nEventFilter.prototype.trigger = EventFilter.prototype.emit;\n\nmodule.exports = EventFilter;\n},{\"../core/EventHandler\":7}],21:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar EventHandler = require('../core/EventHandler');\n\n/**\n * EventMapper routes events to various event destinations\n *  based on custom logic.  The function signature is arbitrary.\n *\n * @class EventMapper\n * @constructor\n *\n * @param {function} mappingFunction function to determine where\n *  events are routed to.\n */\nfunction EventMapper(mappingFunction) {\n    EventHandler.call(this);\n    this._mappingFunction = mappingFunction;\n}\nEventMapper.prototype = Object.create(EventHandler.prototype);\nEventMapper.prototype.constructor = EventMapper;\n\nEventMapper.prototype.subscribe = null;\nEventMapper.prototype.unsubscribe = null;\n\n/**\n * Trigger an event, sending to all mapped downstream handlers\n *   listening for provided 'type' key.\n *\n * @method emit\n *\n * @param {string} type event type key (for example, 'click')\n * @param {Object} data event data\n * @return {EventHandler} this\n */\nEventMapper.prototype.emit = function emit(type, data) {\n    var target = this._mappingFunction.apply(this, arguments);\n    if (target && (target.emit instanceof Function)) target.emit(type, data);\n};\n\n/**\n * Alias of emit.\n * @method trigger\n */\nEventMapper.prototype.trigger = EventMapper.prototype.emit;\n\nmodule.exports = EventMapper;\n},{\"../core/EventHandler\":7}],22:[function(require,module,exports){\nmodule.exports = {\n  EventArbiter: require('./EventArbiter'),\n  EventFilter: require('./EventFilter'),\n  EventMapper: require('./EventMapper')\n};\n\n},{\"./EventArbiter\":19,\"./EventFilter\":20,\"./EventMapper\":21}],23:[function(require,module,exports){\nmodule.exports = {\n  core: require('./core'),\n  events: require('./events'),\n  inputs: require('./inputs'),\n  math: require('./math'),\n  modifiers: require('./modifiers'),\n  physics: require('./physics'),\n  surfaces: require('./surfaces'),\n  transitions: require('./transitions'),\n  utilities: require('./utilities'),\n  widgets: require('./widgets'),\n  views: require('./views')\n};\n\n},{\"./core\":18,\"./events\":22,\"./inputs\":36,\"./math\":42,\"./modifiers\":47,\"./physics\":71,\"./surfaces\":82,\"./transitions\":92,\"./utilities\":96,\"./views\":111,\"./widgets\":116}],24:[function(require,module,exports){\nvar EventHandler = require('../core/EventHandler');\nvar Transitionable = require('../transitions/Transitionable');\n\n/**\n * Accumulates differentials of event sources that emit a `delta`\n *  attribute taking a Number or Array of Number types. The accumulated\n *  value is stored in a getter/setter.\n *\n * @class Accumulator\n * @constructor\n * @param value {Number|Array|Transitionable}   Initializing value\n * @param [eventName='update'] {String}         Name of update event\n */\nfunction Accumulator(value, eventName) {\n    if (eventName === undefined) eventName = 'update';\n\n    this._state = (value && value.get && value.set)\n        ? value\n        : new Transitionable(value || 0);\n\n    this._eventInput = new EventHandler();\n    EventHandler.setInputHandler(this, this._eventInput);\n\n    this._eventInput.on(eventName, _handleUpdate.bind(this));\n}\n\nfunction _handleUpdate(data) {\n    var delta = data.delta;\n    var state = this.get();\n\n    if (delta.constructor === state.constructor){\n        var newState = (delta instanceof Array)\n            ? [state[0] + delta[0], state[1] + delta[1]]\n            : state + delta;\n        this.set(newState);\n    }\n}\n\n/**\n * Basic getter\n *\n * @method get\n * @return {Number|Array} current value\n */\nAccumulator.prototype.get = function get() {\n    return this._state.get();\n};\n\n/**\n * Basic setter\n *\n * @method set\n * @param value {Number|Array} new value\n */\nAccumulator.prototype.set = function set(value) {\n    this._state.set(value);\n};\n\nmodule.exports = Accumulator;\n},{\"../core/EventHandler\":7,\"../transitions/Transitionable\":88}],25:[function(require,module,exports){\nvar hasTouch = 'ontouchstart' in window;\n\nfunction kill(type) {\n    window.addEventListener(type, function(event) {\n        event.stopPropagation();\n        return false;\n    }, true);\n}\n\nif (hasTouch) {\n    kill('mousedown');\n    kill('mousemove');\n    kill('mouseup');\n    kill('mouseleave');\n}\n},{}],26:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\n\n\n/**\n * FastClick is an override shim which maps event pairs of\n *   'touchstart' and 'touchend' which differ by less than a certain\n *   threshold to the 'click' event.\n *   This is used to speed up clicks on some browsers.\n */\n(function() {\n  if (!window.CustomEvent) return;\n  var clickThreshold = 300;\n  var clickWindow = 500;\n  var potentialClicks = {};\n  var recentlyDispatched = {};\n  var _now = Date.now;\n\n  window.addEventListener('touchstart', function(event) {\n      var timestamp = _now();\n      for (var i = 0; i < event.changedTouches.length; i++) {\n          var touch = event.changedTouches[i];\n          potentialClicks[touch.identifier] = timestamp;\n      }\n  });\n\n  window.addEventListener('touchmove', function(event) {\n      for (var i = 0; i < event.changedTouches.length; i++) {\n          var touch = event.changedTouches[i];\n          delete potentialClicks[touch.identifier];\n      }\n  });\n\n  window.addEventListener('touchend', function(event) {\n      var currTime = _now();\n      for (var i = 0; i < event.changedTouches.length; i++) {\n          var touch = event.changedTouches[i];\n          var startTime = potentialClicks[touch.identifier];\n          if (startTime && currTime - startTime < clickThreshold) {\n              var clickEvt = new window.CustomEvent('click', {\n                  'bubbles': true,\n                  'detail': touch\n              });\n              recentlyDispatched[currTime] = event;\n              event.target.dispatchEvent(clickEvt);\n          }\n          delete potentialClicks[touch.identifier];\n      }\n  });\n\n  window.addEventListener('click', function(event) {\n      var currTime = _now();\n      for (var i in recentlyDispatched) {\n          var previousEvent = recentlyDispatched[i];\n          if (currTime - i < clickWindow) {\n              if (event instanceof window.MouseEvent && event.target === previousEvent.target) event.stopPropagation();\n          }\n          else delete recentlyDispatched[i];\n      }\n  }, true);\n})();\n},{}],27:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\nvar EventHandler = require('../core/EventHandler');\n\n/**\n * Combines multiple types of sync classes (e.g. mouse, touch,\n *  scrolling) into one standardized interface for inclusion in widgets.\n *\n *  Sync classes are first registered with a key, and then can be accessed\n *  globally by key.\n *\n *  Emits 'start', 'update' and 'end' events as a union of the sync class\n *  providers.\n *\n * @class GenericSync\n * @constructor\n * @param syncs {Object|Array} object with fields {sync key : sync options}\n *    or an array of registered sync keys\n * @param [options] {Object|Array} options object to set on all syncs\n */\nfunction GenericSync(syncs, options) {\n    this._eventInput = new EventHandler();\n    this._eventOutput = new EventHandler();\n\n    EventHandler.setInputHandler(this, this._eventInput);\n    EventHandler.setOutputHandler(this, this._eventOutput);\n\n    this._syncs = {};\n    if (syncs) this.addSync(syncs);\n    if (options) this.setOptions(options);\n}\n\nGenericSync.DIRECTION_X = 0;\nGenericSync.DIRECTION_Y = 1;\nGenericSync.DIRECTION_Z = 2;\n\n// Global registry of sync classes. Append only.\nvar registry = {};\n\n/**\n * Register a global sync class with an identifying key\n *\n * @static\n * @method register\n *\n * @param syncObject {Object} an object of {sync key : sync options} fields\n */\nGenericSync.register = function register(syncObject) {\n    for (var key in syncObject){\n        if (registry[key]){\n            if (registry[key] === syncObject[key]) return; // redundant registration\n            else throw new Error('this key is registered to a different sync class');\n        }\n        else registry[key] = syncObject[key];\n    }\n};\n\n/**\n * Helper to set options on all sync instances\n *\n * @method setOptions\n * @param options {Object} options object\n */\nGenericSync.prototype.setOptions = function(options) {\n    for (var key in this._syncs){\n        this._syncs[key].setOptions(options);\n    }\n};\n\n/**\n * Pipe events to a sync class\n *\n * @method pipeSync\n * @param key {String} identifier for sync class\n */\nGenericSync.prototype.pipeSync = function pipeToSync(key) {\n    var sync = this._syncs[key];\n    this._eventInput.pipe(sync);\n    sync.pipe(this._eventOutput);\n};\n\n/**\n * Unpipe events from a sync class\n *\n * @method unpipeSync\n * @param key {String} identifier for sync class\n */\nGenericSync.prototype.unpipeSync = function unpipeFromSync(key) {\n    var sync = this._syncs[key];\n    this._eventInput.unpipe(sync);\n    sync.unpipe(this._eventOutput);\n};\n\nfunction _addSingleSync(key, options) {\n    if (!registry[key]) return;\n    this._syncs[key] = new (registry[key])(options);\n    this.pipeSync(key);\n}\n\n/**\n * Add a sync class to from the registered classes\n *\n * @method addSync\n * @param syncs {Object|Array.String} an array of registered sync keys\n *    or an object with fields {sync key : sync options}\n */\nGenericSync.prototype.addSync = function addSync(syncs) {\n    if (syncs instanceof Array)\n        for (var i = 0; i < syncs.length; i++)\n            _addSingleSync.call(this, syncs[i]);\n    else if (syncs instanceof Object)\n        for (var key in syncs)\n            _addSingleSync.call(this, key, syncs[key]);\n};\n\nmodule.exports = GenericSync;\n},{\"../core/EventHandler\":7}],28:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\nvar EventHandler = require('../core/EventHandler');\nvar OptionsManager = require('../core/OptionsManager');\n\n/**\n * Handles piped in mouse drag events. Outputs an object with the position delta from last frame, position from start,\n * current velocity averaged out over the velocitySampleLength (set via options), clientX, clientY, offsetX, and offsetY.\n *\n * Emits 'start', 'update' and 'end' events. Designed to be used either as a standalone MouseSync, or as part of a\n * GenericSync.\n *\n * @class MouseSync\n * @constructor\n *\n * @example\n *   var Surface = require('../core/Surface');\n *   var MouseSync = require('../inputs/MouseSync');\n *\n *   var surface = new Surface({ size: [100, 100] });\n *   var mouseSync = new MouseSync();\n *   surface.pipe(mouseSync);\n *\n *   mouseSync.on('start', function (e) { // react to start });\n *   mouseSync.on('update', function (e) { // react to update });\n *   mouseSync.on('end', function (e) { // react to end });\n *\n * @param [options] {Object}                An object of the following configurable options.\n * @param [options.direction] {Number}      Read from a particular axis. Valid options are: undefined, 0 or 1. 0 corresponds to x, and 1 to y. Default is undefined, which allows both x and y.\n * @param [options.rails] {Boolean}         Read from axis with the greatest differential.\n * @param [options.velocitySampleLength] {Number}  Number of previous frames to check velocity against.\n * @param [options.propogate] {Boolean}     Add a listener to document on mouseleave. This allows drag events to continue across the entire page.\n */\nfunction MouseSync(options) {\n    this.options =  Object.create(MouseSync.DEFAULT_OPTIONS);\n    this._optionsManager = new OptionsManager(this.options);\n\n    if (options) this.setOptions(options);\n\n    this._eventInput = new EventHandler();\n    this._eventOutput = new EventHandler();\n\n    EventHandler.setInputHandler(this, this._eventInput);\n    EventHandler.setOutputHandler(this, this._eventOutput);\n\n    this._eventInput.on('mousedown', _handleStart.bind(this));\n    this._eventInput.on('mousemove', _handleMove.bind(this));\n    this._eventInput.on('mouseup', _handleEnd.bind(this));\n\n    if (this.options.propogate) this._eventInput.on('mouseleave', _handleLeave.bind(this));\n    else this._eventInput.on('mouseleave', _handleEnd.bind(this));\n\n    this._payload = {\n        delta    : null,\n        position : null,\n        velocity : null,\n        clientX  : 0,\n        clientY  : 0,\n        offsetX  : 0,\n        offsetY  : 0\n    };\n\n    this._positionHistory = [];\n    this._position = null;      // to be deprecated\n    this._prevCoord = undefined;\n    this._prevTime = undefined;\n    this._down = false;\n    this._moved = false;\n    this._documentActive = false;\n}\n\nMouseSync.DEFAULT_OPTIONS = {\n    direction: undefined,\n    rails: false,\n    scale: 1,\n    propogate: true,  // events piped to document on mouseleave\n    velocitySampleLength: 10,\n    preventDefault: true\n};\n\nMouseSync.DIRECTION_X = 0;\nMouseSync.DIRECTION_Y = 1;\n\nvar MINIMUM_TICK_TIME = 8;\n\n/**\n *  Triggered by mousedown.\n *\n *  @method _handleStart\n *  @private\n */\nfunction _handleStart(event) {\n    var delta;\n    var velocity;\n    if (this.options.preventDefault) event.preventDefault(); // prevent drag\n\n    var x = event.clientX;\n    var y = event.clientY;\n\n    this._prevCoord = [x, y];\n    this._prevTime = Date.now();\n    this._down = true;\n    this._move = false;\n\n    if (this.options.direction !== undefined) {\n        this._position = 0;\n        delta = 0;\n        velocity = 0;\n    }\n    else {\n        this._position = [0, 0];\n        delta = [0, 0];\n        velocity = [0, 0];\n    }\n\n    var payload = this._payload;\n    payload.delta = delta;\n    payload.position = this._position;\n    payload.velocity = velocity;\n    payload.clientX = x;\n    payload.clientY = y;\n    payload.offsetX = event.offsetX;\n    payload.offsetY = event.offsetY;\n\n    this._positionHistory.push({\n        position: payload.position.slice ? payload.position.slice(0) : payload.position,\n        time: this._prevTime\n    });\n\n    this._eventOutput.emit('start', payload);\n    this._documentActive = false;\n}\n\n/**\n *  Triggered by mousemove.\n *\n *  @method _handleMove\n *  @private\n */\nfunction _handleMove(event) {\n    if (!this._prevCoord) return;\n\n    var prevCoord = this._prevCoord;\n    var prevTime = this._prevTime;\n\n    var x = event.clientX;\n    var y = event.clientY;\n\n    var currTime = Date.now();\n\n    var diffX = x - prevCoord[0];\n    var diffY = y - prevCoord[1];\n\n    if (this.options.rails) {\n        if (Math.abs(diffX) > Math.abs(diffY)) diffY = 0;\n        else diffX = 0;\n    }\n\n    var diffTime = Math.max(currTime - this._positionHistory[0].time, MINIMUM_TICK_TIME); // minimum tick time\n\n    var scale = this.options.scale;\n    var nextVel;\n    var nextDelta;\n\n    if (this.options.direction === MouseSync.DIRECTION_X) {\n        nextDelta = scale * diffX;\n        this._position += nextDelta;\n        nextVel = scale * (this._position - this._positionHistory[0].position) / diffTime;\n    }\n    else if (this.options.direction === MouseSync.DIRECTION_Y) {\n        nextDelta = scale * diffY;\n        this._position += nextDelta;\n        nextVel = scale * (this._position - this._positionHistory[0].position) / diffTime;\n    }\n    else {\n        nextDelta = [scale * diffX, scale * diffY];\n        nextVel = [\n            scale * (this._position[0] - this._positionHistory[0].position[0]) / diffTime,\n            scale * (this._position[1] - this._positionHistory[0].position[1]) / diffTime\n        ];\n        this._position[0] += nextDelta[0];\n        this._position[1] += nextDelta[1];\n    }\n\n    var payload = this._payload;\n    payload.delta    = nextDelta;\n    payload.position = this._position;\n    payload.velocity = nextVel;\n    payload.clientX  = x;\n    payload.clientY  = y;\n    payload.offsetX  = event.offsetX;\n    payload.offsetY  = event.offsetY;\n\n    if (this._positionHistory.length === this.options.velocitySampleLength) {\n      this._positionHistory.shift();\n    }\n\n    this._positionHistory.push({\n      position: payload.position.slice ? payload.position.slice(0) : payload.position,\n      time: currTime\n    });\n\n    this._eventOutput.emit('update', payload);\n\n    this._prevCoord = [x, y];\n    this._prevTime = currTime;\n    this._move = true;\n}\n\n/**\n *  Triggered by mouseup on the element or document body if propagation is enabled, or\n *  mouseleave if propagation is off.\n *\n *  @method _handleEnd\n *  @private\n */\nfunction _handleEnd(event) {\n    if (!this._down) return;\n\n    this._eventOutput.emit('end', this._payload);\n    this._prevCoord = undefined;\n    this._prevTime = undefined;\n    this._down = false;\n    this._move = false;\n    this._positionHistory = [];\n}\n\n/**\n *  Switches the mousemove listener to the document body, if propagation is enabled.\n *  @method _handleLeave\n *  @private\n */\nfunction _handleLeave(event) {\n    if (!this._down || !this._move) return;\n\n    if (!this._documentActive) {\n      var boundMove = _handleMove.bind(this);\n      var boundEnd = function(event) {\n          _handleEnd.call(this, event);\n          document.removeEventListener('mousemove', boundMove);\n          document.removeEventListener('mouseup', boundEnd);\n      }.bind(this, event);\n      document.addEventListener('mousemove', boundMove);\n      document.addEventListener('mouseup', boundEnd);\n      this._documentActive = true;\n    }\n}\n\n/**\n * Return entire options dictionary, including defaults.\n *\n * @method getOptions\n * @return {Object} configuration options\n */\nMouseSync.prototype.getOptions = function getOptions() {\n    return this.options;\n};\n\n/**\n * Set internal options, overriding any default options\n *\n * @method setOptions\n *\n * @param [options] {Object}             default options overrides\n * @param [options.direction] {Number}   read from a particular axis\n * @param [options.rails] {Boolean}      read from axis with greatest differential\n * @param [options.propogate] {Boolean}  add listened to document on mouseleave\n */\nMouseSync.prototype.setOptions = function setOptions(options) {\n    return this._optionsManager.setOptions(options);\n};\n\nmodule.exports = MouseSync;\n},{\"../core/EventHandler\":7,\"../core/OptionsManager\":10}],29:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\nvar TwoFingerSync = require('./TwoFingerSync');\nvar OptionsManager = require('../core/OptionsManager');\n\n/**\n * Handles piped in two-finger touch events to change position via pinching / expanding.\n *   Emits 'start', 'update' and 'end' events with\n *   position, velocity, touch ids, and distance between fingers.\n *\n * @class PinchSync\n * @extends TwoFingerSync\n * @constructor\n * @param {Object} options default options overrides\n * @param {Number} [options.scale] scale velocity by this factor\n */\nfunction PinchSync(options) {\n    TwoFingerSync.call(this);\n\n    this.options = Object.create(PinchSync.DEFAULT_OPTIONS);\n    this._optionsManager = new OptionsManager(this.options);\n    if (options) this.setOptions(options);\n\n    this._displacement = 0;\n    this._previousDistance = 0;\n}\n\nPinchSync.prototype = Object.create(TwoFingerSync.prototype);\nPinchSync.prototype.constructor = PinchSync;\n\nPinchSync.DEFAULT_OPTIONS = {\n    scale : 1\n};\n\nPinchSync.prototype._startUpdate = function _startUpdate(event) {\n    this._previousDistance = TwoFingerSync.calculateDistance(this.posA, this.posB);\n    this._displacement = 0;\n\n    this._eventOutput.emit('start', {\n        count: event.touches.length,\n        touches: [this.touchAId, this.touchBId],\n        distance: this._dist,\n        center: TwoFingerSync.calculateCenter(this.posA, this.posB)\n    });\n};\n\nPinchSync.prototype._moveUpdate = function _moveUpdate(diffTime) {\n    var currDist = TwoFingerSync.calculateDistance(this.posA, this.posB);\n    var center = TwoFingerSync.calculateCenter(this.posA, this.posB);\n\n    var scale = this.options.scale;\n    var delta = scale * (currDist - this._previousDistance);\n    var velocity = delta / diffTime;\n\n    this._previousDistance = currDist;\n    this._displacement += delta;\n\n    this._eventOutput.emit('update', {\n        delta : delta,\n        velocity: velocity,\n        distance: currDist,\n        displacement: this._displacement,\n        center: center,\n        touches: [this.touchAId, this.touchBId]\n    });\n};\n\n/**\n * Return entire options dictionary, including defaults.\n *\n * @method getOptions\n * @return {Object} configuration options\n */\nPinchSync.prototype.getOptions = function getOptions() {\n    return this.options;\n};\n\n/**\n * Set internal options, overriding any default options\n *\n * @method setOptions\n *\n * @param {Object} [options] overrides of default options\n * @param {Number} [options.scale] scale velocity by this factor\n */\nPinchSync.prototype.setOptions = function setOptions(options) {\n    return this._optionsManager.setOptions(options);\n};\n\nmodule.exports = PinchSync;\n},{\"../core/OptionsManager\":10,\"./TwoFingerSync\":35}],30:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\nvar TwoFingerSync = require('./TwoFingerSync');\nvar OptionsManager = require('../core/OptionsManager');\n\n/**\n * Handles piped in two-finger touch events to increase or decrease scale via pinching / expanding.\n *   Emits 'start', 'update' and 'end' events an object with position, velocity, touch ids, and angle.\n *   Useful for determining a rotation factor from initial two-finger touch.\n *\n * @class RotateSync\n * @extends TwoFingerSync\n * @constructor\n * @param {Object} options default options overrides\n * @param {Number} [options.scale] scale velocity by this factor\n */\nfunction RotateSync(options) {\n    TwoFingerSync.call(this);\n\n    this.options = Object.create(RotateSync.DEFAULT_OPTIONS);\n    this._optionsManager = new OptionsManager(this.options);\n    if (options) this.setOptions(options);\n\n    this._angle = 0;\n    this._previousAngle = 0;\n}\n\nRotateSync.prototype = Object.create(TwoFingerSync.prototype);\nRotateSync.prototype.constructor = RotateSync;\n\nRotateSync.DEFAULT_OPTIONS = {\n    scale : 1\n};\n\nRotateSync.prototype._startUpdate = function _startUpdate(event) {\n    this._angle = 0;\n    this._previousAngle = TwoFingerSync.calculateAngle(this.posA, this.posB);\n    var center = TwoFingerSync.calculateCenter(this.posA, this.posB);\n    this._eventOutput.emit('start', {\n        count: event.touches.length,\n        angle: this._angle,\n        center: center,\n        touches: [this.touchAId, this.touchBId]\n    });\n};\n\nRotateSync.prototype._moveUpdate = function _moveUpdate(diffTime) {\n    var scale = this.options.scale;\n\n    var currAngle = TwoFingerSync.calculateAngle(this.posA, this.posB);\n    var center = TwoFingerSync.calculateCenter(this.posA, this.posB);\n\n    var diffTheta = scale * (currAngle - this._previousAngle);\n    var velTheta = diffTheta / diffTime;\n\n    this._angle += diffTheta;\n\n    this._eventOutput.emit('update', {\n        delta : diffTheta,\n        velocity: velTheta,\n        angle: this._angle,\n        center: center,\n        touches: [this.touchAId, this.touchBId]\n    });\n\n    this._previousAngle = currAngle;\n};\n\n/**\n * Return entire options dictionary, including defaults.\n *\n * @method getOptions\n * @return {Object} configuration options\n */\nRotateSync.prototype.getOptions = function getOptions() {\n    return this.options;\n};\n\n/**\n * Set internal options, overriding any default options\n *\n * @method setOptions\n *\n * @param {Object} [options] overrides of default options\n * @param {Number} [options.scale] scale velocity by this factor\n */\nRotateSync.prototype.setOptions = function setOptions(options) {\n    return this._optionsManager.setOptions(options);\n};\n\nmodule.exports = RotateSync;\n},{\"../core/OptionsManager\":10,\"./TwoFingerSync\":35}],31:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\nvar TwoFingerSync = require('./TwoFingerSync');\nvar OptionsManager = require('../core/OptionsManager');\n\n/**\n * Handles piped in two-finger touch events to increase or decrease scale via pinching / expanding.\n *   Emits 'start', 'update' and 'end' events an object with position, velocity, touch ids, distance, and scale factor.\n *   Useful for determining a scaling factor from initial two-finger touch.\n *\n * @class ScaleSync\n * @extends TwoFingerSync\n * @constructor\n * @param {Object} options default options overrides\n * @param {Number} [options.scale] scale velocity by this factor\n */\nfunction ScaleSync(options) {\n    TwoFingerSync.call(this);\n\n    this.options = Object.create(ScaleSync.DEFAULT_OPTIONS);\n    this._optionsManager = new OptionsManager(this.options);\n    if (options) this.setOptions(options);\n\n    this._scaleFactor = 1;\n    this._startDist = 0;\n    this._eventInput.on('pipe', _reset.bind(this));\n}\n\nScaleSync.prototype = Object.create(TwoFingerSync.prototype);\nScaleSync.prototype.constructor = ScaleSync;\n\nScaleSync.DEFAULT_OPTIONS = {\n    scale : 1\n};\n\nfunction _reset() {\n    this.touchAId = undefined;\n    this.touchBId = undefined;\n}\n\n// handles initial touch of two fingers\nScaleSync.prototype._startUpdate = function _startUpdate(event) {\n    this._scaleFactor = 1;\n    this._startDist = TwoFingerSync.calculateDistance(this.posA, this.posB);\n    this._eventOutput.emit('start', {\n        count: event.touches.length,\n        touches: [this.touchAId, this.touchBId],\n        distance: this._startDist,\n        center: TwoFingerSync.calculateCenter(this.posA, this.posB)\n    });\n};\n\n// handles movement of two fingers\nScaleSync.prototype._moveUpdate = function _moveUpdate(diffTime) {\n    var scale = this.options.scale;\n\n    var currDist = TwoFingerSync.calculateDistance(this.posA, this.posB);\n    var center = TwoFingerSync.calculateCenter(this.posA, this.posB);\n\n    var delta = (currDist - this._startDist) / this._startDist;\n    var newScaleFactor = Math.max(1 + scale * delta, 0);\n    var veloScale = (newScaleFactor - this._scaleFactor) / diffTime;\n\n    this._eventOutput.emit('update', {\n        delta : delta,\n        scale: newScaleFactor,\n        velocity: veloScale,\n        distance: currDist,\n        center : center,\n        touches: [this.touchAId, this.touchBId]\n    });\n\n    this._scaleFactor = newScaleFactor;\n};\n\n/**\n * Return entire options dictionary, including defaults.\n *\n * @method getOptions\n * @return {Object} configuration options\n */\nScaleSync.prototype.getOptions = function getOptions() {\n    return this.options;\n};\n\n/**\n * Set internal options, overriding any default options\n *\n * @method setOptions\n *\n * @param {Object} [options] overrides of default options\n * @param {Number} [options.scale] scale velocity by this factor\n */\nScaleSync.prototype.setOptions = function setOptions(options) {\n    return this._optionsManager.setOptions(options);\n};\n\nmodule.exports = ScaleSync;\n},{\"../core/OptionsManager\":10,\"./TwoFingerSync\":35}],32:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\nvar EventHandler = require('../core/EventHandler');\nvar Engine = require('../core/Engine');\nvar OptionsManager = require('../core/OptionsManager');\n\n/**\n * Handles piped in mousewheel events.\n *   Emits 'start', 'update', and 'end' events with payloads including:\n *   delta: change since last position,\n *   position: accumulated deltas,\n *   velocity: speed of change in pixels per ms,\n *   slip: true (unused).\n *\n *   Can be used as delegate of GenericSync.\n *\n * @class ScrollSync\n * @constructor\n * @param {Object} [options] overrides of default options\n * @param {Number} [options.direction] Pay attention to x changes (ScrollSync.DIRECTION_X),\n *   y changes (ScrollSync.DIRECTION_Y) or both (undefined)\n * @param {Number} [options.minimumEndSpeed] End speed calculation floors at this number, in pixels per ms\n * @param {boolean} [options.rails] whether to snap position calculations to nearest axis\n * @param {Number | Array.Number} [options.scale] scale outputs in by scalar or pair of scalars\n * @param {Number} [options.stallTime] reset time for velocity calculation in ms\n */\nfunction ScrollSync(options) {\n    this.options = Object.create(ScrollSync.DEFAULT_OPTIONS);\n    this._optionsManager = new OptionsManager(this.options);\n    if (options) this.setOptions(options);\n\n    this._payload = {\n        delta    : null,\n        position : null,\n        velocity : null,\n        slip     : true\n    };\n\n    this._eventInput = new EventHandler();\n    this._eventOutput = new EventHandler();\n\n    EventHandler.setInputHandler(this, this._eventInput);\n    EventHandler.setOutputHandler(this, this._eventOutput);\n\n    this._position = (this.options.direction === undefined) ? [0,0] : 0;\n    this._prevTime = undefined;\n    this._prevVel = undefined;\n    this._eventInput.on('mousewheel', _handleMove.bind(this));\n    this._eventInput.on('wheel', _handleMove.bind(this));\n    this._inProgress = false;\n    this._loopBound = false;\n}\n\nScrollSync.DEFAULT_OPTIONS = {\n    direction: undefined,\n    minimumEndSpeed: Infinity,\n    rails: false,\n    scale: 1,\n    stallTime: 50,\n    lineHeight: 40,\n    preventDefault: true\n};\n\nScrollSync.DIRECTION_X = 0;\nScrollSync.DIRECTION_Y = 1;\n\nvar MINIMUM_TICK_TIME = 8;\n\nvar _now = Date.now;\n\nfunction _newFrame() {\n    if (this._inProgress && (_now() - this._prevTime) > this.options.stallTime) {\n        this._inProgress = false;\n\n        var finalVel = (Math.abs(this._prevVel) >= this.options.minimumEndSpeed)\n            ? this._prevVel\n            : 0;\n\n        var payload = this._payload;\n        payload.position = this._position;\n        payload.velocity = finalVel;\n        payload.slip = true;\n\n        this._eventOutput.emit('end', payload);\n    }\n}\n\nfunction _handleMove(event) {\n    if (this.options.preventDefault) event.preventDefault();\n\n    if (!this._inProgress) {\n        this._inProgress = true;\n        this._position = (this.options.direction === undefined) ? [0,0] : 0;\n        payload = this._payload;\n        payload.slip = true;\n        payload.position = this._position;\n        payload.clientX = event.clientX;\n        payload.clientY = event.clientY;\n        payload.offsetX = event.offsetX;\n        payload.offsetY = event.offsetY;\n        this._eventOutput.emit('start', payload);\n        if (!this._loopBound) {\n            Engine.on('prerender', _newFrame.bind(this));\n            this._loopBound = true;\n        }\n    }\n\n    var currTime = _now();\n    var prevTime = this._prevTime || currTime;\n\n    var diffX = (event.wheelDeltaX !== undefined) ? event.wheelDeltaX : -event.deltaX;\n    var diffY = (event.wheelDeltaY !== undefined) ? event.wheelDeltaY : -event.deltaY;\n\n    if (event.deltaMode === 1) { // units in lines, not pixels\n        diffX *= this.options.lineHeight;\n        diffY *= this.options.lineHeight;\n    }\n\n    if (this.options.rails) {\n        if (Math.abs(diffX) > Math.abs(diffY)) diffY = 0;\n        else diffX = 0;\n    }\n\n    var diffTime = Math.max(currTime - prevTime, MINIMUM_TICK_TIME); // minimum tick time\n\n    var velX = diffX / diffTime;\n    var velY = diffY / diffTime;\n\n    var scale = this.options.scale;\n    var nextVel;\n    var nextDelta;\n\n    if (this.options.direction === ScrollSync.DIRECTION_X) {\n        nextDelta = scale * diffX;\n        nextVel = scale * velX;\n        this._position += nextDelta;\n    }\n    else if (this.options.direction === ScrollSync.DIRECTION_Y) {\n        nextDelta = scale * diffY;\n        nextVel = scale * velY;\n        this._position += nextDelta;\n    }\n    else {\n        nextDelta = [scale * diffX, scale * diffY];\n        nextVel = [scale * velX, scale * velY];\n        this._position[0] += nextDelta[0];\n        this._position[1] += nextDelta[1];\n    }\n\n    var payload = this._payload;\n    payload.delta    = nextDelta;\n    payload.velocity = nextVel;\n    payload.position = this._position;\n    payload.slip     = true;\n\n    this._eventOutput.emit('update', payload);\n\n    this._prevTime = currTime;\n    this._prevVel = nextVel;\n}\n\n/**\n * Return entire options dictionary, including defaults.\n *\n * @method getOptions\n * @return {Object} configuration options\n */\nScrollSync.prototype.getOptions = function getOptions() {\n    return this.options;\n};\n\n/**\n * Set internal options, overriding any default options\n *\n * @method setOptions\n *\n * @param {Object} [options] overrides of default options\n * @param {Number} [options.minimimEndSpeed] If final velocity smaller than this, round down to 0.\n * @param {Number} [options.stallTime] ms of non-motion before 'end' emitted\n * @param {Number} [options.rails] whether to constrain to nearest axis.\n * @param {Number} [options.direction] ScrollSync.DIRECTION_X, DIRECTION_Y -\n *    pay attention to one specific direction.\n * @param {Number} [options.scale] constant factor to scale velocity output\n */\nScrollSync.prototype.setOptions = function setOptions(options) {\n    return this._optionsManager.setOptions(options);\n};\n\nmodule.exports = ScrollSync;\n},{\"../core/Engine\":4,\"../core/EventHandler\":7,\"../core/OptionsManager\":10}],33:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\nvar TouchTracker = require('./TouchTracker');\nvar EventHandler = require('../core/EventHandler');\nvar OptionsManager = require('../core/OptionsManager');\n\n/**\n * Handles piped in touch events. Emits 'start', 'update', and 'events'\n *   events with delta, position, velocity, acceleration, clientX, clientY, count, and touch id.\n *   Useful for dealing with inputs on touch devices. Designed to be used either as standalone, or\n *   included in a GenericSync.\n *\n * @class TouchSync\n * @constructor\n *\n * @example\n *   var Surface = require('../core/Surface');\n *   var TouchSync = require('../inputs/TouchSync');\n *\n *   var surface = new Surface({ size: [100, 100] });\n *   var touchSync = new TouchSync();\n *   surface.pipe(touchSync);\n *\n *   touchSync.on('start', function (e) { // react to start });\n *   touchSync.on('update', function (e) { // react to update });\n *   touchSync.on('end', function (e) { // react to end });*\n *\n * @param [options] {Object}             default options overrides\n * @param [options.direction] {Number}   read from a particular axis\n * @param [options.rails] {Boolean}      read from axis with greatest differential\n * @param [options.velocitySampleLength] {Number}  Number of previous frames to check velocity against.\n * @param [options.scale] {Number}       constant factor to scale velocity output\n * @param [options.touchLimit] {Number}  touchLimit upper bound for emitting events based on number of touches\n */\nfunction TouchSync(options) {\n    this.options =  Object.create(TouchSync.DEFAULT_OPTIONS);\n    this._optionsManager = new OptionsManager(this.options);\n    if (options) this.setOptions(options);\n\n    this._eventOutput = new EventHandler();\n    this._touchTracker = new TouchTracker({\n        touchLimit: this.options.touchLimit\n    });\n\n    EventHandler.setOutputHandler(this, this._eventOutput);\n    EventHandler.setInputHandler(this, this._touchTracker);\n\n    this._touchTracker.on('trackstart', _handleStart.bind(this));\n    this._touchTracker.on('trackmove', _handleMove.bind(this));\n    this._touchTracker.on('trackend', _handleEnd.bind(this));\n\n    this._payload = {\n        delta    : null,\n        position : null,\n        velocity : null,\n        clientX  : undefined,\n        clientY  : undefined,\n        count    : 0,\n        touch    : undefined\n    };\n\n    this._position = null; // to be deprecated\n}\n\nTouchSync.DEFAULT_OPTIONS = {\n    direction: undefined,\n    rails: false,\n    touchLimit: 1,\n    velocitySampleLength: 10,\n    scale: 1\n};\n\nTouchSync.DIRECTION_X = 0;\nTouchSync.DIRECTION_Y = 1;\n\nvar MINIMUM_TICK_TIME = 8;\n\n/**\n *  Triggered by trackstart.\n *  @method _handleStart\n *  @private\n */\nfunction _handleStart(data) {\n    var velocity;\n    var delta;\n    if (this.options.direction !== undefined){\n        this._position = 0;\n        velocity = 0;\n        delta = 0;\n    }\n    else {\n        this._position = [0, 0];\n        velocity = [0, 0];\n        delta = [0, 0];\n    }\n\n    var payload = this._payload;\n    payload.delta = delta;\n    payload.position = this._position;\n    payload.velocity = velocity;\n    payload.clientX = data.x;\n    payload.clientY = data.y;\n    payload.count = data.count;\n    payload.touch = data.identifier;\n\n    this._eventOutput.emit('start', payload);\n}\n\n/**\n *  Triggered by trackmove.\n *  @method _handleMove\n *  @private\n */\nfunction _handleMove(data) {\n    var history = data.history;\n\n    var currHistory = history[history.length - 1];\n    var prevHistory = history[history.length - 2];\n\n    var distantHistory = history[history.length - this.options.velocitySampleLength] ?\n      history[history.length - this.options.velocitySampleLength] :\n      history[history.length - 2];\n\n    var distantTime = distantHistory.timestamp;\n    var currTime = currHistory.timestamp;\n\n    var diffX = currHistory.x - prevHistory.x;\n    var diffY = currHistory.y - prevHistory.y;\n\n    var velDiffX = currHistory.x - distantHistory.x;\n    var velDiffY = currHistory.y - distantHistory.y;\n\n    if (this.options.rails) {\n        if (Math.abs(diffX) > Math.abs(diffY)) diffY = 0;\n        else diffX = 0;\n\n        if (Math.abs(velDiffX) > Math.abs(velDiffY)) velDiffY = 0;\n        else velDiffX = 0;\n    }\n\n    var diffTime = Math.max(currTime - distantTime, MINIMUM_TICK_TIME);\n\n    var velX = velDiffX / diffTime;\n    var velY = velDiffY / diffTime;\n\n    var scale = this.options.scale;\n    var nextVel;\n    var nextDelta;\n\n    if (this.options.direction === TouchSync.DIRECTION_X) {\n        nextDelta = scale * diffX;\n        nextVel = scale * velX;\n        this._position += nextDelta;\n    }\n    else if (this.options.direction === TouchSync.DIRECTION_Y) {\n        nextDelta = scale * diffY;\n        nextVel = scale * velY;\n        this._position += nextDelta;\n    }\n    else {\n        nextDelta = [scale * diffX, scale * diffY];\n        nextVel = [scale * velX, scale * velY];\n        this._position[0] += nextDelta[0];\n        this._position[1] += nextDelta[1];\n    }\n\n    var payload = this._payload;\n    payload.delta    = nextDelta;\n    payload.velocity = nextVel;\n    payload.position = this._position;\n    payload.clientX  = data.x;\n    payload.clientY  = data.y;\n    payload.count    = data.count;\n    payload.touch    = data.identifier;\n\n    this._eventOutput.emit('update', payload);\n}\n\n/**\n *  Triggered by trackend.\n *  @method _handleEnd\n *  @private\n */\nfunction _handleEnd(data) {\n    this._payload.count = data.count;\n    this._eventOutput.emit('end', this._payload);\n}\n\n/**\n * Set internal options, overriding any default options\n *\n * @method setOptions\n *\n * @param [options] {Object}             default options overrides\n * @param [options.direction] {Number}   read from a particular axis\n * @param [options.rails] {Boolean}      read from axis with greatest differential\n * @param [options.scale] {Number}       constant factor to scale velocity output\n */\nTouchSync.prototype.setOptions = function setOptions(options) {\n    return this._optionsManager.setOptions(options);\n};\n\n/**\n * Return entire options dictionary, including defaults.\n *\n * @method getOptions\n * @return {Object} configuration options\n */\nTouchSync.prototype.getOptions = function getOptions() {\n    return this.options;\n};\n\nmodule.exports = TouchSync;\n},{\"../core/EventHandler\":7,\"../core/OptionsManager\":10,\"./TouchTracker\":34}],34:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\nvar EventHandler = require('../core/EventHandler');\n\nvar _now = Date.now;\n\nfunction _timestampTouch(touch, event, history) {\n    return {\n        x: touch.clientX,\n        y: touch.clientY,\n        identifier : touch.identifier,\n        origin: event.origin,\n        timestamp: _now(),\n        count: event.touches.length,\n        history: history\n    };\n}\n\nfunction _handleStart(event) {\n    if (event.touches.length > this.touchLimit) return;\n    this.isTouched = true;\n\n    for (var i = 0; i < event.changedTouches.length; i++) {\n        var touch = event.changedTouches[i];\n        var data = _timestampTouch(touch, event, null);\n        this.eventOutput.emit('trackstart', data);\n        if (!this.selective && !this.touchHistory[touch.identifier]) this.track(data);\n    }\n}\n\nfunction _handleMove(event) {\n    if (event.touches.length > this.touchLimit) return;\n\n    for (var i = 0; i < event.changedTouches.length; i++) {\n        var touch = event.changedTouches[i];\n        var history = this.touchHistory[touch.identifier];\n        if (history) {\n            var data = _timestampTouch(touch, event, history);\n            this.touchHistory[touch.identifier].push(data);\n            this.eventOutput.emit('trackmove', data);\n        }\n    }\n}\n\nfunction _handleEnd(event) {\n    if (!this.isTouched) return;\n\n    for (var i = 0; i < event.changedTouches.length; i++) {\n        var touch = event.changedTouches[i];\n        var history = this.touchHistory[touch.identifier];\n        if (history) {\n            var data = _timestampTouch(touch, event, history);\n            this.eventOutput.emit('trackend', data);\n            delete this.touchHistory[touch.identifier];\n        }\n    }\n\n    this.isTouched = false;\n}\n\nfunction _handleUnpipe() {\n    for (var i in this.touchHistory) {\n        var history = this.touchHistory[i];\n        this.eventOutput.emit('trackend', {\n            touch: history[history.length - 1].touch,\n            timestamp: Date.now(),\n            count: 0,\n            history: history\n        });\n        delete this.touchHistory[i];\n    }\n}\n\n/**\n * Helper to TouchSync – tracks piped in touch events, organizes touch\n *   events by ID, and emits track events back to TouchSync.\n *   Emits 'trackstart', 'trackmove', and 'trackend' events upstream.\n *\n * @class TouchTracker\n * @constructor\n * @param {Object} options default options overrides\n * @param [options.selective] {Boolean} selective if false, saves state for each touch\n * @param [options.touchLimit] {Number} touchLimit upper bound for emitting events based on number of touches\n */\nfunction TouchTracker(options) {\n    this.selective = options.selective;\n    this.touchLimit = options.touchLimit || 1;\n\n    this.touchHistory = {};\n\n    this.eventInput = new EventHandler();\n    this.eventOutput = new EventHandler();\n\n    EventHandler.setInputHandler(this, this.eventInput);\n    EventHandler.setOutputHandler(this, this.eventOutput);\n\n    this.eventInput.on('touchstart', _handleStart.bind(this));\n    this.eventInput.on('touchmove', _handleMove.bind(this));\n    this.eventInput.on('touchend', _handleEnd.bind(this));\n    this.eventInput.on('touchcancel', _handleEnd.bind(this));\n    this.eventInput.on('unpipe', _handleUnpipe.bind(this));\n\n    this.isTouched = false;\n}\n\n/**\n * Record touch data, if selective is false.\n * @private\n * @method track\n * @param {Object} data touch data\n */\nTouchTracker.prototype.track = function track(data) {\n    this.touchHistory[data.identifier] = [data];\n};\n\nmodule.exports = TouchTracker;\n},{\"../core/EventHandler\":7}],35:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\nvar EventHandler = require('../core/EventHandler');\n\n/**\n * Helper to PinchSync, RotateSync, and ScaleSync.  Generalized handling of\n *   two-finger touch events.\n *   This class is meant to be overridden and not used directly.\n *\n * @class TwoFingerSync\n * @constructor\n */\nfunction TwoFingerSync() {\n    this._eventInput = new EventHandler();\n    this._eventOutput = new EventHandler();\n\n    EventHandler.setInputHandler(this, this._eventInput);\n    EventHandler.setOutputHandler(this, this._eventOutput);\n\n    this.touchAEnabled = false;\n    this.touchAId = 0;\n    this.posA = null;\n    this.timestampA = 0;\n    this.touchBEnabled = false;\n    this.touchBId = 0;\n    this.posB = null;\n    this.timestampB = 0;\n\n    this._eventInput.on('touchstart', this.handleStart.bind(this));\n    this._eventInput.on('touchmove', this.handleMove.bind(this));\n    this._eventInput.on('touchend', this.handleEnd.bind(this));\n    this._eventInput.on('touchcancel', this.handleEnd.bind(this));\n}\n\nTwoFingerSync.calculateAngle = function(posA, posB) {\n    var diffX = posB[0] - posA[0];\n    var diffY = posB[1] - posA[1];\n    return Math.atan2(diffY, diffX);\n};\n\nTwoFingerSync.calculateDistance = function(posA, posB) {\n    var diffX = posB[0] - posA[0];\n    var diffY = posB[1] - posA[1];\n    return Math.sqrt(diffX * diffX + diffY * diffY);\n};\n\nTwoFingerSync.calculateCenter = function(posA, posB) {\n    return [(posA[0] + posB[0]) / 2.0, (posA[1] + posB[1]) / 2.0];\n};\n\nvar _now = Date.now;\n\n// private\nTwoFingerSync.prototype.handleStart = function handleStart(event) {\n    for (var i = 0; i < event.changedTouches.length; i++) {\n        var touch = event.changedTouches[i];\n        if (!this.touchAEnabled) {\n            this.touchAId = touch.identifier;\n            this.touchAEnabled = true;\n            this.posA = [touch.pageX, touch.pageY];\n            this.timestampA = _now();\n        }\n        else if (!this.touchBEnabled) {\n            this.touchBId = touch.identifier;\n            this.touchBEnabled = true;\n            this.posB = [touch.pageX, touch.pageY];\n            this.timestampB = _now();\n            this._startUpdate(event);\n        }\n    }\n};\n\n// private\nTwoFingerSync.prototype.handleMove = function handleMove(event) {\n    if (!(this.touchAEnabled && this.touchBEnabled)) return;\n    var prevTimeA = this.timestampA;\n    var prevTimeB = this.timestampB;\n    var diffTime;\n    for (var i = 0; i < event.changedTouches.length; i++) {\n        var touch = event.changedTouches[i];\n        if (touch.identifier === this.touchAId) {\n            this.posA = [touch.pageX, touch.pageY];\n            this.timestampA = _now();\n            diffTime = this.timestampA - prevTimeA;\n        }\n        else if (touch.identifier === this.touchBId) {\n            this.posB = [touch.pageX, touch.pageY];\n            this.timestampB = _now();\n            diffTime = this.timestampB - prevTimeB;\n        }\n    }\n    if (diffTime) this._moveUpdate(diffTime);\n};\n\n// private\nTwoFingerSync.prototype.handleEnd = function handleEnd(event) {\n    for (var i = 0; i < event.changedTouches.length; i++) {\n        var touch = event.changedTouches[i];\n        if (touch.identifier === this.touchAId || touch.identifier === this.touchBId) {\n            if (this.touchAEnabled && this.touchBEnabled) {\n                this._eventOutput.emit('end', {\n                    touches : [this.touchAId, this.touchBId],\n                    angle   : this._angle\n                });\n            }\n            this.touchAEnabled = false;\n            this.touchAId = 0;\n            this.touchBEnabled = false;\n            this.touchBId = 0;\n        }\n    }\n};\n\nmodule.exports = TwoFingerSync;\n},{\"../core/EventHandler\":7}],36:[function(require,module,exports){\nmodule.exports = {\n  Accumulator: require('./Accumulator'),\n  DesktopEmulationMode: require('./DesktopEmulationMode'),\n  FastClick: require('./FastClick'),\n  GenericSync: require('./GenericSync'),\n  MouseSync: require('./MouseSync'),\n  PinchSync: require('./PinchSync'),\n  RotateSync: require('./RotateSync'),\n  ScaleSync: require('./ScaleSync'),\n  ScrollSync: require('./ScrollSync'),\n  TouchSync: require('./TouchSync'),\n  TouchTracker: require('./TouchTracker'),\n  TwoFingerSync: require('./TwoFingerSync')\n};\n\n},{\"./Accumulator\":24,\"./DesktopEmulationMode\":25,\"./FastClick\":26,\"./GenericSync\":27,\"./MouseSync\":28,\"./PinchSync\":29,\"./RotateSync\":30,\"./ScaleSync\":31,\"./ScrollSync\":32,\"./TouchSync\":33,\"./TouchTracker\":34,\"./TwoFingerSync\":35}],37:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Vector = require('./Vector');\n\n/**\n * A library for using a 3x3 numerical matrix, represented as a two-level array.\n *\n * @class Matrix\n * @constructor\n *\n * @param {Array.Array} values array of rows\n */\nfunction Matrix(values) {\n    this.values = values ||\n        [\n            [1,0,0],\n            [0,1,0],\n            [0,0,1]\n        ];\n\n    return this;\n}\n\nvar _register = new Matrix();\nvar _vectorRegister = new Vector();\n\n/**\n * Return the values in the matrix as an array of numerical row arrays\n *\n * @method get\n *\n * @return {Array.array} matrix values as array of rows.\n */\nMatrix.prototype.get = function get() {\n    return this.values;\n};\n\n/**\n * Set the nested array of rows in the matrix.\n *\n * @method set\n *\n * @param {Array.array} values matrix values as array of rows.\n */\nMatrix.prototype.set = function set(values) {\n    this.values = values;\n};\n\n/**\n * Take this matrix as A, input vector V as a column vector, and return matrix product (A)(V).\n *   Note: This sets the internal vector register.  Current handles to the vector register\n *   will see values changed.\n *\n * @method vectorMultiply\n *\n * @param {Vector} v input vector V\n * @return {Vector} result of multiplication, as a handle to the internal vector register\n */\nMatrix.prototype.vectorMultiply = function vectorMultiply(v) {\n    var M = this.get();\n    var v0 = v.x;\n    var v1 = v.y;\n    var v2 = v.z;\n\n    var M0 = M[0];\n    var M1 = M[1];\n    var M2 = M[2];\n\n    var M00 = M0[0];\n    var M01 = M0[1];\n    var M02 = M0[2];\n    var M10 = M1[0];\n    var M11 = M1[1];\n    var M12 = M1[2];\n    var M20 = M2[0];\n    var M21 = M2[1];\n    var M22 = M2[2];\n\n    return _vectorRegister.setXYZ(\n        M00*v0 + M01*v1 + M02*v2,\n        M10*v0 + M11*v1 + M12*v2,\n        M20*v0 + M21*v1 + M22*v2\n    );\n};\n\n/**\n * Multiply the provided matrix M2 with this matrix.  Result is (this) * (M2).\n *   Note: This sets the internal matrix register.  Current handles to the register\n *   will see values changed.\n *\n * @method multiply\n *\n * @param {Matrix} M2 input matrix to multiply on the right\n * @return {Matrix} result of multiplication, as a handle to the internal register\n */\nMatrix.prototype.multiply = function multiply(M2) {\n    var M1 = this.get();\n    var result = [[]];\n    for (var i = 0; i < 3; i++) {\n        result[i] = [];\n        for (var j = 0; j < 3; j++) {\n            var sum = 0;\n            for (var k = 0; k < 3; k++) {\n                sum += M1[i][k] * M2[k][j];\n            }\n            result[i][j] = sum;\n        }\n    }\n    return _register.set(result);\n};\n\n/**\n * Creates a Matrix which is the transpose of this matrix.\n *   Note: This sets the internal matrix register.  Current handles to the register\n *   will see values changed.\n *\n * @method transpose\n *\n * @return {Matrix} result of transpose, as a handle to the internal register\n */\nMatrix.prototype.transpose = function transpose() {\n    var result = [];\n    var M = this.get();\n    for (var row = 0; row < 3; row++) {\n        for (var col = 0; col < 3; col++) {\n            result[row][col] = M[col][row];\n        }\n    }\n    return _register.set(result);\n};\n\n/**\n * Clones the matrix\n *\n * @method clone\n * @return {Matrix} New copy of the original matrix\n */\nMatrix.prototype.clone = function clone() {\n    var values = this.get();\n    var M = [];\n    for (var row = 0; row < 3; row++)\n        M[row] = values[row].slice();\n    return new Matrix(M);\n};\n\nmodule.exports = Matrix;\n},{\"./Vector\":41}],38:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Matrix = require('./Matrix');\n\n/**\n * @class Quaternion\n * @constructor\n *\n * @param {Number} w\n * @param {Number} x\n * @param {Number} y\n * @param {Number} z\n */\nfunction Quaternion(w,x,y,z) {\n    if (arguments.length === 1) this.set(w);\n    else {\n        this.w = (w !== undefined) ? w : 1;  //Angle\n        this.x = (x !== undefined) ? x : 0;  //Axis.x\n        this.y = (y !== undefined) ? y : 0;  //Axis.y\n        this.z = (z !== undefined) ? z : 0;  //Axis.z\n    }\n    return this;\n}\n\nvar register = new Quaternion(1,0,0,0);\n\n/**\n * Doc: TODO\n * @method add\n * @param {Quaternion} q\n * @return {Quaternion}\n */\nQuaternion.prototype.add = function add(q) {\n    return register.setWXYZ(\n        this.w + q.w,\n        this.x + q.x,\n        this.y + q.y,\n        this.z + q.z\n    );\n};\n\n/*\n * Docs: TODO\n *\n * @method sub\n * @param {Quaternion} q\n * @return {Quaternion}\n */\nQuaternion.prototype.sub = function sub(q) {\n    return register.setWXYZ(\n        this.w - q.w,\n        this.x - q.x,\n        this.y - q.y,\n        this.z - q.z\n    );\n};\n\n/**\n * Doc: TODO\n *\n * @method scalarDivide\n * @param {Number} s\n * @return {Quaternion}\n */\nQuaternion.prototype.scalarDivide = function scalarDivide(s) {\n    return this.scalarMultiply(1/s);\n};\n\n/*\n * Docs: TODO\n *\n * @method scalarMultiply\n * @param {Number} s\n * @return {Quaternion}\n */\nQuaternion.prototype.scalarMultiply = function scalarMultiply(s) {\n    return register.setWXYZ(\n        this.w * s,\n        this.x * s,\n        this.y * s,\n        this.z * s\n    );\n};\n\n/*\n * Docs: TODO\n *\n * @method multiply\n * @param {Quaternion} q\n * @return {Quaternion}\n */\nQuaternion.prototype.multiply = function multiply(q) {\n    //left-handed coordinate system multiplication\n    var x1 = this.x;\n    var y1 = this.y;\n    var z1 = this.z;\n    var w1 = this.w;\n    var x2 = q.x;\n    var y2 = q.y;\n    var z2 = q.z;\n    var w2 = q.w || 0;\n\n    return register.setWXYZ(\n        w1*w2 - x1*x2 - y1*y2 - z1*z2,\n        x1*w2 + x2*w1 + y2*z1 - y1*z2,\n        y1*w2 + y2*w1 + x1*z2 - x2*z1,\n        z1*w2 + z2*w1 + x2*y1 - x1*y2\n    );\n};\n\nvar conj = new Quaternion(1,0,0,0);\n\n/*\n * Docs: TODO\n *\n * @method rotateVector\n * @param {Vector} v\n * @return {Quaternion}\n */\nQuaternion.prototype.rotateVector = function rotateVector(v) {\n    conj.set(this.conj());\n    return register.set(this.multiply(v).multiply(conj));\n};\n\n/*\n * Docs: TODO\n *\n * @method inverse\n * @return {Quaternion}\n */\nQuaternion.prototype.inverse = function inverse() {\n    return register.set(this.conj().scalarDivide(this.normSquared()));\n};\n\n/*\n * Docs: TODO\n *\n * @method negate\n * @return {Quaternion}\n */\nQuaternion.prototype.negate = function negate() {\n    return this.scalarMultiply(-1);\n};\n\n/*\n * Docs: TODO\n *\n * @method conj\n * @return {Quaternion}\n */\nQuaternion.prototype.conj = function conj() {\n    return register.setWXYZ(\n         this.w,\n        -this.x,\n        -this.y,\n        -this.z\n    );\n};\n\n/*\n * Docs: TODO\n *\n * @method normalize\n * @param {Number} length\n * @return {Quaternion}\n */\nQuaternion.prototype.normalize = function normalize(length) {\n    length = (length === undefined) ? 1 : length;\n    return this.scalarDivide(length * this.norm());\n};\n\n/*\n * Docs: TODO\n *\n * @method makeFromAngleAndAxis\n * @param {Number} angle\n * @param {Vector} v\n * @return {Quaternion}\n */\nQuaternion.prototype.makeFromAngleAndAxis = function makeFromAngleAndAxis(angle, v) {\n    //left handed quaternion creation: theta -> -theta\n    var n  = v.normalize();\n    var ha = angle*0.5;\n    var s  = -Math.sin(ha);\n    this.x = s*n.x;\n    this.y = s*n.y;\n    this.z = s*n.z;\n    this.w = Math.cos(ha);\n    return this;\n};\n\n/*\n * Docs: TODO\n *\n * @method setWXYZ\n * @param {Number} w\n * @param {Number} x\n * @param {Number} y\n * @param {Number} z\n * @return {Quaternion}\n */\nQuaternion.prototype.setWXYZ = function setWXYZ(w,x,y,z) {\n    register.clear();\n    this.w = w;\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n};\n\n/*\n * Docs: TODO\n *\n * @method set\n * @param {Array|Quaternion} v\n * @return {Quaternion}\n */\nQuaternion.prototype.set = function set(v) {\n    if (v instanceof Array) {\n        this.w = 0;\n        this.x = v[0];\n        this.y = v[1];\n        this.z = v[2];\n    }\n    else {\n        this.w = v.w;\n        this.x = v.x;\n        this.y = v.y;\n        this.z = v.z;\n    }\n    if (this !== register) register.clear();\n    return this;\n};\n\n/**\n * Docs: TODO\n *\n * @method put\n * @param {Quaternion} q\n * @return {Quaternion}\n */\nQuaternion.prototype.put = function put(q) {\n    q.set(register);\n};\n\n/**\n * Doc: TODO\n *\n * @method clone\n * @return {Quaternion}\n */\nQuaternion.prototype.clone = function clone() {\n    return new Quaternion(this);\n};\n\n/**\n * Doc: TODO\n *\n * @method clear\n * @return {Quaternion}\n */\nQuaternion.prototype.clear = function clear() {\n    this.w = 1;\n    this.x = 0;\n    this.y = 0;\n    this.z = 0;\n    return this;\n};\n\n/**\n * Doc: TODO\n *\n * @method isEqual\n * @param {Quaternion} q\n * @return {Boolean}\n */\nQuaternion.prototype.isEqual = function isEqual(q) {\n    return q.w === this.w && q.x === this.x && q.y === this.y && q.z === this.z;\n};\n\n/**\n * Doc: TODO\n *\n * @method dot\n * @param {Quaternion} q\n * @return {Number}\n */\nQuaternion.prototype.dot = function dot(q) {\n    return this.w * q.w + this.x * q.x + this.y * q.y + this.z * q.z;\n};\n\n/**\n * Doc: TODO\n *\n * @method normSquared\n * @return {Number}\n */\nQuaternion.prototype.normSquared = function normSquared() {\n    return this.dot(this);\n};\n\n/**\n * Doc: TODO\n *\n * @method norm\n * @return {Number}\n */\nQuaternion.prototype.norm = function norm() {\n    return Math.sqrt(this.normSquared());\n};\n\n/**\n * Doc: TODO\n *\n * @method isZero\n * @return {Boolean}\n */\nQuaternion.prototype.isZero = function isZero() {\n    return !(this.x || this.y || this.z);\n};\n\n/**\n * Doc: TODO\n *\n * @method getTransform\n * @return {Transform}\n */\nQuaternion.prototype.getTransform = function getTransform() {\n    var temp = this.normalize(1);\n    var x = temp.x;\n    var y = temp.y;\n    var z = temp.z;\n    var w = temp.w;\n\n    //LHC system flattened to column major = RHC flattened to row major\n    return [\n        1 - 2*y*y - 2*z*z,\n            2*x*y - 2*z*w,\n            2*x*z + 2*y*w,\n        0,\n            2*x*y + 2*z*w,\n        1 - 2*x*x - 2*z*z,\n            2*y*z - 2*x*w,\n        0,\n            2*x*z - 2*y*w,\n            2*y*z + 2*x*w,\n        1 - 2*x*x - 2*y*y,\n        0,\n        0,\n        0,\n        0,\n        1\n    ];\n};\n\nvar matrixRegister = new Matrix();\n\n/**\n * Doc: TODO\n *\n * @method getMatrix\n * @return {Transform}\n */\nQuaternion.prototype.getMatrix = function getMatrix() {\n    var temp = this.normalize(1);\n    var x = temp.x;\n    var y = temp.y;\n    var z = temp.z;\n    var w = temp.w;\n\n    //LHC system flattened to row major\n    return matrixRegister.set([\n        [\n            1 - 2*y*y - 2*z*z,\n                2*x*y + 2*z*w,\n                2*x*z - 2*y*w\n        ],\n        [\n                2*x*y - 2*z*w,\n            1 - 2*x*x - 2*z*z,\n                2*y*z + 2*x*w\n        ],\n        [\n                2*x*z + 2*y*w,\n                2*y*z - 2*x*w,\n            1 - 2*x*x - 2*y*y\n        ]\n    ]);\n};\n\nvar epsilon = 1e-5;\n\n/**\n * Doc: TODO\n *\n * @method slerp\n * @param {Quaternion} q\n * @param {Number} t\n * @return {Transform}\n */\nQuaternion.prototype.slerp = function slerp(q, t) {\n    var omega;\n    var cosomega;\n    var sinomega;\n    var scaleFrom;\n    var scaleTo;\n\n    cosomega = this.dot(q);\n    if ((1.0 - cosomega) > epsilon) {\n        omega       = Math.acos(cosomega);\n        sinomega    = Math.sin(omega);\n        scaleFrom   = Math.sin((1.0 - t) * omega) / sinomega;\n        scaleTo     = Math.sin(t * omega) / sinomega;\n    }\n    else {\n        scaleFrom   = 1.0 - t;\n        scaleTo     = t;\n    }\n    return register.set(this.scalarMultiply(scaleFrom/scaleTo).add(q).multiply(scaleTo));\n};\n\nmodule.exports = Quaternion;\n},{\"./Matrix\":37}],39:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\n\n\n\nvar RAND = Math.random;\n\nfunction _randomFloat(min,max) {\n    return min + RAND() * (max - min);\n}\n\nfunction _randomInteger(min,max) {\n    return (min + RAND() * (max - min + 1)) >> 0;\n}\n\n/**\n * Very simple uniform random number generator library wrapping Math.random().\n *\n * @class Random\n * @static\n */\nvar Random = {};\n\n/**\n * Get single random integer between min and max (inclusive), or array\n *   of size dim if specified.\n *\n * @method integer\n *\n * @param {Number} min lower bound, default 0\n * @param {Number} max upper bound, default 1\n * @param {Number} dim (optional) dimension of output array, if specified\n * @return {number | array<number>} random integer, or optionally, an array of random integers\n */\nRandom.integer = function integer(min,max,dim) {\n    min = (min !== undefined) ? min : 0;\n    max = (max !== undefined) ? max : 1;\n    if (dim !== undefined) {\n        var result = [];\n        for (var i = 0; i < dim; i++) result.push(_randomInteger(min,max));\n        return result;\n    }\n    else return _randomInteger(min,max);\n};\n\n/**\n * Get single random float between min and max (inclusive), or array\n *   of size dim if specified\n *\n * @method range\n *\n * @param {Number} min lower bound, default 0\n * @param {Number} max upper bound, default 1\n * @param {Number} [dim] dimension of output array, if specified\n * @return {Number} random float, or optionally an array\n */\nRandom.range = function range(min,max,dim) {\n    min = (min !== undefined) ? min : 0;\n    max = (max !== undefined) ? max : 1;\n    if (dim !== undefined) {\n        var result = [];\n        for (var i = 0; i < dim; i++) result.push(_randomFloat(min,max));\n        return result;\n    }\n    else return _randomFloat(min,max);\n};\n\n/**\n * Return random number among the set {-1 ,1}\n *\n * @method sign\n *\n * @param {Number} prob probability of returning 1, default 0.5\n * @return {Number} random sign (-1 or 1)\n */\nRandom.sign = function sign(prob) {\n    prob = (prob !== undefined) ? prob : 0.5;\n    return (RAND() < prob) ? 1 : -1;\n};\n\n/**\n * Return random boolean value, true or false.\n *\n * @method bool\n *\n * @param {Number} prob probability of returning true, default 0.5\n * @return {Boolean} random boolean\n */\nRandom.bool = function bool(prob) {\n    prob = (prob !== undefined) ? prob : 0.5;\n    return RAND() < prob;\n};\n\nmodule.exports = Random;\n},{}],40:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\n\n\n/**\n * A few static methods.\n *\n * @class Utilities\n * @static\n */\nvar Utilities = {};\n\n/**\n * Constrain input to range.\n *\n * @method clamp\n * @param {Number} value input\n * @param {Array.Number} range [min, max]\n * @static\n */\nUtilities.clamp = function clamp(value, range) {\n    return Math.max(Math.min(value, range[1]), range[0]);\n};\n\n/**\n * Euclidean length of numerical array.\n *\n * @method length\n * @param {Array.Number} array array of numbers\n * @static\n */\nUtilities.length = function length(array) {\n    var distanceSquared = 0;\n    for (var i = 0; i < array.length; i++) {\n        distanceSquared += array[i] * array[i];\n    }\n    return Math.sqrt(distanceSquared);\n};\n\nmodule.exports = Utilities;\n},{}],41:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\n\n\n\n/**\n * Three-element floating point vector.\n *\n * @class Vector\n * @constructor\n *\n * @param {number} x x element value\n * @param {number} y y element value\n * @param {number} z z element value\n */\nfunction Vector(x,y,z) {\n    if (arguments.length === 1 && x !== undefined) this.set(x);\n    else {\n        this.x = x || 0;\n        this.y = y || 0;\n        this.z = z || 0;\n    }\n    return this;\n}\n\nvar _register = new Vector(0,0,0);\n\n/**\n * Add this element-wise to another Vector, element-wise.\n *   Note: This sets the internal result register, so other references to that vector will change.\n *\n * @method add\n * @param {Vector} v addend\n * @return {Vector} vector sum\n */\nVector.prototype.add = function add(v) {\n    return _setXYZ.call(_register,\n        this.x + v.x,\n        this.y + v.y,\n        this.z + v.z\n    );\n};\n\n/**\n * Subtract another vector from this vector, element-wise.\n *   Note: This sets the internal result register, so other references to that vector will change.\n *\n * @method sub\n * @param {Vector} v subtrahend\n * @return {Vector} vector difference\n */\nVector.prototype.sub = function sub(v) {\n    return _setXYZ.call(_register,\n        this.x - v.x,\n        this.y - v.y,\n        this.z - v.z\n    );\n};\n\n/**\n * Scale Vector by floating point r.\n *   Note: This sets the internal result register, so other references to that vector will change.\n *\n * @method mult\n *\n * @param {number} r scalar\n * @return {Vector} vector result\n */\nVector.prototype.mult = function mult(r) {\n    return _setXYZ.call(_register,\n        r * this.x,\n        r * this.y,\n        r * this.z\n    );\n};\n\n/**\n * Scale Vector by floating point 1/r.\n *   Note: This sets the internal result register, so other references to that vector will change.\n *\n * @method div\n *\n * @param {number} r scalar\n * @return {Vector} vector result\n */\nVector.prototype.div = function div(r) {\n    return this.mult(1 / r);\n};\n\n/**\n * Given another vector v, return cross product (v)x(this).\n *   Note: This sets the internal result register, so other references to that vector will change.\n *\n * @method cross\n * @param {Vector} v Left Hand Vector\n * @return {Vector} vector result\n */\nVector.prototype.cross = function cross(v) {\n    var x = this.x;\n    var y = this.y;\n    var z = this.z;\n    var vx = v.x;\n    var vy = v.y;\n    var vz = v.z;\n\n    return _setXYZ.call(_register,\n        z * vy - y * vz,\n        x * vz - z * vx,\n        y * vx - x * vy\n    );\n};\n\n/**\n * Component-wise equality test between this and Vector v.\n * @method equals\n * @param {Vector} v vector to compare\n * @return {boolean}\n */\nVector.prototype.equals = function equals(v) {\n    return (v.x === this.x && v.y === this.y && v.z === this.z);\n};\n\n/**\n * Rotate clockwise around x-axis by theta radians.\n *   Note: This sets the internal result register, so other references to that vector will change.\n * @method rotateX\n * @param {number} theta radians\n * @return {Vector} rotated vector\n */\nVector.prototype.rotateX = function rotateX(theta) {\n    var x = this.x;\n    var y = this.y;\n    var z = this.z;\n\n    var cosTheta = Math.cos(theta);\n    var sinTheta = Math.sin(theta);\n\n    return _setXYZ.call(_register,\n        x,\n        y * cosTheta - z * sinTheta,\n        y * sinTheta + z * cosTheta\n    );\n};\n\n/**\n * Rotate clockwise around y-axis by theta radians.\n *   Note: This sets the internal result register, so other references to that vector will change.\n * @method rotateY\n * @param {number} theta radians\n * @return {Vector} rotated vector\n */\nVector.prototype.rotateY = function rotateY(theta) {\n    var x = this.x;\n    var y = this.y;\n    var z = this.z;\n\n    var cosTheta = Math.cos(theta);\n    var sinTheta = Math.sin(theta);\n\n    return _setXYZ.call(_register,\n        z * sinTheta + x * cosTheta,\n        y,\n        z * cosTheta - x * sinTheta\n    );\n};\n\n/**\n * Rotate clockwise around z-axis by theta radians.\n *   Note: This sets the internal result register, so other references to that vector will change.\n * @method rotateZ\n * @param {number} theta radians\n * @return {Vector} rotated vector\n */\nVector.prototype.rotateZ = function rotateZ(theta) {\n    var x = this.x;\n    var y = this.y;\n    var z = this.z;\n\n    var cosTheta = Math.cos(theta);\n    var sinTheta = Math.sin(theta);\n\n    return _setXYZ.call(_register,\n        x * cosTheta - y * sinTheta,\n        x * sinTheta + y * cosTheta,\n        z\n    );\n};\n\n/**\n * Return dot product of this with a second Vector\n * @method dot\n * @param {Vector} v second vector\n * @return {number} dot product\n */\nVector.prototype.dot = function dot(v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n};\n\n/**\n * Return squared length of this vector\n * @method normSquared\n * @return {number} squared length\n */\nVector.prototype.normSquared = function normSquared() {\n    return this.dot(this);\n};\n\n/**\n * Return length of this vector\n * @method norm\n * @return {number} length\n */\nVector.prototype.norm = function norm() {\n    return Math.sqrt(this.normSquared());\n};\n\n/**\n * Scale Vector to specified length.\n *   If length is less than internal tolerance, set vector to [length, 0, 0].\n *   Note: This sets the internal result register, so other references to that vector will change.\n * @method normalize\n *\n * @param {number} length target length, default 1.0\n * @return {Vector}\n */\nVector.prototype.normalize = function normalize(length) {\n    if (arguments.length === 0) length = 1;\n    var norm = this.norm();\n\n    if (norm > 1e-7) return _setFromVector.call(_register, this.mult(length / norm));\n    else return _setXYZ.call(_register, length, 0, 0);\n};\n\n/**\n * Make a separate copy of the Vector.\n *\n * @method clone\n *\n * @return {Vector}\n */\nVector.prototype.clone = function clone() {\n    return new Vector(this);\n};\n\n/**\n * True if and only if every value is 0 (or falsy)\n *\n * @method isZero\n *\n * @return {boolean}\n */\nVector.prototype.isZero = function isZero() {\n    return !(this.x || this.y || this.z);\n};\n\nfunction _setXYZ(x,y,z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n}\n\nfunction _setFromArray(v) {\n    return _setXYZ.call(this,v[0],v[1],v[2] || 0);\n}\n\nfunction _setFromVector(v) {\n    return _setXYZ.call(this, v.x, v.y, v.z);\n}\n\nfunction _setFromNumber(x) {\n    return _setXYZ.call(this,x,0,0);\n}\n\n/**\n * Set this Vector to the values in the provided Array or Vector.\n *\n * @method set\n * @param {object} v array, Vector, or number\n * @return {Vector} this\n */\nVector.prototype.set = function set(v) {\n    if (v instanceof Array) return _setFromArray.call(this, v);\n    if (typeof v === 'number') return _setFromNumber.call(this, v);\n    return _setFromVector.call(this, v);\n};\n\nVector.prototype.setXYZ = function(x,y,z) {\n    return _setXYZ.apply(this, arguments);\n};\n\nVector.prototype.set1D = function(x) {\n    return _setFromNumber.call(this, x);\n};\n\n/**\n * Put result of last internal register calculation in specified output vector.\n *\n * @method put\n * @param {Vector} v destination vector\n * @return {Vector} destination vector\n */\n\nVector.prototype.put = function put(v) {\n    if (this === _register) _setFromVector.call(v, _register);\n    else _setFromVector.call(v, this);\n};\n\n/**\n * Set this vector to [0,0,0]\n *\n * @method clear\n */\nVector.prototype.clear = function clear() {\n    return _setXYZ.call(this,0,0,0);\n};\n\n/**\n * Scale this Vector down to specified \"cap\" length.\n *   If Vector shorter than cap, or cap is Infinity, do nothing.\n *   Note: This sets the internal result register, so other references to that vector will change.\n *\n * @method cap\n * @return {Vector} capped vector\n */\nVector.prototype.cap = function cap(cap) {\n    if (cap === Infinity) return _setFromVector.call(_register, this);\n    var norm = this.norm();\n    if (norm > cap) return _setFromVector.call(_register, this.mult(cap / norm));\n    else return _setFromVector.call(_register, this);\n};\n\n/**\n * Return projection of this Vector onto another.\n *   Note: This sets the internal result register, so other references to that vector will change.\n *\n * @method project\n * @param {Vector} n vector to project upon\n * @return {Vector} projected vector\n */\nVector.prototype.project = function project(n) {\n    return n.mult(this.dot(n));\n};\n\n/**\n * Reflect this Vector across provided vector.\n *   Note: This sets the internal result register, so other references to that vector will change.\n *\n * @method reflectAcross\n * @param {Vector} n vector to reflect across\n * @return {Vector} reflected vector\n */\nVector.prototype.reflectAcross = function reflectAcross(n) {\n    n.normalize().put(n);\n    return _setFromVector(_register, this.sub(this.project(n).mult(2)));\n};\n\n/**\n * Convert Vector to three-element array.\n *\n * @method get\n * @return {array<number>} three-element array\n */\nVector.prototype.get = function get() {\n    return [this.x, this.y, this.z];\n};\n\nVector.prototype.get1D = function() {\n    return this.x;\n};\n\nmodule.exports = Vector;\n},{}],42:[function(require,module,exports){\nmodule.exports = {\n  Matrix: require('./Matrix'),\n  Quaternion: require('./Quaternion'),\n  Random: require('./Random'),\n  Utilities: require('./Utilities'),\n  Vector: require('./Vector')\n};\n\n},{\"./Matrix\":37,\"./Quaternion\":38,\"./Random\":39,\"./Utilities\":40,\"./Vector\":41}],43:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Transform = require('../core/Transform');\nvar Transitionable = require('../transitions/Transitionable');\nvar EventHandler = require('../core/EventHandler');\nvar Utilities = require('../math/Utilities');\nvar GenericSync = require('../inputs/GenericSync');\nvar MouseSync = require('../inputs/MouseSync');\nvar TouchSync = require('../inputs/TouchSync');\nGenericSync.register({'mouse': MouseSync, 'touch': TouchSync});\n\n/**\n * Makes added render nodes responsive to drag beahvior.\n *   Emits events 'start', 'update', 'end'.\n * @class Draggable\n * @constructor\n * @param {Object} [options] options configuration object.\n * @param {Number} [options.snapX] grid width for snapping during drag\n * @param {Number} [options.snapY] grid height for snapping during drag\n * @param {Array.Number} [options.xRange] maxmimum [negative, positive] x displacement from start of drag\n * @param {Array.Number} [options.yRange] maxmimum [negative, positive] y displacement from start of drag\n * @param {Number} [options.scale] one pixel of input motion translates to this many pixels of output drag motion\n * @param {Number} [options.projection] User should set to Draggable._direction.x or\n *    Draggable._direction.y to constrain to one axis.\n *\n */\nfunction Draggable(options) {\n    this.options = Object.create(Draggable.DEFAULT_OPTIONS);\n    if (options) this.setOptions(options);\n\n    this._positionState = new Transitionable([0,0]);\n    this._differential  = [0,0];\n    this._active = true;\n\n    this.sync = new GenericSync(['mouse', 'touch'], {scale : this.options.scale});\n    this.eventOutput = new EventHandler();\n    EventHandler.setInputHandler(this,  this.sync);\n    EventHandler.setOutputHandler(this, this.eventOutput);\n\n    _bindEvents.call(this);\n}\n\n//binary representation of directions for bitwise operations\nvar _direction = {\n    x : 0x01,         //001\n    y : 0x02          //010\n};\n\nDraggable.DIRECTION_X = _direction.x;\nDraggable.DIRECTION_Y = _direction.y;\n\nvar _clamp = Utilities.clamp;\n\nDraggable.DEFAULT_OPTIONS = {\n    projection  : _direction.x | _direction.y,\n    scale       : 1,\n    xRange      : null,\n    yRange      : null,\n    snapX       : 0,\n    snapY       : 0,\n    transition  : {duration : 0}\n};\n\nfunction _mapDifferential(differential) {\n    var opts        = this.options;\n    var projection  = opts.projection;\n    var snapX       = opts.snapX;\n    var snapY       = opts.snapY;\n\n    //axes\n    var tx = (projection & _direction.x) ? differential[0] : 0;\n    var ty = (projection & _direction.y) ? differential[1] : 0;\n\n    //snapping\n    if (snapX > 0) tx -= tx % snapX;\n    if (snapY > 0) ty -= ty % snapY;\n\n    return [tx, ty];\n}\n\nfunction _handleStart() {\n    if (!this._active) return;\n    if (this._positionState.isActive()) this._positionState.halt();\n    this.eventOutput.emit('start', {position : this.getPosition()});\n}\n\nfunction _handleMove(event) {\n    if (!this._active) return;\n\n    var options = this.options;\n    this._differential = event.position;\n    var newDifferential = _mapDifferential.call(this, this._differential);\n\n    //buffer the differential if snapping is set\n    this._differential[0] -= newDifferential[0];\n    this._differential[1] -= newDifferential[1];\n\n    var pos = this.getPosition();\n\n    //modify position, retain reference\n    pos[0] += newDifferential[0];\n    pos[1] += newDifferential[1];\n\n    //handle bounding box\n    if (options.xRange){\n        var xRange = [options.xRange[0] + 0.5 * options.snapX, options.xRange[1] - 0.5 * options.snapX];\n        pos[0] = _clamp(pos[0], xRange);\n    }\n\n    if (options.yRange){\n        var yRange = [options.yRange[0] + 0.5 * options.snapY, options.yRange[1] - 0.5 * options.snapY];\n        pos[1] = _clamp(pos[1], yRange);\n    }\n\n    this.eventOutput.emit('update', {position : pos});\n}\n\nfunction _handleEnd() {\n    if (!this._active) return;\n    this.eventOutput.emit('end', {position : this.getPosition()});\n}\n\nfunction _bindEvents() {\n    this.sync.on('start', _handleStart.bind(this));\n    this.sync.on('update', _handleMove.bind(this));\n    this.sync.on('end', _handleEnd.bind(this));\n}\n\n/**\n * Set internal options, overriding any default options\n *\n * @method setOptions\n *\n * @param {Object} [options] overrides of default options.  See constructor.\n */\nDraggable.prototype.setOptions = function setOptions(options) {\n    var currentOptions = this.options;\n    if (options.projection !== undefined) {\n        var proj = options.projection;\n        this.options.projection = 0;\n        ['x', 'y'].forEach(function(val) {\n            if (proj.indexOf(val) !== -1) currentOptions.projection |= _direction[val];\n        });\n    }\n    if (options.scale  !== undefined) {\n        currentOptions.scale  = options.scale;\n        this.sync.setOptions({\n            scale: options.scale\n        });\n    }\n    if (options.xRange !== undefined) currentOptions.xRange = options.xRange;\n    if (options.yRange !== undefined) currentOptions.yRange = options.yRange;\n    if (options.snapX  !== undefined) currentOptions.snapX  = options.snapX;\n    if (options.snapY  !== undefined) currentOptions.snapY  = options.snapY;\n};\n\n/**\n * Get current delta in position from where this draggable started.\n *\n * @method getPosition\n *\n * @return {array<number>} [x, y] position delta from start.\n */\nDraggable.prototype.getPosition = function getPosition() {\n    return this._positionState.get();\n};\n\n/**\n * Transition the element to the desired relative position via provided transition.\n *  For example, calling this with [0,0] will not change the position.\n *  Callback will be executed on completion.\n *\n * @method setRelativePosition\n *\n * @param {array<number>} position end state to which we interpolate\n * @param {transition} transition transition object specifying how object moves to new position\n * @param {function} callback zero-argument function to call on observed completion\n */\nDraggable.prototype.setRelativePosition = function setRelativePosition(position, transition, callback) {\n    var currPos = this.getPosition();\n    var relativePosition = [currPos[0] + position[0], currPos[1] + position[1]];\n    this.setPosition(relativePosition, transition, callback);\n};\n\n/**\n * Transition the element to the desired absolute position via provided transition.\n *  Callback will be executed on completion.\n *\n * @method setPosition\n *\n * @param {array<number>} position end state to which we interpolate\n * @param {transition} transition transition object specifying how object moves to new position\n * @param {function} callback zero-argument function to call on observed completion\n */\nDraggable.prototype.setPosition = function setPosition(position, transition, callback) {\n    if (this._positionState.isActive()) this._positionState.halt();\n    this._positionState.set(position, transition, callback);\n};\n\n/**\n * Set this draggable to respond to user input.\n *\n * @method activate\n *\n */\nDraggable.prototype.activate = function activate() {\n    this._active = true;\n};\n\n/**\n * Set this draggable to ignore user input.\n *\n * @method deactivate\n *\n */\nDraggable.prototype.deactivate = function deactivate() {\n    this._active = false;\n};\n\n/**\n * Switch the input response stage between active and inactive.\n *\n * @method toggle\n *\n */\nDraggable.prototype.toggle = function toggle() {\n    this._active = !this._active;\n};\n\n/**\n * Return render spec for this Modifier, applying to the provided\n *    target component.  This is similar to render() for Surfaces.\n *\n * @private\n * @method modify\n *\n * @param {Object} target (already rendered) render spec to\n *    which to apply the transform.\n * @return {Object} render spec for this Modifier, including the\n *    provided target\n */\nDraggable.prototype.modify = function modify(target) {\n    var pos = this.getPosition();\n    return {\n        transform: Transform.translate(pos[0], pos[1]),\n        target: target\n    };\n};\n\nmodule.exports = Draggable;\n},{\"../core/EventHandler\":7,\"../core/Transform\":15,\"../inputs/GenericSync\":27,\"../inputs/MouseSync\":28,\"../inputs/TouchSync\":33,\"../math/Utilities\":40,\"../transitions/Transitionable\":88}],44:[function(require,module,exports){\nvar Transitionable = require('../transitions/Transitionable');\nvar OptionsManager = require('../core/OptionsManager');\n\n/**\n * Modifier that allows you to fade the opacity of affected renderables in and out.\n * @class Fader\n * @constructor\n * @param {Object} [options] options configuration object.\n * @param {Boolean} [options.cull=false] Stops returning affected renderables up the tree when they're fully faded when true.\n * @param {Transition} [options.transition=true] The main transition for showing and hiding.\n * @param {Transition} [options.pulseInTransition=true] Controls the transition to a pulsed state when the Fader instance's pulse\n * method is called.\n * @param {Transition} [options.pulseOutTransition=true]Controls the transition back from a pulsed state when the Fader instance's pulse\n * method is called.\n *\n */\nfunction Fader(options, startState) {\n    this.options = Object.create(Fader.DEFAULT_OPTIONS);\n    this._optionsManager = new OptionsManager(this.options);\n\n    if (options) this.setOptions(options);\n\n    if (!startState) startState = 0;\n    this.transitionHelper = new Transitionable(startState);\n}\n\nFader.DEFAULT_OPTIONS = {\n    cull: false,\n    transition: true,\n    pulseInTransition: true,\n    pulseOutTransition: true\n};\n\n/**\n * Set internal options, overriding any default options\n *\n * @method setOptions\n *\n * @param {Object} [options] overrides of default options.  See constructor.\n */\nFader.prototype.setOptions = function setOptions(options) {\n    return this._optionsManager.setOptions(options);\n};\n\n/**\n * Fully displays the Fader instance's associated renderables.\n *\n * @method show\n * @param {Transition} [transition] The transition that coordinates setting to the new state.\n * @param {Function} [callback] A callback that executes once you've transitioned to the fully shown state.\n */\nFader.prototype.show = function show(transition, callback) {\n    transition = transition || this.options.transition;\n    this.set(1, transition, callback);\n};\n\n/**\n * Fully fades the Fader instance's associated renderables.\n *\n * @method hide\n * @param {Transition} [transition] The transition that coordinates setting to the new state.\n * @param {Function} [callback] A callback that executes once you've transitioned to the fully faded state.\n */\nFader.prototype.hide = function hide(transition, callback) {\n    transition = transition || this.options.transition;\n    this.set(0, transition, callback);\n};\n\n/**\n * Manually sets the opacity state of the fader to the passed-in one. Executes with an optional\n * transition and callback.\n *\n * @method set\n * @param {Number} state A number from zero to one: the amount of opacity you want to set to.\n * @param {Transition} [transition] The transition that coordinates setting to the new state.\n * @param {Function} [callback] A callback that executes once you've finished executing the pulse.\n */\nFader.prototype.set = function set(state, transition, callback) {\n    this.halt();\n    this.transitionHelper.set(state, transition, callback);\n};\n\n/**\n * Halt the transition\n *\n * @method halt\n */\nFader.prototype.halt = function halt() {\n    this.transitionHelper.halt();\n};\n\n/**\n * Tells you if your Fader instance is above its visibility threshold.\n *\n * @method isVisible\n * @return {Boolean} Whether or not your Fader instance is visible.\n */\nFader.prototype.isVisible = function isVisible() {\n    return (this.transitionHelper.get() > 0);\n};\n\n/**\n * Return render spec for this Modifier, applying to the provided\n *    target component.  This is similar to render() for Surfaces.\n *\n * @private\n * @method modify\n *\n * @param {Object} target (already rendered) render spec to\n *    which to apply the transform.\n * @return {Object} render spec for this Modifier, including the\n *    provided target\n */\nFader.prototype.modify = function modify(target) {\n    var currOpacity = this.transitionHelper.get();\n    if (this.options.cull && !currOpacity) return undefined;\n    else return {opacity: currOpacity, target: target};\n};\n\nmodule.exports = Fader;\n},{\"../core/OptionsManager\":10,\"../transitions/Transitionable\":88}],45:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\n\n\n\n/**\n * A class to add and remove a chain of modifiers\n *   at a single point in the render tree\n *\n * @class ModifierChain\n * @constructor\n */\nfunction ModifierChain() {\n    this._chain = [];\n    if (arguments.length) this.addModifier.apply(this, arguments);\n}\n\n/**\n * Add a modifier, or comma separated modifiers, to the modifier chain.\n *\n * @method addModifier\n *\n * @param {...Modifier*} varargs args list of Modifiers\n */\nModifierChain.prototype.addModifier = function addModifier(varargs) {\n    Array.prototype.push.apply(this._chain, arguments);\n};\n\n/**\n * Remove a modifier from the modifier chain.\n *\n * @method removeModifier\n *\n * @param {Modifier} modifier\n */\nModifierChain.prototype.removeModifier = function removeModifier(modifier) {\n    var index = this._chain.indexOf(modifier);\n    if (index < 0) return;\n    this._chain.splice(index, 1);\n};\n\n/**\n * Return render spec for this Modifier, applying to the provided\n *    target component.  This is similar to render() for Surfaces.\n *\n * @private\n * @method modify\n *\n * @param {Object} input (already rendered) render spec to\n *    which to apply the transform.\n * @return {Object} render spec for this Modifier, including the\n *    provided target\n */\nModifierChain.prototype.modify = function modify(input) {\n    var chain  = this._chain;\n    var result = input;\n    for (var i = 0; i < chain.length; i++) {\n        result = chain[i].modify(result);\n    }\n    return result;\n};\n\nmodule.exports = ModifierChain;\n},{}],46:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Modifier = require('../core/Modifier');\nvar Transform = require('../core/Transform');\nvar Transitionable = require('../transitions/Transitionable');\nvar TransitionableTransform = require('../transitions/TransitionableTransform');\n\n/**\n *  A collection of visual changes to be\n *    applied to another renderable component, strongly coupled with the state that defines\n *    those changes. This collection includes a\n *    transform matrix, an opacity constant, a size, an origin specifier, and an alignment specifier.\n *    StateModifier objects can be added to any RenderNode or object\n *    capable of displaying renderables.  The StateModifier's children and descendants\n *    are transformed by the amounts specified in the modifier's properties.\n *\n * @class StateModifier\n * @constructor\n * @param {Object} [options] overrides of default options\n * @param {Transform} [options.transform] affine transformation matrix\n * @param {Number} [options.opacity]\n * @param {Array.Number} [options.origin] origin adjustment\n * @param {Array.Number} [options.align] align adjustment\n * @param {Array.Number} [options.size] size to apply to descendants\n * @param {Array.Number} [options.propportions] proportions to apply to descendants\n */\nfunction StateModifier(options) {\n    this._transformState = new TransitionableTransform(Transform.identity);\n    this._opacityState = new Transitionable(1);\n    this._originState = new Transitionable([0, 0]);\n    this._alignState = new Transitionable([0, 0]);\n    this._sizeState = new Transitionable([0, 0]);\n    this._proportionsState = new Transitionable([0, 0]);\n\n    this._modifier = new Modifier({\n        transform: this._transformState,\n        opacity: this._opacityState,\n        origin: null,\n        align: null,\n        size: null,\n        proportions: null\n    });\n\n    this._hasOrigin = false;\n    this._hasAlign = false;\n    this._hasSize = false;\n    this._hasProportions = false;\n\n    if (options) {\n        if (options.transform) this.setTransform(options.transform);\n        if (options.opacity !== undefined) this.setOpacity(options.opacity);\n        if (options.origin) this.setOrigin(options.origin);\n        if (options.align) this.setAlign(options.align);\n        if (options.size) this.setSize(options.size);\n        if (options.proportions) this.setProportions(options.proportions);\n    }\n}\n\n/**\n * Set the transform matrix of this modifier, either statically or\n *   through a provided Transitionable.\n *\n * @method setTransform\n *\n * @param {Transform} transform Transform to transition to.\n * @param {Transitionable} transition object of type {duration: number, curve:\n *    f[0,1] -> [0,1] or name}. If transition is omitted, change will be\n *    instantaneous.\n * @param {Function} [callback] callback to call after transition completes\n * @return {StateModifier} this\n */\nStateModifier.prototype.setTransform = function setTransform(transform, transition, callback) {\n    this._transformState.set(transform, transition, callback);\n    return this;\n};\n\n/**\n * Set the opacity of this modifier, either statically or\n *   through a provided Transitionable.\n *\n * @method setOpacity\n *\n * @param {Number} opacity Opacity value to transition to.\n * @param {Transitionable} transition object of type {duration: number, curve:\n *    f[0,1] -> [0,1] or name}. If transition is omitted, change will be\n *    instantaneous.\n * @param {Function} callback callback to call after transition completes\n * @return {StateModifier} this\n */\nStateModifier.prototype.setOpacity = function setOpacity(opacity, transition, callback) {\n    this._opacityState.set(opacity, transition, callback);\n    return this;\n};\n\n/**\n * Set the origin of this modifier, either statically or\n *   through a provided Transitionable.\n *\n * @method setOrigin\n *\n * @param {Array.Number} origin two element array with values between 0 and 1.\n * @param {Transitionable} transition object of type {duration: number, curve:\n *    f[0,1] -> [0,1] or name}. If transition is omitted, change will be\n *    instantaneous.\n * @param {Function} callback callback to call after transition completes\n * @return {StateModifier} this\n */\nStateModifier.prototype.setOrigin = function setOrigin(origin, transition, callback) {\n    if (origin === null) {\n        if (this._hasOrigin) {\n            this._modifier.originFrom(null);\n            this._hasOrigin = false;\n        }\n        return this;\n    }\n    else if (!this._hasOrigin) {\n        this._hasOrigin = true;\n        this._modifier.originFrom(this._originState);\n    }\n    this._originState.set(origin, transition, callback);\n    return this;\n};\n\n/**\n * Set the alignment of this modifier, either statically or\n *   through a provided Transitionable.\n *\n * @method setAlign\n *\n * @param {Array.Number} align two element array with values between 0 and 1.\n * @param {Transitionable} transition object of type {duration: number, curve:\n *    f[0,1] -> [0,1] or name}. If transition is omitted, change will be\n *    instantaneous.\n * @param {Function} callback callback to call after transition completes\n * @return {StateModifier} this\n */\nStateModifier.prototype.setAlign = function setOrigin(align, transition, callback) {\n    if (align === null) {\n        if (this._hasAlign) {\n            this._modifier.alignFrom(null);\n            this._hasAlign = false;\n        }\n        return this;\n    }\n    else if (!this._hasAlign) {\n        this._hasAlign = true;\n        this._modifier.alignFrom(this._alignState);\n    }\n    this._alignState.set(align, transition, callback);\n    return this;\n};\n\n/**\n * Set the size of this modifier, either statically or\n *   through a provided Transitionable.\n *\n * @method setSize\n *\n * @param {Array.Number} size two element array of [width, height]\n * @param {Transitionable} transition object of type {duration: number, curve:\n *    f[0,1] -> [0,1] or name}. If transition is omitted, change will be\n *    instantaneous.\n * @param {Function} callback callback to call after transition completes\n * @return {StateModifier} this\n */\nStateModifier.prototype.setSize = function setSize(size, transition, callback) {\n    if (size === null) {\n        if (this._hasSize) {\n            this._modifier.sizeFrom(null);\n            this._hasSize = false;\n        }\n        return this;\n    }\n    else if (!this._hasSize) {\n        this._hasSize = true;\n        this._modifier.sizeFrom(this._sizeState);\n    }\n    this._sizeState.set(size, transition, callback);\n    return this;\n};\n\n/**\n * Set the proportions of this modifier, either statically or\n *   through a provided Transitionable.\n *\n * @method setProportions\n *\n * @param {Array.Number} proportions two element array with values between 0 and 1.\n * @param {Transitionable} transition Valid transitionable object\n * @param {Function} callback callback to call after transition completes\n * @return {StateModifier} this\n */\nStateModifier.prototype.setProportions = function setSize(proportions, transition, callback) {\n    if (proportions === null) {\n        if (this._hasProportions) {\n            this._modifier.proportionsFrom(null);\n            this._hasProportions = false;\n        }\n        return this;\n    }\n    else if (!this._hasProportions) {\n        this._hasProportions = true;\n        this._modifier.proportionsFrom(this._proportionsState);\n    }\n    this._proportionsState.set(proportions, transition, callback);\n    return this;\n};\n\n/**\n * Stop the transition.\n *\n * @method halt\n */\nStateModifier.prototype.halt = function halt() {\n    this._transformState.halt();\n    this._opacityState.halt();\n    this._originState.halt();\n    this._alignState.halt();\n    this._sizeState.halt();\n    this._proportionsState.halt();\n};\n\n/**\n * Get the current state of the transform matrix component.\n *\n * @method getTransform\n * @return {Object} transform provider object\n */\nStateModifier.prototype.getTransform = function getTransform() {\n    return this._transformState.get();\n};\n\n/**\n * Get the destination state of the transform component.\n *\n * @method getFinalTransform\n * @return {Transform} transform matrix\n */\nStateModifier.prototype.getFinalTransform = function getFinalTransform() {\n    return this._transformState.getFinal();\n};\n\n/**\n * Get the current state of the opacity component.\n *\n * @method getOpacity\n * @return {Object} opacity provider object\n */\nStateModifier.prototype.getOpacity = function getOpacity() {\n    return this._opacityState.get();\n};\n\n/**\n * Get the current state of the origin component.\n *\n * @method getOrigin\n * @return {Object} origin provider object\n */\nStateModifier.prototype.getOrigin = function getOrigin() {\n    return this._hasOrigin ? this._originState.get() : null;\n};\n\n/**\n * Get the current state of the align component.\n *\n * @method getAlign\n * @return {Object} align provider object\n */\nStateModifier.prototype.getAlign = function getAlign() {\n    return this._hasAlign ? this._alignState.get() : null;\n};\n\n/**\n * Get the current state of the size component.\n *\n * @method getSize\n * @return {Object} size provider object\n */\nStateModifier.prototype.getSize = function getSize() {\n    return this._hasSize ? this._sizeState.get() : null;\n};\n\n/**\n * Get the current state of the propportions component.\n *\n * @method getProportions\n * @return {Object} size provider object\n */\nStateModifier.prototype.getProportions = function getProportions() {\n    return this._hasProportions ? this._proportionsState.get() : null;\n};\n\n/**\n * Return render spec for this StateModifier, applying to the provided\n *    target component.  This is similar to render() for Surfaces.\n *\n * @private\n * @method modify\n *\n * @param {Object} target (already rendered) render spec to\n *    which to apply the transform.\n * @return {Object} render spec for this StateModifier, including the\n *    provided target\n */\nStateModifier.prototype.modify = function modify(target) {\n    return this._modifier.modify(target);\n};\n\nmodule.exports = StateModifier;\n},{\"../core/Modifier\":9,\"../core/Transform\":15,\"../transitions/Transitionable\":88,\"../transitions/TransitionableTransform\":89}],47:[function(require,module,exports){\nmodule.exports = {\n  Draggable: require('./Draggable'),\n  Fader: require('./Fader'),\n  ModifierChain: require('./ModifierChain'),\n  StateModifier: require('./StateModifier')\n};\n\n},{\"./Draggable\":43,\"./Fader\":44,\"./ModifierChain\":45,\"./StateModifier\":46}],48:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\nvar EventHandler = require('../core/EventHandler');\n\n/**\n * The Physics Engine is responsible for mediating bodies with their\n *   interaction with forces and constraints (agents). Specifically, it\n *   is responsible for:\n *\n *   - adding and removing bodies\n *   - updating a body's state over time\n *   - attaching and detaching agents\n *   - sleeping upon equillibrium and waking upon excitation\n *\n * @class PhysicsEngine\n * @constructor\n * @param options {Object} options\n */\nfunction PhysicsEngine(options) {\n    this.options = Object.create(PhysicsEngine.DEFAULT_OPTIONS);\n    if (options) this.setOptions(options);\n\n    this._particles      = [];   //list of managed particles\n    this._bodies         = [];   //list of managed bodies\n    this._agentData      = {};   //hash of managed agent data\n    this._forces         = [];   //list of Ids of agents that are forces\n    this._constraints    = [];   //list of Ids of agents that are constraints\n\n    this._buffer         = 0.0;\n    this._prevTime       = now();\n    this._isSleeping     = false;\n    this._eventHandler   = null;\n    this._currAgentId    = 0;\n    this._hasBodies      = false;\n    this._eventHandler   = null;\n}\n\n/** const */\nvar TIMESTEP = 17;\nvar MIN_TIME_STEP = 1000 / 120;\nvar MAX_TIME_STEP = 17;\n\nvar now = Date.now;\n\n// Catalogue of outputted events\nvar _events = {\n    start : 'start',\n    update : 'update',\n    end : 'end'\n};\n\n/**\n * @property PhysicsEngine.DEFAULT_OPTIONS\n * @type Object\n * @protected\n * @static\n */\nPhysicsEngine.DEFAULT_OPTIONS = {\n\n    /**\n     * The number of iterations the engine takes to resolve constraints\n     * @attribute constraintSteps\n     * @type Number\n     */\n    constraintSteps : 1,\n\n    /**\n     * The energy threshold required for the Physics Engine to update\n     * @attribute sleepTolerance\n     * @type Number\n     */\n    sleepTolerance : 1e-7,\n\n    /**\n     * The maximum velocity magnitude of a physics body\n     *      Range : [0, Infinity]\n     * @attribute velocityCap\n     * @type Number\n     */\n    velocityCap : undefined,\n\n    /**\n     * The maximum angular velocity magnitude of a physics body\n     *      Range : [0, Infinity]\n     * @attribute angularVelocityCap\n     * @type Number\n     */\n    angularVelocityCap : undefined\n};\n\n/**\n * Options setter\n *\n * @method setOptions\n * @param opts {Object}\n */\nPhysicsEngine.prototype.setOptions = function setOptions(opts) {\n    for (var key in opts) if (this.options[key]) this.options[key] = opts[key];\n};\n\n/**\n * Method to add a physics body to the engine. Necessary to update the\n *   body over time.\n *\n * @method addBody\n * @param body {Body}\n * @return body {Body}\n */\nPhysicsEngine.prototype.addBody = function addBody(body) {\n    body._engine = this;\n    if (body.isBody) {\n        this._bodies.push(body);\n        this._hasBodies = true;\n    }\n    else this._particles.push(body);\n    body.on('start', this.wake.bind(this));\n    return body;\n};\n\n/**\n * Remove a body from the engine. Detaches body from all forces and\n *   constraints.\n *\n * TODO: Fix for in loop\n *\n * @method removeBody\n * @param body {Body}\n */\nPhysicsEngine.prototype.removeBody = function removeBody(body) {\n    var array = (body.isBody) ? this._bodies : this._particles;\n    var index = array.indexOf(body);\n    if (index > -1) {\n        for (var agent in this._agentData) this.detachFrom(agent.id, body);\n        array.splice(index,1);\n    }\n    if (this.getBodies().length === 0) this._hasBodies = false;\n};\n\nfunction _mapAgentArray(agent) {\n    if (agent.applyForce)      return this._forces;\n    if (agent.applyConstraint) return this._constraints;\n}\n\nfunction _attachOne(agent, targets, source) {\n    if (targets === undefined) targets = this.getParticlesAndBodies();\n    if (!(targets instanceof Array)) targets = [targets];\n\n    agent.on('change', this.wake.bind(this));\n\n    this._agentData[this._currAgentId] = {\n        agent   : agent,\n        id      : this._currAgentId,\n        targets : targets,\n        source  : source\n    };\n\n    _mapAgentArray.call(this, agent).push(this._currAgentId);\n    return this._currAgentId++;\n}\n\n/**\n * Attaches a force or constraint to a Body. Returns an AgentId of the\n *   attached agent which can be used to detach the agent.\n *\n * @method attach\n * @param agents {Agent|Array.Agent} A force, constraint, or array of them.\n * @param [targets=All] {Body|Array.Body} The Body or Bodies affected by the agent\n * @param [source] {Body} The source of the agent\n * @return AgentId {Number}\n */\nPhysicsEngine.prototype.attach = function attach(agents, targets, source) {\n    this.wake();\n\n    if (agents instanceof Array) {\n        var agentIDs = [];\n        for (var i = 0; i < agents.length; i++)\n            agentIDs[i] = _attachOne.call(this, agents[i], targets, source);\n        return agentIDs;\n    }\n    else return _attachOne.call(this, agents, targets, source);\n};\n\n/**\n * Append a body to the targets of a previously defined physics agent.\n *\n * @method attachTo\n * @param agentID {AgentId} The agentId of a previously defined agent\n * @param target {Body} The Body affected by the agent\n */\nPhysicsEngine.prototype.attachTo = function attachTo(agentID, target) {\n    _getAgentData.call(this, agentID).targets.push(target);\n};\n\n/**\n * Undoes PhysicsEngine.attach. Removes an agent and its associated\n *   effect on its affected Bodies.\n *\n * @method detach\n * @param id {AgentId} The agentId of a previously defined agent\n */\nPhysicsEngine.prototype.detach = function detach(id) {\n    // detach from forces/constraints array\n    var agent = this.getAgent(id);\n    var agentArray = _mapAgentArray.call(this, agent);\n    var index = agentArray.indexOf(id);\n    agentArray.splice(index,1);\n\n    // detach agents array\n    delete this._agentData[id];\n};\n\n/**\n * Remove a single Body from a previously defined agent.\n *\n * @method detach\n * @param id {AgentId} The agentId of a previously defined agent\n * @param target {Body} The body to remove from the agent\n */\nPhysicsEngine.prototype.detachFrom = function detachFrom(id, target) {\n    var boundAgent = _getAgentData.call(this, id);\n    if (boundAgent.source === target) this.detach(id);\n    else {\n        var targets = boundAgent.targets;\n        var index = targets.indexOf(target);\n        if (index > -1) targets.splice(index,1);\n    }\n};\n\n/**\n * A convenience method to give the Physics Engine a clean slate of\n * agents. Preserves all added Body objects.\n *\n * @method detachAll\n */\nPhysicsEngine.prototype.detachAll = function detachAll() {\n    this._agentData     = {};\n    this._forces        = [];\n    this._constraints   = [];\n    this._currAgentId   = 0;\n};\n\nfunction _getAgentData(id) {\n    return this._agentData[id];\n}\n\n/**\n * Returns the corresponding agent given its agentId.\n *\n * @method getAgent\n * @param id {AgentId}\n */\nPhysicsEngine.prototype.getAgent = function getAgent(id) {\n    return _getAgentData.call(this, id).agent;\n};\n\n/**\n * Returns all particles that are currently managed by the Physics Engine.\n *\n * @method getParticles\n * @return particles {Array.Particles}\n */\nPhysicsEngine.prototype.getParticles = function getParticles() {\n    return this._particles;\n};\n\n/**\n * Returns all bodies, except particles, that are currently managed by the Physics Engine.\n *\n * @method getBodies\n * @return bodies {Array.Bodies}\n */\nPhysicsEngine.prototype.getBodies = function getBodies() {\n    return this._bodies;\n};\n\n/**\n * Returns all bodies that are currently managed by the Physics Engine.\n *\n * @method getBodies\n * @return bodies {Array.Bodies}\n */\nPhysicsEngine.prototype.getParticlesAndBodies = function getParticlesAndBodies() {\n    return this.getParticles().concat(this.getBodies());\n};\n\n/**\n * Iterates over every Particle and applies a function whose first\n *   argument is the Particle\n *\n * @method forEachParticle\n * @param fn {Function} Function to iterate over\n * @param [dt] {Number} Delta time\n */\nPhysicsEngine.prototype.forEachParticle = function forEachParticle(fn, dt) {\n    var particles = this.getParticles();\n    for (var index = 0, len = particles.length; index < len; index++)\n        fn.call(this, particles[index], dt);\n};\n\n/**\n * Iterates over every Body that isn't a Particle and applies\n *   a function whose first argument is the Body\n *\n * @method forEachBody\n * @param fn {Function} Function to iterate over\n * @param [dt] {Number} Delta time\n */\nPhysicsEngine.prototype.forEachBody = function forEachBody(fn, dt) {\n    if (!this._hasBodies) return;\n    var bodies = this.getBodies();\n    for (var index = 0, len = bodies.length; index < len; index++)\n        fn.call(this, bodies[index], dt);\n};\n\n/**\n * Iterates over every Body and applies a function whose first\n *   argument is the Body\n *\n * @method forEach\n * @param fn {Function} Function to iterate over\n * @param [dt] {Number} Delta time\n */\nPhysicsEngine.prototype.forEach = function forEach(fn, dt) {\n    this.forEachParticle(fn, dt);\n    this.forEachBody(fn, dt);\n};\n\nfunction _updateForce(index) {\n    var boundAgent = _getAgentData.call(this, this._forces[index]);\n    boundAgent.agent.applyForce(boundAgent.targets, boundAgent.source);\n}\n\nfunction _updateForces() {\n    for (var index = this._forces.length - 1; index > -1; index--)\n        _updateForce.call(this, index);\n}\n\nfunction _updateConstraint(index, dt) {\n    var boundAgent = this._agentData[this._constraints[index]];\n    return boundAgent.agent.applyConstraint(boundAgent.targets, boundAgent.source, dt);\n}\n\nfunction _updateConstraints(dt) {\n    var iteration = 0;\n    while (iteration < this.options.constraintSteps) {\n        for (var index = this._constraints.length - 1; index > -1; index--)\n            _updateConstraint.call(this, index, dt);\n        iteration++;\n    }\n}\n\nfunction _updateVelocities(body, dt) {\n    body.integrateVelocity(dt);\n    if (this.options.velocityCap)\n        body.velocity.cap(this.options.velocityCap).put(body.velocity);\n}\n\nfunction _updateAngularVelocities(body, dt) {\n    body.integrateAngularMomentum(dt);\n    body.updateAngularVelocity();\n    if (this.options.angularVelocityCap)\n        body.angularVelocity.cap(this.options.angularVelocityCap).put(body.angularVelocity);\n}\n\nfunction _updateOrientations(body, dt) {\n    body.integrateOrientation(dt);\n}\n\nfunction _updatePositions(body, dt) {\n    body.integratePosition(dt);\n    body.emit(_events.update, body);\n}\n\nfunction _integrate(dt) {\n    _updateForces.call(this, dt);\n    this.forEach(_updateVelocities, dt);\n    this.forEachBody(_updateAngularVelocities, dt);\n    _updateConstraints.call(this, dt);\n    this.forEachBody(_updateOrientations, dt);\n    this.forEach(_updatePositions, dt);\n}\n\nfunction _getParticlesEnergy() {\n    var energy = 0.0;\n    var particleEnergy = 0.0;\n    this.forEach(function(particle) {\n        particleEnergy = particle.getEnergy();\n        energy += particleEnergy;\n    });\n    return energy;\n}\n\nfunction _getAgentsEnergy() {\n    var energy = 0;\n    for (var id in this._agentData)\n        energy += this.getAgentEnergy(id);\n    return energy;\n}\n\n/**\n * Calculates the potential energy of an agent, like a spring, by its Id\n *\n * @method getAgentEnergy\n * @param agentId {Number} The attached agent Id\n * @return energy {Number}\n */\nPhysicsEngine.prototype.getAgentEnergy = function(agentId) {\n    var agentData = _getAgentData.call(this, agentId);\n    return agentData.agent.getEnergy(agentData.targets, agentData.source);\n};\n\n/**\n * Calculates the kinetic energy of all Body objects and potential energy\n *   of all attached agents.\n *\n * TODO: implement.\n * @method getEnergy\n * @return energy {Number}\n */\nPhysicsEngine.prototype.getEnergy = function getEnergy() {\n    return _getParticlesEnergy.call(this) + _getAgentsEnergy.call(this);\n};\n\n/**\n * Updates all Body objects managed by the physics engine over the\n *   time duration since the last time step was called.\n *\n * @method step\n */\nPhysicsEngine.prototype.step = function step() {\n    if (this.isSleeping()) return;\n\n    //set current frame's time\n    var currTime = now();\n\n    //milliseconds elapsed since last frame\n    var dtFrame = currTime - this._prevTime;\n\n    this._prevTime = currTime;\n\n    if (dtFrame < MIN_TIME_STEP) return;\n    if (dtFrame > MAX_TIME_STEP) dtFrame = MAX_TIME_STEP;\n\n    //robust integration\n//        this._buffer += dtFrame;\n//        while (this._buffer > this._timestep){\n//            _integrate.call(this, this._timestep);\n//            this._buffer -= this._timestep;\n//        };\n//        _integrate.call(this, this._buffer);\n//        this._buffer = 0.0;\n\n    _integrate.call(this, TIMESTEP);\n\n    this.emit(_events.update, this);\n\n    if (this.getEnergy() < this.options.sleepTolerance) this.sleep();\n};\n\n/**\n * Tells whether the Physics Engine is sleeping or awake.\n *\n * @method isSleeping\n * @return {Boolean}\n */\nPhysicsEngine.prototype.isSleeping = function isSleeping() {\n    return this._isSleeping;\n};\n\n/**\n * Tells whether the Physics Engine is sleeping or awake.\n *\n * @method isActive\n * @return {Boolean}\n */\nPhysicsEngine.prototype.isActive = function isSleeping() {\n    return !this._isSleeping;\n};\n\n/**\n * Stops the Physics Engine update loop. Emits an 'end' event.\n *\n * @method sleep\n */\nPhysicsEngine.prototype.sleep = function sleep() {\n    if (this._isSleeping) return;\n    this.forEach(function(body) {\n        body.sleep();\n    });\n    this.emit(_events.end, this);\n    this._isSleeping = true;\n};\n\n/**\n * Restarts the Physics Engine update loop. Emits an 'start' event.\n *\n * @method wake\n */\nPhysicsEngine.prototype.wake = function wake() {\n    if (!this._isSleeping) return;\n    this._prevTime = now();\n    this.emit(_events.start, this);\n    this._isSleeping = false;\n};\n\nPhysicsEngine.prototype.emit = function emit(type, data) {\n    if (this._eventHandler === null) return;\n    this._eventHandler.emit(type, data);\n};\n\nPhysicsEngine.prototype.on = function on(event, fn) {\n    if (this._eventHandler === null) this._eventHandler = new EventHandler();\n    this._eventHandler.on(event, fn);\n};\n\nmodule.exports = PhysicsEngine;\n},{\"../core/EventHandler\":7}],49:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Particle = require('./Particle');\nvar Transform = require('../../core/Transform');\nvar Vector = require('../../math/Vector');\nvar Quaternion = require('../../math/Quaternion');\nvar Matrix = require('../../math/Matrix');\nvar Integrator = require('../integrators/SymplecticEuler');\n\n/**\n * A unit controlled by the physics engine which extends the zero-dimensional\n *   Particle to include geometry. In addition to maintaining the state\n *   of a Particle its state includes orientation, angular velocity\n *   and angular momentum and responds to torque forces.\n *\n * @class Body\n * @extends Particle\n * @constructor\n */\nfunction Body(options) {\n    Particle.call(this, options);\n    options = options || {};\n\n    this.orientation     = new Quaternion();\n    this.angularVelocity = new Vector();\n    this.angularMomentum = new Vector();\n    this.torque          = new Vector();\n\n    if (options.orientation)     this.orientation.set(options.orientation);\n    if (options.angularVelocity) this.angularVelocity.set(options.angularVelocity);\n    if (options.angularMomentum) this.angularMomentum.set(options.angularMomentum);\n    if (options.torque)          this.torque.set(options.torque);\n\n    this.angularVelocity.w = 0;        //quaternify the angular velocity\n    this.setMomentsOfInertia();\n\n    // registers\n    this.pWorld = new Vector();        //placeholder for world space position\n}\n\nBody.DEFAULT_OPTIONS = Particle.DEFAULT_OPTIONS;\nBody.DEFAULT_OPTIONS.orientation = [0, 0, 0, 1];\nBody.DEFAULT_OPTIONS.angularVelocity = [0, 0, 0];\n\nBody.prototype = Object.create(Particle.prototype);\nBody.prototype.constructor = Body;\n\nBody.prototype.isBody = true;\n\nBody.prototype.setMass = function setMass() {\n    Particle.prototype.setMass.apply(this, arguments);\n    this.setMomentsOfInertia();\n};\n\n/**\n * Setter for moment of inertia, which is necessary to give proper\n *   angular inertia depending on the geometry of the body.\n *\n * @method setMomentsOfInertia\n */\nBody.prototype.setMomentsOfInertia = function setMomentsOfInertia() {\n    this.inertia = new Matrix();\n    this.inverseInertia = new Matrix();\n};\n\n/**\n * Update the angular velocity from the angular momentum state.\n *\n * @method updateAngularVelocity\n */\nBody.prototype.updateAngularVelocity = function updateAngularVelocity() {\n    this.angularVelocity.set(this.inverseInertia.vectorMultiply(this.angularMomentum));\n};\n\n/**\n * Determine world coordinates from the local coordinate system. Useful\n *   if the Body has rotated in space.\n *\n * @method toWorldCoordinates\n * @param localPosition {Vector} local coordinate vector\n * @return global coordinate vector {Vector}\n */\nBody.prototype.toWorldCoordinates = function toWorldCoordinates(localPosition) {\n    return this.pWorld.set(this.orientation.rotateVector(localPosition));\n};\n\n/**\n * Calculates the kinetic and intertial energy of a body.\n *\n * @method getEnergy\n * @return energy {Number}\n */\nBody.prototype.getEnergy = function getEnergy() {\n    return Particle.prototype.getEnergy.call(this)\n        + 0.5 * this.inertia.vectorMultiply(this.angularVelocity).dot(this.angularVelocity);\n};\n\n/**\n * Extends Particle.reset to reset orientation, angular velocity\n *   and angular momentum.\n *\n * @method reset\n * @param [p] {Array|Vector} position\n * @param [v] {Array|Vector} velocity\n * @param [q] {Array|Quaternion} orientation\n * @param [L] {Array|Vector} angular momentum\n */\nBody.prototype.reset = function reset(p, v, q, L) {\n    Particle.prototype.reset.call(this, p, v);\n    this.angularVelocity.clear();\n    this.setOrientation(q || [1,0,0,0]);\n    this.setAngularMomentum(L || [0,0,0]);\n};\n\n/**\n * Setter for orientation\n *\n * @method setOrientation\n * @param q {Array|Quaternion} orientation\n */\nBody.prototype.setOrientation = function setOrientation(q) {\n    this.orientation.set(q);\n};\n\n/**\n * Setter for angular velocity\n *\n * @method setAngularVelocity\n * @param w {Array|Vector} angular velocity\n */\nBody.prototype.setAngularVelocity = function setAngularVelocity(w) {\n    this.wake();\n    this.angularVelocity.set(w);\n};\n\n/**\n * Setter for angular momentum\n *\n * @method setAngularMomentum\n * @param L {Array|Vector} angular momentum\n */\nBody.prototype.setAngularMomentum = function setAngularMomentum(L) {\n    this.wake();\n    this.angularMomentum.set(L);\n};\n\n/**\n * Extends Particle.applyForce with an optional argument\n *   to apply the force at an off-centered location, resulting in a torque.\n *\n * @method applyForce\n * @param force {Vector} force\n * @param [location] {Vector} off-center location on the body\n */\nBody.prototype.applyForce = function applyForce(force, location) {\n    Particle.prototype.applyForce.call(this, force);\n    if (location !== undefined) this.applyTorque(location.cross(force));\n};\n\n/**\n * Applied a torque force to a body, inducing a rotation.\n *\n * @method applyTorque\n * @param torque {Vector} torque\n */\nBody.prototype.applyTorque = function applyTorque(torque) {\n    this.wake();\n    this.torque.set(this.torque.add(torque));\n};\n\n/**\n * Extends Particle.getTransform to include a rotational component\n *   derived from the particle's orientation.\n *\n * @method getTransform\n * @return transform {Transform}\n */\nBody.prototype.getTransform = function getTransform() {\n    return Transform.thenMove(\n        this.orientation.getTransform(),\n        Transform.getTranslate(Particle.prototype.getTransform.call(this))\n    );\n};\n\n/**\n * Extends Particle._integrate to also update the rotational states\n *   of the body.\n *\n * @method getTransform\n * @protected\n * @param dt {Number} delta time\n */\nBody.prototype._integrate = function _integrate(dt) {\n    Particle.prototype._integrate.call(this, dt);\n    this.integrateAngularMomentum(dt);\n    this.updateAngularVelocity(dt);\n    this.integrateOrientation(dt);\n};\n\n/**\n * Updates the angular momentum via the its integrator.\n *\n * @method integrateAngularMomentum\n * @param dt {Number} delta time\n */\nBody.prototype.integrateAngularMomentum = function integrateAngularMomentum(dt) {\n    Integrator.integrateAngularMomentum(this, dt);\n};\n\n/**\n * Updates the orientation via the its integrator.\n *\n * @method integrateOrientation\n * @param dt {Number} delta time\n */\nBody.prototype.integrateOrientation = function integrateOrientation(dt) {\n    Integrator.integrateOrientation(this, dt);\n};\n\nmodule.exports = Body;\n},{\"../../core/Transform\":15,\"../../math/Matrix\":37,\"../../math/Quaternion\":38,\"../../math/Vector\":41,\"../integrators/SymplecticEuler\":72,\"./Particle\":51}],50:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Body = require('./Body');\nvar Matrix = require('../../math/Matrix');\n\n/**\n * Implements a circle, or spherical, geometry for a Body with\n * radius.\n *\n * @class Circle\n * @extends Body\n * @constructor\n */\nfunction Circle(options) {\n    options = options || {};\n    this.setRadius(options.radius || 0);\n    Body.call(this, options);\n}\n\nCircle.prototype = Object.create(Body.prototype);\nCircle.prototype.constructor = Circle;\n\n/**\n * Basic setter for radius.\n * @method setRadius\n * @param r {Number} radius\n */\nCircle.prototype.setRadius = function setRadius(r) {\n    this.radius = r;\n    this.size = [2*this.radius, 2*this.radius];\n    this.setMomentsOfInertia();\n};\n\nCircle.prototype.setMomentsOfInertia = function setMomentsOfInertia() {\n    var m = this.mass;\n    var r = this.radius;\n\n    this.inertia = new Matrix([\n        [0.25 * m * r * r, 0, 0],\n        [0, 0.25 * m * r * r, 0],\n        [0, 0, 0.5 * m * r * r]\n    ]);\n\n    this.inverseInertia = new Matrix([\n        [4 / (m * r * r), 0, 0],\n        [0, 4 / (m * r * r), 0],\n        [0, 0, 2 / (m * r * r)]\n    ]);\n};\n\nmodule.exports = Circle;\n},{\"../../math/Matrix\":37,\"./Body\":49}],51:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Vector = require('../../math/Vector');\nvar Transform = require('../../core/Transform');\nvar EventHandler = require('../../core/EventHandler');\nvar Integrator = require('../integrators/SymplecticEuler');\n\n/**\n * A point body that is controlled by the Physics Engine. A particle has\n *   position and velocity states that are updated by the Physics Engine.\n *   Ultimately, a particle is a special type of modifier, and can be added to\n *   the Famo.us Scene Graph like any other modifier.\n *\n * @class Particle\n * @uses EventHandler\n * @extensionfor Body\n *\n * @param [options] {Options}           An object of configurable options.\n * @param [options.position] {Array}    The position of the particle.\n * @param [options.velocity] {Array}    The velocity of the particle.\n * @param [options.mass] {Number}       The mass of the particle.\n */\n function Particle(options) {\n    options = options || {};\n    var defaults = Particle.DEFAULT_OPTIONS;\n\n    // registers\n    this.position = new Vector();\n    this.velocity = new Vector();\n    this.force = new Vector();\n\n    // state variables\n    this._engine = null;\n    this._isSleeping = true;\n    this._eventOutput = null;\n\n    // set scalars\n    this.mass = (options.mass !== undefined)\n        ? options.mass\n        : defaults.mass;\n\n    this.inverseMass = 1 / this.mass;\n\n    // set vectors\n    this.setPosition(options.position || defaults.position);\n    this.setVelocity(options.velocity || defaults.velocity);\n    this.force.set(options.force || [0,0,0]);\n\n    this.transform = Transform.identity.slice();\n\n    // cached _spec\n    this._spec = {\n        size : [true, true],\n        target : {\n            transform : this.transform,\n            origin : [0.5, 0.5],\n            target : null\n        }\n    };\n}\n\nParticle.DEFAULT_OPTIONS = {\n    position : [0, 0, 0],\n    velocity : [0, 0, 0],\n    mass : 1\n};\n\n//Catalogue of outputted events\nvar _events = {\n    start : 'start',\n    update : 'update',\n    end : 'end'\n};\n\n// Cached timing function\nvar now = Date.now;\n\n/**\n * @attribute isBody\n * @type Boolean\n * @static\n */\nParticle.prototype.isBody = false;\n\n/**\n * Determines if particle is active\n *\n * @method isActive\n * @return {Boolean}\n */\nParticle.prototype.isActive = function isActive() {\n    return !this._isSleeping;\n};\n\n/**\n * Stops the particle from updating\n *\n * @method sleep\n */\nParticle.prototype.sleep = function sleep() {\n    if (this._isSleeping) return;\n    this.emit(_events.end, this);\n    this._isSleeping = true;\n};\n\n/**\n * Starts the particle update\n *\n * @method wake\n */\nParticle.prototype.wake = function wake() {\n    if (!this._isSleeping) return;\n    this.emit(_events.start, this);\n    this._isSleeping = false;\n    this._prevTime = now();\n    if (this._engine) this._engine.wake();\n};\n\n/**\n * Basic setter for position\n *\n * @method setPosition\n * @param position {Array|Vector}\n */\nParticle.prototype.setPosition = function setPosition(position) {\n    this.position.set(position);\n};\n\n/**\n * 1-dimensional setter for position\n *\n * @method setPosition1D\n * @param x {Number}\n */\nParticle.prototype.setPosition1D = function setPosition1D(x) {\n    this.position.x = x;\n};\n\n/**\n * Basic getter function for position\n *\n * @method getPosition\n * @return position {Array}\n */\nParticle.prototype.getPosition = function getPosition() {\n    this._engine.step();\n    return this.position.get();\n};\n\n/**\n * 1-dimensional getter for position\n *\n * @method getPosition1D\n * @return value {Number}\n */\nParticle.prototype.getPosition1D = function getPosition1D() {\n    this._engine.step();\n    return this.position.x;\n};\n\n/**\n * Basic setter function for velocity Vector\n *\n * @method setVelocity\n * @function\n */\nParticle.prototype.setVelocity = function setVelocity(velocity) {\n    this.velocity.set(velocity);\n    if (!(velocity[0] === 0 && velocity[1] === 0 && velocity[2] === 0))\n        this.wake();\n};\n\n/**\n * 1-dimensional setter for velocity\n *\n * @method setVelocity1D\n * @param x {Number}\n */\nParticle.prototype.setVelocity1D = function setVelocity1D(x) {\n    this.velocity.x = x;\n    if (x !== 0) this.wake();\n};\n\n/**\n * Basic getter function for velocity Vector\n *\n * @method getVelocity\n * @return velocity {Array}\n */\nParticle.prototype.getVelocity = function getVelocity() {\n    return this.velocity.get();\n};\n\n/**\n * Basic setter function for force Vector\n *\n * @method setForce\n * @return force {Array}\n */\nParticle.prototype.setForce = function setForce(force) {\n    this.force.set(force);\n    this.wake();\n};\n\n/**\n * 1-dimensional getter for velocity\n *\n * @method getVelocity1D\n * @return velocity {Number}\n */\nParticle.prototype.getVelocity1D = function getVelocity1D() {\n    return this.velocity.x;\n};\n\n/**\n * Basic setter function for mass quantity\n *\n * @method setMass\n * @param mass {Number} mass\n */\nParticle.prototype.setMass = function setMass(mass) {\n    this.mass = mass;\n    this.inverseMass = 1 / mass;\n};\n\n/**\n * Basic getter function for mass quantity\n *\n * @method getMass\n * @return mass {Number}\n */\nParticle.prototype.getMass = function getMass() {\n    return this.mass;\n};\n\n/**\n * Reset position and velocity\n *\n * @method reset\n * @param position {Array|Vector}\n * @param velocity {Array|Vector}\n */\nParticle.prototype.reset = function reset(position, velocity) {\n    this.setPosition(position || [0,0,0]);\n    this.setVelocity(velocity || [0,0,0]);\n};\n\n/**\n * Add force vector to existing internal force Vector\n *\n * @method applyForce\n * @param force {Vector}\n */\nParticle.prototype.applyForce = function applyForce(force) {\n    if (force.isZero()) return;\n    this.force.add(force).put(this.force);\n    this.wake();\n};\n\n/**\n * Add impulse (change in velocity) Vector to this Vector's velocity.\n *\n * @method applyImpulse\n * @param impulse {Vector}\n */\nParticle.prototype.applyImpulse = function applyImpulse(impulse) {\n    if (impulse.isZero()) return;\n    var velocity = this.velocity;\n    velocity.add(impulse.mult(this.inverseMass)).put(velocity);\n};\n\n/**\n * Update a particle's velocity from its force accumulator\n *\n * @method integrateVelocity\n * @param dt {Number} Time differential\n */\nParticle.prototype.integrateVelocity = function integrateVelocity(dt) {\n    Integrator.integrateVelocity(this, dt);\n};\n\n/**\n * Update a particle's position from its velocity\n *\n * @method integratePosition\n * @param dt {Number} Time differential\n */\nParticle.prototype.integratePosition = function integratePosition(dt) {\n    Integrator.integratePosition(this, dt);\n};\n\n/**\n * Update the position and velocity of the particle\n *\n * @method _integrate\n * @protected\n * @param dt {Number} Time differential\n */\nParticle.prototype._integrate = function _integrate(dt) {\n    this.integrateVelocity(dt);\n    this.integratePosition(dt);\n};\n\n/**\n * Get kinetic energy of the particle.\n *\n * @method getEnergy\n * @function\n */\nParticle.prototype.getEnergy = function getEnergy() {\n    return 0.5 * this.mass * this.velocity.normSquared();\n};\n\n/**\n * Generate transform from the current position state\n *\n * @method getTransform\n * @return Transform {Transform}\n */\nParticle.prototype.getTransform = function getTransform() {\n    this._engine.step();\n\n    var position = this.position;\n    var transform = this.transform;\n\n    transform[12] = position.x;\n    transform[13] = position.y;\n    transform[14] = position.z;\n    return transform;\n};\n\n/**\n * The modify interface of a Modifier\n *\n * @method modify\n * @param target {Spec}\n * @return Spec {Spec}\n */\nParticle.prototype.modify = function modify(target) {\n    var _spec = this._spec.target;\n    _spec.transform = this.getTransform();\n    _spec.target = target;\n    return this._spec;\n};\n\n// private\nfunction _createEventOutput() {\n    this._eventOutput = new EventHandler();\n    this._eventOutput.bindThis(this);\n    EventHandler.setOutputHandler(this, this._eventOutput);\n}\n\nParticle.prototype.emit = function emit(type, data) {\n    if (!this._eventOutput) return;\n    this._eventOutput.emit(type, data);\n};\n\nParticle.prototype.on = function on() {\n    _createEventOutput.call(this);\n    return this.on.apply(this, arguments);\n};\n\nParticle.prototype.removeListener = function removeListener() {\n    _createEventOutput.call(this);\n    return this.removeListener.apply(this, arguments);\n};\n\nParticle.prototype.pipe = function pipe() {\n    _createEventOutput.call(this);\n    return this.pipe.apply(this, arguments);\n};\n\nParticle.prototype.unpipe = function unpipe() {\n    _createEventOutput.call(this);\n    return this.unpipe.apply(this, arguments);\n};\n\nmodule.exports = Particle;\n},{\"../../core/EventHandler\":7,\"../../core/Transform\":15,\"../../math/Vector\":41,\"../integrators/SymplecticEuler\":72}],52:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Body = require('./Body');\nvar Matrix = require('../../math/Matrix');\n\n/**\n * Implements a rectangular geometry for an Body with\n * size = [width, height].\n *\n * @class Rectangle\n * @extends Body\n * @constructor\n */\nfunction Rectangle(options) {\n    options = options || {};\n    this.size = options.size || [0,0];\n    Body.call(this, options);\n}\n\nRectangle.prototype = Object.create(Body.prototype);\nRectangle.prototype.constructor = Rectangle;\n\n/**\n * Basic setter for size.\n * @method setSize\n * @param size {Array} size = [width, height]\n */\nRectangle.prototype.setSize = function setSize(size) {\n    this.size = size;\n    this.setMomentsOfInertia();\n};\n\nRectangle.prototype.setMomentsOfInertia = function setMomentsOfInertia() {\n    var m = this.mass;\n    var w = this.size[0];\n    var h = this.size[1];\n\n    this.inertia = new Matrix([\n        [m * h * h / 12, 0, 0],\n        [0, m * w * w / 12, 0],\n        [0, 0, m * (w * w + h * h) / 12]\n    ]);\n\n    this.inverseInertia = new Matrix([\n        [12 / (m * h * h), 0, 0],\n        [0, 12 / (m * w * w), 0],\n        [0, 0, 12 / (m * (w * w + h * h))]\n    ]);\n};\n\nmodule.exports = Rectangle;\n},{\"../../math/Matrix\":37,\"./Body\":49}],53:[function(require,module,exports){\nmodule.exports = {\n  Body: require('./Body'),\n  Circle: require('./Circle'),\n  Particle: require('./Particle'),\n  Rectangle: require('./Rectangle')\n};\n\n},{\"./Body\":49,\"./Circle\":50,\"./Particle\":51,\"./Rectangle\":52}],54:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Constraint = require('./Constraint');\nvar Vector = require('../../math/Vector');\n\n/**\n *  Allows for two circular bodies to collide and bounce off each other.\n *\n *  @class Collision\n *  @constructor\n *  @extends Constraint\n *  @param {Options} [options] An object of configurable options.\n *  @param {Number} [options.restitution] The energy ratio lost in a collision (0 = stick, 1 = elastic) Range : [0, 1]\n *  @param {Number} [options.drift] Baumgarte stabilization parameter. Makes constraints \"loosely\" (0) or \"tightly\" (1) enforced. Range : [0, 1]\n *  @param {Number} [options.slop] Amount of penetration in pixels to ignore before collision event triggers\n *\n */\nfunction Collision(options) {\n    this.options = Object.create(Collision.DEFAULT_OPTIONS);\n    if (options) this.setOptions(options);\n\n    //registers\n    this.normal   = new Vector();\n    this.pDiff    = new Vector();\n    this.vDiff    = new Vector();\n    this.impulse1 = new Vector();\n    this.impulse2 = new Vector();\n\n    Constraint.call(this);\n}\n\nCollision.prototype = Object.create(Constraint.prototype);\nCollision.prototype.constructor = Collision;\n\nCollision.DEFAULT_OPTIONS = {\n    restitution : 0.5,\n    drift : 0.5,\n    slop : 0\n};\n\nfunction _normalVelocity(particle1, particle2) {\n    return particle1.velocity.dot(particle2.velocity);\n}\n\n/*\n * Setter for options.\n *\n * @method setOptions\n * @param options {Objects}\n */\nCollision.prototype.setOptions = function setOptions(options) {\n    for (var key in options) this.options[key] = options[key];\n};\n\n/**\n * Adds an impulse to a physics body's velocity due to the constraint\n *\n * @method applyConstraint\n * @param targets {Array.Body}  Array of bodies to apply the constraint to\n * @param source {Body}         The source of the constraint\n * @param dt {Number}           Delta time\n */\nCollision.prototype.applyConstraint = function applyConstraint(targets, source, dt) {\n    if (source === undefined) return;\n\n    var v1 = source.velocity;\n    var p1 = source.position;\n    var w1 = source.inverseMass;\n    var r1 = source.radius;\n\n    var options = this.options;\n    var drift = options.drift;\n    var slop = -options.slop;\n    var restitution = options.restitution;\n\n    var n     = this.normal;\n    var pDiff = this.pDiff;\n    var vDiff = this.vDiff;\n    var impulse1 = this.impulse1;\n    var impulse2 = this.impulse2;\n\n    for (var i = 0; i < targets.length; i++) {\n        var target = targets[i];\n\n        if (target === source) continue;\n\n        var v2 = target.velocity;\n        var p2 = target.position;\n        var w2 = target.inverseMass;\n        var r2 = target.radius;\n\n        pDiff.set(p2.sub(p1));\n        vDiff.set(v2.sub(v1));\n\n        var dist    = pDiff.norm();\n        var overlap = dist - (r1 + r2);\n        var effMass = 1/(w1 + w2);\n        var gamma   = 0;\n\n        if (overlap < 0) {\n\n            n.set(pDiff.normalize());\n\n            if (this._eventOutput) {\n                var collisionData = {\n                    target  : target,\n                    source  : source,\n                    overlap : overlap,\n                    normal  : n\n                };\n\n                this._eventOutput.emit('preCollision', collisionData);\n                this._eventOutput.emit('collision', collisionData);\n            }\n\n            var lambda = (overlap <= slop)\n                ? ((1 + restitution) * n.dot(vDiff) + drift/dt * (overlap - slop)) / (gamma + dt/effMass)\n                : ((1 + restitution) * n.dot(vDiff)) / (gamma + dt/effMass);\n\n            n.mult(dt*lambda).put(impulse1);\n            impulse1.mult(-1).put(impulse2);\n\n            source.applyImpulse(impulse1);\n            target.applyImpulse(impulse2);\n\n            //source.setPosition(p1.add(n.mult(overlap/2)));\n            //target.setPosition(p2.sub(n.mult(overlap/2)));\n\n            if (this._eventOutput) this._eventOutput.emit('postCollision', collisionData);\n\n        }\n    }\n};\n\nmodule.exports = Collision;\n},{\"../../math/Vector\":41,\"./Constraint\":55}],55:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar EventHandler = require('../../core/EventHandler');\n\n/**\n *  Allows for two circular bodies to collide and bounce off each other.\n *\n *  @class Constraint\n *  @constructor\n *  @uses EventHandler\n *  @param options {Object}\n */\nfunction Constraint() {\n    this.options = this.options || {};\n    this._eventOutput = new EventHandler();\n    EventHandler.setOutputHandler(this, this._eventOutput);\n}\n\n/*\n * Setter for options.\n *\n * @method setOptions\n * @param options {Objects}\n */\nConstraint.prototype.setOptions = function setOptions(options) {\n    this._eventOutput.emit('change', options);\n};\n\n/**\n * Adds an impulse to a physics body's velocity due to the constraint\n *\n * @method applyConstraint\n */\nConstraint.prototype.applyConstraint = function applyConstraint() {};\n\n/**\n * Getter for energy\n *\n * @method getEnergy\n * @return energy {Number}\n */\nConstraint.prototype.getEnergy = function getEnergy() {\n    return 0.0;\n};\n\nmodule.exports = Constraint;\n},{\"../../core/EventHandler\":7}],56:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Constraint = require('./Constraint');\nvar Vector = require('../../math/Vector');\n\n/**\n *  A constraint that keeps a physics body on a given implicit curve\n *    regardless of other physical forces are applied to it.\n *\n *    A curve constraint is two surface constraints in disguise, as a curve is\n *    the intersection of two surfaces, and is essentially constrained to both\n *\n *  @class Curve\n *  @constructor\n *  @extends Constraint\n *  @param {Options} [options] An object of configurable options.\n *  @param {Function} [options.equation] An implicitly defined surface f(x,y,z) = 0 that body is constrained to e.g. function(x,y,z) { x*x + y*y - r*r } corresponds to a circle of radius r pixels\n *  @param {Function} [options.plane] An implicitly defined second surface that the body is constrained to\n *  @param {Number} [options.period] The spring-like reaction when the constraint is violated\n *  @param {Number} [options.number] The damping-like reaction when the constraint is violated\n */\nfunction Curve(options) {\n    this.options = Object.create(Curve.DEFAULT_OPTIONS);\n    if (options) this.setOptions(options);\n\n    //registers\n    this.J = new Vector();\n    this.impulse = new Vector();\n\n    Constraint.call(this);\n}\n\nCurve.prototype = Object.create(Constraint.prototype);\nCurve.prototype.constructor = Curve;\n\n/** @const */ var epsilon = 1e-7;\n/** @const */ var pi = Math.PI;\n\nCurve.DEFAULT_OPTIONS = {\n    equation  : function(x,y,z) {\n        return 0;\n    },\n    plane : function(x,y,z) {\n        return z;\n    },\n    period : 0,\n    dampingRatio : 0\n};\n\n/**\n * Basic options setter\n *\n * @method setOptions\n * @param options {Objects}\n */\nCurve.prototype.setOptions = function setOptions(options) {\n    for (var key in options) this.options[key] = options[key];\n};\n\n/**\n * Adds a curve impulse to a physics body.\n *\n * @method applyConstraint\n * @param targets {Array.Body} Array of bodies to apply force to.\n * @param source {Body} Not applicable\n * @param dt {Number} Delta time\n */\nCurve.prototype.applyConstraint = function applyConstraint(targets, source, dt) {\n    var options = this.options;\n    var impulse = this.impulse;\n    var J = this.J;\n\n    var f = options.equation;\n    var g = options.plane;\n    var dampingRatio = options.dampingRatio;\n    var period = options.period;\n\n    for (var i = 0; i < targets.length; i++) {\n        var body = targets[i];\n\n        var v = body.velocity;\n        var p = body.position;\n        var m = body.mass;\n\n        var gamma;\n        var beta;\n\n        if (period === 0) {\n            gamma = 0;\n            beta = 1;\n        }\n        else {\n            var c = 4 * m * pi * dampingRatio / period;\n            var k = 4 * m * pi * pi / (period * period);\n\n            gamma = 1 / (c + dt*k);\n            beta  = dt*k / (c + dt*k);\n        }\n\n        var x = p.x;\n        var y = p.y;\n        var z = p.z;\n\n        var f0  = f(x, y, z);\n        var dfx = (f(x + epsilon, p, p) - f0) / epsilon;\n        var dfy = (f(x, y + epsilon, p) - f0) / epsilon;\n        var dfz = (f(x, y, p + epsilon) - f0) / epsilon;\n\n        var g0  = g(x, y, z);\n        var dgx = (g(x + epsilon, y, z) - g0) / epsilon;\n        var dgy = (g(x, y + epsilon, z) - g0) / epsilon;\n        var dgz = (g(x, y, z + epsilon) - g0) / epsilon;\n\n        J.setXYZ(dfx + dgx, dfy + dgy, dfz + dgz);\n\n        var antiDrift = beta/dt * (f0 + g0);\n        var lambda = -(J.dot(v) + antiDrift) / (gamma + dt * J.normSquared() / m);\n\n        impulse.set(J.mult(dt*lambda));\n        body.applyImpulse(impulse);\n    }\n};\n\nmodule.exports = Curve;\n},{\"../../math/Vector\":41,\"./Constraint\":55}],57:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Constraint = require('./Constraint');\nvar Vector = require('../../math/Vector');\n\n/**\n *  A constraint that keeps a physics body a given distance away from a given\n *  anchor, or another attached body.\n *\n *\n *  @class Distance\n *  @constructor\n *  @extends Constraint\n *  @param {Options} [options] An object of configurable options.\n *  @param {Array} [options.anchor] The location of the anchor\n *  @param {Number} [options.length] The amount of distance from the anchor the constraint should enforce\n *  @param {Number} [options.minLength] The minimum distance before the constraint is activated. Use this property for a \"rope\" effect.\n *  @param {Number} [options.period] The spring-like reaction when the constraint is broken.\n *  @param {Number} [options.dampingRatio] The damping-like reaction when the constraint is broken.\n *\n */\nfunction Distance(options) {\n    this.options = Object.create(this.constructor.DEFAULT_OPTIONS);\n    if (options) this.setOptions(options);\n\n    //registers\n    this.impulse  = new Vector();\n    this.normal   = new Vector();\n    this.diffP    = new Vector();\n    this.diffV    = new Vector();\n\n    Constraint.call(this);\n}\n\nDistance.prototype = Object.create(Constraint.prototype);\nDistance.prototype.constructor = Distance;\n\nDistance.DEFAULT_OPTIONS = {\n    anchor : null,\n    length : 0,\n    minLength : 0,\n    period : 0,\n    dampingRatio : 0\n};\n\n/** @const */ var pi = Math.PI;\n\n/**\n * Basic options setter\n *\n * @method setOptions\n * @param options {Objects}\n */\nDistance.prototype.setOptions = function setOptions(options) {\n    if (options.anchor) {\n        if (options.anchor.position instanceof Vector) this.options.anchor = options.anchor.position;\n        if (options.anchor   instanceof Vector)  this.options.anchor = options.anchor;\n        if (options.anchor   instanceof Array)  this.options.anchor = new Vector(options.anchor);\n    }\n    if (options.length !== undefined) this.options.length = options.length;\n    if (options.dampingRatio !== undefined) this.options.dampingRatio = options.dampingRatio;\n    if (options.period !== undefined) this.options.period = options.period;\n    if (options.minLength !== undefined) this.options.minLength = options.minLength;\n};\n\nfunction _calcError(impulse, body) {\n    return body.mass * impulse.norm();\n}\n\n/**\n * Set the anchor position\n *\n * @method setOptions\n * @param anchor {Array}\n */\nDistance.prototype.setAnchor = function setAnchor(anchor) {\n    if (!this.options.anchor) this.options.anchor = new Vector();\n    this.options.anchor.set(anchor);\n};\n\n/**\n * Adds an impulse to a physics body's velocity due to the constraint\n *\n * @method applyConstraint\n * @param targets {Array.Body}  Array of bodies to apply the constraint to\n * @param source {Body}         The source of the constraint\n * @param dt {Number}           Delta time\n */\nDistance.prototype.applyConstraint = function applyConstraint(targets, source, dt) {\n    var n        = this.normal;\n    var diffP    = this.diffP;\n    var diffV    = this.diffV;\n    var impulse  = this.impulse;\n    var options  = this.options;\n\n    var dampingRatio = options.dampingRatio;\n    var period       = options.period;\n    var minLength    = options.minLength;\n\n    var p2;\n    var w2;\n\n    if (source) {\n        var v2 = source.velocity;\n        p2 = source.position;\n        w2 = source.inverseMass;\n    }\n    else {\n        p2 = this.options.anchor;\n        w2 = 0;\n    }\n\n    var length = this.options.length;\n\n    for (var i = 0; i < targets.length; i++) {\n        var body = targets[i];\n\n        var v1 = body.velocity;\n        var p1 = body.position;\n        var w1 = body.inverseMass;\n\n        diffP.set(p1.sub(p2));\n        n.set(diffP.normalize());\n\n        var dist = diffP.norm() - length;\n\n        //rope effect\n        if (Math.abs(dist) < minLength) return;\n\n        if (source) diffV.set(v1.sub(v2));\n        else diffV.set(v1);\n\n        var effMass = 1 / (w1 + w2);\n        var gamma;\n        var beta;\n\n        if (period === 0) {\n            gamma = 0;\n            beta  = 1;\n        }\n        else {\n            var c = 4 * effMass * pi * dampingRatio / period;\n            var k = 4 * effMass * pi * pi / (period * period);\n\n            gamma = 1 / (c + dt*k);\n            beta  = dt*k / (c + dt*k);\n        }\n\n        var antiDrift = beta/dt * dist;\n        var lambda    = -(n.dot(diffV) + antiDrift) / (gamma + dt/effMass);\n\n        impulse.set(n.mult(dt*lambda));\n        body.applyImpulse(impulse);\n\n        if (source) source.applyImpulse(impulse.mult(-1));\n    }\n};\n\nmodule.exports = Distance;\n},{\"../../math/Vector\":41,\"./Constraint\":55}],58:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Constraint = require('./Constraint');\nvar Vector = require('../../math/Vector');\n\n/**\n *  A spring constraint is like a spring force, except that it is always\n *    numerically stable (even for low periods), at the expense of introducing\n *    damping (even with dampingRatio set to 0).\n *\n *    Use this if you need fast spring-like behavior, e.g., snapping\n *\n *  @class Snap\n *  @constructor\n *  @extends Constraint\n *  @param {Options} [options] An object of configurable options.\n *  @param {Number} [options.period] The amount of time in milliseconds taken for one complete oscillation when there is no damping. Range : [150, Infinity]\n *  @param {Number} [options.dampingRatio] Additional damping of the spring. Range : [0, 1]. At 0 this spring will still be damped, at 1 the spring will be critically damped (the spring will never oscillate)\n *  @param {Number} [options.length] The rest length of the spring. Range: [0, Infinity].\n *  @param {Array} [options.anchor] The location of the spring's anchor, if not another physics body.\n *\n */\nfunction Snap(options) {\n    Constraint.call(this);\n\n    this.options = Object.create(this.constructor.DEFAULT_OPTIONS);\n    if (options) this.setOptions(options);\n\n    //registers\n    this.pDiff  = new Vector();\n    this.vDiff  = new Vector();\n    this.impulse1 = new Vector();\n    this.impulse2 = new Vector();\n}\n\nSnap.prototype = Object.create(Constraint.prototype);\nSnap.prototype.constructor = Snap;\n\nSnap.DEFAULT_OPTIONS = {\n    period : 300,\n    dampingRatio : 0.1,\n    length : 0,\n    anchor : undefined\n};\n\n/** const */ var pi = Math.PI;\n\n/**\n * Basic options setter\n *\n * @method setOptions\n * @param options {Objects} options\n */\nSnap.prototype.setOptions = function setOptions(options) {\n    if (options.anchor !== undefined) {\n        if (options.anchor   instanceof Vector) this.options.anchor = options.anchor;\n        if (options.anchor.position instanceof Vector) this.options.anchor = options.anchor.position;\n        if (options.anchor   instanceof Array)  this.options.anchor = new Vector(options.anchor);\n    }\n    if (options.length !== undefined) this.options.length = options.length;\n    if (options.dampingRatio !== undefined) this.options.dampingRatio = options.dampingRatio;\n    if (options.period !== undefined) this.options.period = options.period;\n    Constraint.prototype.setOptions.call(this, options);\n};\n\n/**\n * Calculates energy of spring\n *\n * @method getEnergy\n * @param targets {Body} target physics body\n * @param source {Body} source physics body\n * @return energy {Number}\n */\nSnap.prototype.getEnergy = function getEnergy(targets, source) {\n    var options     = this.options;\n    var restLength  = options.length;\n    var anchor      = options.anchor || source.position;\n    var strength    = Math.pow(2 * pi / options.period, 2);\n\n    var energy = 0.0;\n    for (var i = 0; i < targets.length; i++){\n        var target = targets[i];\n        var dist = anchor.sub(target.position).norm() - restLength;\n        energy += 0.5 * strength * dist * dist;\n    }\n    return energy;\n};\n\n/**\n * Adds a spring impulse to a physics body's velocity due to the constraint\n *\n * @method applyConstraint\n * @param targets {Array.Body}  Array of bodies to apply the constraint to\n * @param source {Body}         The source of the constraint\n * @param dt {Number}           Delta time\n */\nSnap.prototype.applyConstraint = function applyConstraint(targets, source, dt) {\n    var options      = this.options;\n    var pDiff        = this.pDiff;\n    var vDiff        = this.vDiff;\n    var impulse1     = this.impulse1;\n    var impulse2     = this.impulse2;\n    var length       = options.length;\n    var anchor       = options.anchor || source.position;\n    var period       = options.period;\n    var dampingRatio = options.dampingRatio;\n\n    for (var i = 0; i < targets.length ; i++) {\n        var target = targets[i];\n\n        var p1 = target.position;\n        var v1 = target.velocity;\n        var m1 = target.mass;\n        var w1 = target.inverseMass;\n\n        pDiff.set(p1.sub(anchor));\n        var dist = pDiff.norm() - length;\n        var effMass;\n\n        if (source) {\n            var w2 = source.inverseMass;\n            var v2 = source.velocity;\n            vDiff.set(v1.sub(v2));\n            effMass = 1 / (w1 + w2);\n        }\n        else {\n            vDiff.set(v1);\n            effMass = m1;\n        }\n\n        var gamma;\n        var beta;\n\n        if (this.options.period === 0) {\n            gamma = 0;\n            beta = 1;\n        }\n        else {\n            var k = 4 * effMass * pi * pi / (period * period);\n            var c = 4 * effMass * pi * dampingRatio / period;\n\n            beta  = dt * k / (c + dt * k);\n            gamma = 1 / (c + dt*k);\n        }\n\n        var antiDrift = beta/dt * dist;\n        pDiff.normalize(-antiDrift)\n            .sub(vDiff)\n            .mult(dt / (gamma + dt/effMass))\n            .put(impulse1);\n\n        // var n = new Vector();\n        // n.set(pDiff.normalize());\n        // var lambda = -(n.dot(vDiff) + antiDrift) / (gamma + dt/effMass);\n        // impulse2.set(n.mult(dt*lambda));\n\n        target.applyImpulse(impulse1);\n\n        if (source) {\n            impulse1.mult(-1).put(impulse2);\n            source.applyImpulse(impulse2);\n        }\n    }\n};\n\nmodule.exports = Snap;\n},{\"../../math/Vector\":41,\"./Constraint\":55}],59:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Constraint = require('./Constraint');\nvar Vector = require('../../math/Vector');\n\n/**\n *  A constraint that keeps a physics body on a given implicit surface\n *    regardless of other physical forces are applied to it.\n *\n *  @class Surface\n *  @constructor\n *  @extends Constraint\n *  @param {Options} [options] An object of configurable options.\n *  @param {Function} [options.equation] An implicitly defined surface f(x,y,z) = 0 that body is constrained to e.g. function(x,y,z) { x*x + y*y + z*z - r*r } corresponds to a sphere of radius r pixels.\n *  @param {Number} [options.period] The spring-like reaction when the constraint is violated.\n *  @param {Number} [options.dampingRatio] The damping-like reaction when the constraint is violated.\n */\nfunction Surface(options) {\n    this.options = Object.create(Surface.DEFAULT_OPTIONS);\n    if (options) this.setOptions(options);\n\n    this.J = new Vector();\n    this.impulse  = new Vector();\n\n    Constraint.call(this);\n}\n\nSurface.prototype = Object.create(Constraint.prototype);\nSurface.prototype.constructor = Surface;\n\nSurface.DEFAULT_OPTIONS = {\n    equation : undefined,\n    period : 0,\n    dampingRatio : 0\n};\n\n/** @const */ var epsilon = 1e-7;\n/** @const */ var pi = Math.PI;\n\n/**\n * Basic options setter\n *\n * @method setOptions\n * @param options {Objects}\n */\nSurface.prototype.setOptions = function setOptions(options) {\n    for (var key in options) this.options[key] = options[key];\n};\n\n/**\n * Adds a surface impulse to a physics body.\n *\n * @method applyConstraint\n * @param targets {Array.Body} Array of bodies to apply force to.\n * @param source {Body} Not applicable\n * @param dt {Number} Delta time\n */\nSurface.prototype.applyConstraint = function applyConstraint(targets, source, dt) {\n    var impulse = this.impulse;\n    var J       = this.J;\n    var options = this.options;\n\n    var f = options.equation;\n    var dampingRatio = options.dampingRatio;\n    var period = options.period;\n\n    for (var i = 0; i < targets.length; i++) {\n        var particle = targets[i];\n\n        var v = particle.velocity;\n        var p = particle.position;\n        var m = particle.mass;\n\n        var gamma;\n        var beta;\n\n        if (period === 0) {\n            gamma = 0;\n            beta = 1;\n        }\n        else {\n            var c = 4 * m * pi * dampingRatio / period;\n            var k = 4 * m * pi * pi / (period * period);\n\n            gamma = 1 / (c + dt*k);\n            beta  = dt*k / (c + dt*k);\n        }\n\n        var x = p.x;\n        var y = p.y;\n        var z = p.z;\n\n        var f0  = f(x, y, z);\n        var dfx = (f(x + epsilon, p, p) - f0) / epsilon;\n        var dfy = (f(x, y + epsilon, p) - f0) / epsilon;\n        var dfz = (f(x, y, p + epsilon) - f0) / epsilon;\n        J.setXYZ(dfx, dfy, dfz);\n\n        var antiDrift = beta/dt * f0;\n        var lambda = -(J.dot(v) + antiDrift) / (gamma + dt * J.normSquared() / m);\n\n        impulse.set(J.mult(dt*lambda));\n        particle.applyImpulse(impulse);\n    }\n};\n\nmodule.exports = Surface;\n},{\"../../math/Vector\":41,\"./Constraint\":55}],60:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Constraint = require('./Constraint');\nvar Vector = require('../../math/Vector');\n\n/**\n *  A wall describes an infinite two-dimensional plane that physics bodies\n *    can collide with. To define a wall, you must give it a distance (from\n *    the center of the physics engine's origin, and a normal defining the plane\n *    of the wall.\n *\n *    (wall)\n *      |\n *      | (normal)     (origin)\n *      | --->            *\n *      |\n *      |    (distance)\n *      ...................\n *            (100px)\n *\n *      e.g., Wall({normal : [1,0,0], distance : 100})\n *      would be a wall 100 pixels to the left, whose normal points right\n *\n *  @class Wall\n *  @constructor\n *  @extends Constraint\n *  @param {Options} [options] An object of configurable options.\n *  @param {Number} [options.restitution] The energy ratio lost in a collision (0 = stick, 1 = elastic). Range : [0, 1]\n *  @param {Number} [options.drift] Baumgarte stabilization parameter. Makes constraints \"loosely\" (0) or \"tightly\" (1) enforced. Range : [0, 1]\n *  @param {Number} [options.slop] Amount of penetration in pixels to ignore before collision event triggers.\n *  @param {Array} [options.normal] The normal direction to the wall.\n *  @param {Number} [options.distance] The distance from the origin that the wall is placed.\n *  @param {onContact} [options.onContact] How to handle collision against the wall.\n *\n */\nfunction Wall(options) {\n    this.options = Object.create(Wall.DEFAULT_OPTIONS);\n    if (options) this.setOptions(options);\n\n    //registers\n    this.diff = new Vector();\n    this.impulse = new Vector();\n\n    Constraint.call(this);\n}\n\nWall.prototype = Object.create(Constraint.prototype);\nWall.prototype.constructor = Wall;\n\n/**\n * @property Wall.ON_CONTACT\n * @type Object\n * @protected\n * @static\n */\nWall.ON_CONTACT = {\n\n    /**\n     * Physical bodies bounce off the wall\n     * @attribute REFLECT\n     */\n    REFLECT : 0,\n\n    /**\n     * Physical bodies are unaffected. Usecase is to fire events on contact.\n     * @attribute SILENT\n     */\n    SILENT : 1\n};\n\nWall.DEFAULT_OPTIONS = {\n    restitution : 0.5,\n    drift : 0.5,\n    slop : 0,\n    normal : [1, 0, 0],\n    distance : 0,\n    onContact : Wall.ON_CONTACT.REFLECT\n};\n\n/*\n * Setter for options.\n *\n * @method setOptions\n * @param options {Objects}\n */\nWall.prototype.setOptions = function setOptions(options) {\n    if (options.normal !== undefined) {\n        if (options.normal instanceof Vector) this.options.normal = options.normal.clone();\n        if (options.normal instanceof Array)  this.options.normal = new Vector(options.normal);\n    }\n    if (options.restitution !== undefined) this.options.restitution = options.restitution;\n    if (options.drift !== undefined) this.options.drift = options.drift;\n    if (options.slop !== undefined) this.options.slop = options.slop;\n    if (options.distance !== undefined) this.options.distance = options.distance;\n    if (options.onContact !== undefined) this.options.onContact = options.onContact;\n};\n\nfunction _getNormalVelocity(n, v) {\n    return v.dot(n);\n}\n\nfunction _getDistanceFromOrigin(p) {\n    var n = this.options.normal;\n    var d = this.options.distance;\n    return p.dot(n) + d;\n}\n\nfunction _onEnter(particle, overlap, dt) {\n    var p = particle.position;\n    var v = particle.velocity;\n    var m = particle.mass;\n    var n = this.options.normal;\n    var action = this.options.onContact;\n    var restitution = this.options.restitution;\n    var impulse = this.impulse;\n\n    var drift = this.options.drift;\n    var slop = -this.options.slop;\n    var gamma = 0;\n\n    if (this._eventOutput) {\n        var data = {particle : particle, wall : this, overlap : overlap, normal : n};\n        this._eventOutput.emit('preCollision', data);\n        this._eventOutput.emit('collision', data);\n    }\n\n    switch (action) {\n        case Wall.ON_CONTACT.REFLECT:\n            var lambda = (overlap < slop)\n                ? -((1 + restitution) * n.dot(v) + drift / dt * (overlap - slop)) / (m * dt + gamma)\n                : -((1 + restitution) * n.dot(v)) / (m * dt + gamma);\n\n            impulse.set(n.mult(dt * lambda));\n            particle.applyImpulse(impulse);\n            particle.setPosition(p.add(n.mult(-overlap)));\n            break;\n    }\n\n    if (this._eventOutput) this._eventOutput.emit('postCollision', data);\n}\n\nfunction _onExit(particle, overlap, dt) {\n    var action = this.options.onContact;\n    var p = particle.position;\n    var n = this.options.normal;\n\n    if (action === Wall.ON_CONTACT.REFLECT) {\n        particle.setPosition(p.add(n.mult(-overlap)));\n    }\n}\n\n/**\n * Adds an impulse to a physics body's velocity due to the wall constraint\n *\n * @method applyConstraint\n * @param targets {Array.Body}  Array of bodies to apply the constraint to\n * @param source {Body}         The source of the constraint\n * @param dt {Number}           Delta time\n */\nWall.prototype.applyConstraint = function applyConstraint(targets, source, dt) {\n    var n = this.options.normal;\n\n    for (var i = 0; i < targets.length; i++) {\n        var particle = targets[i];\n        var p = particle.position;\n        var v = particle.velocity;\n        var r = particle.radius || 0;\n\n        var overlap = _getDistanceFromOrigin.call(this, p.add(n.mult(-r)));\n        var nv = _getNormalVelocity.call(this, n, v);\n\n        if (overlap <= 0) {\n            if (nv < 0) _onEnter.call(this, particle, overlap, dt);\n            else _onExit.call(this, particle, overlap, dt);\n        }\n    }\n};\n\nmodule.exports = Wall;\n},{\"../../math/Vector\":41,\"./Constraint\":55}],61:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Constraint = require('./Constraint');\nvar Wall = require('./Wall');\nvar Vector = require('../../math/Vector');\n\n/**\n *  Walls combines one or more Wall primitives and exposes a simple API to\n *  interact with several walls at once. A common use case would be to set up\n *  a bounding box for a physics body, that would collide with each side.\n *\n *  @class Walls\n *  @constructor\n *  @extends Constraint\n *  @uses Wall\n *  @param {Options} [options] An object of configurable options.\n *  @param {Array} [options.sides] An array of sides e.g., [Walls.LEFT, Walls.TOP]\n *  @param {Array} [options.size] The size of the bounding box of the walls.\n *  @param {Array} [options.origin] The center of the wall relative to the size.\n *  @param {Array} [options.drift] Baumgarte stabilization parameter. Makes constraints \"loosely\" (0) or \"tightly\" (1) enforced. Range : [0, 1]\n *  @param {Array} [options.slop] Amount of penetration in pixels to ignore before collision event triggers.\n *  @param {Array} [options.restitution] The energy ratio lost in a collision (0 = stick, 1 = elastic) The energy ratio lost in a collision (0 = stick, 1 = elastic)\n *  @param {Array} [options.onContact] How to handle collision against the wall.\n */\nfunction Walls(options) {\n    this.options = Object.create(Walls.DEFAULT_OPTIONS);\n    if (options) this.setOptions(options);\n    _createComponents.call(this, options.sides || this.options.sides);\n\n    Constraint.call(this);\n}\n\nWalls.prototype = Object.create(Constraint.prototype);\nWalls.prototype.constructor = Walls;\n/**\n * @property Walls.ON_CONTACT\n * @type Object\n * @extends Wall.ON_CONTACT\n * @static\n */\nWalls.ON_CONTACT = Wall.ON_CONTACT;\n\n/**\n * An enumeration of common types of walls\n *    LEFT, RIGHT, TOP, BOTTOM, FRONT, BACK\n *    TWO_DIMENSIONAL, THREE_DIMENSIONAL\n *\n * @property Walls.SIDES\n * @type Object\n * @final\n * @static\n */\nWalls.SIDES = {\n    LEFT   : 0,\n    RIGHT  : 1,\n    TOP    : 2,\n    BOTTOM : 3,\n    FRONT  : 4,\n    BACK   : 5,\n    TWO_DIMENSIONAL : [0, 1, 2, 3],\n    THREE_DIMENSIONAL : [0, 1, 2, 3, 4, 5]\n};\n\nWalls.DEFAULT_OPTIONS = {\n    sides : Walls.SIDES.TWO_DIMENSIONAL,\n    size : [window.innerWidth, window.innerHeight, 0],\n    origin : [.5, .5, .5],\n    drift : 0.5,\n    slop : 0,\n    restitution : 0.5,\n    onContact : Walls.ON_CONTACT.REFLECT\n};\n\nvar _SIDE_NORMALS = {\n    0 : new Vector(1, 0, 0),\n    1 : new Vector(-1, 0, 0),\n    2 : new Vector(0, 1, 0),\n    3 : new Vector(0,-1, 0),\n    4 : new Vector(0, 0, 1),\n    5 : new Vector(0, 0,-1)\n};\n\nfunction _getDistance(side, size, origin) {\n    var distance;\n    var SIDES = Walls.SIDES;\n    switch (parseInt(side)) {\n        case SIDES.LEFT:\n            distance = size[0] * origin[0];\n            break;\n        case SIDES.TOP:\n            distance = size[1] * origin[1];\n            break;\n        case SIDES.FRONT:\n            distance = size[2] * origin[2];\n            break;\n        case SIDES.RIGHT:\n            distance = size[0] * (1 - origin[0]);\n            break;\n        case SIDES.BOTTOM:\n            distance = size[1] * (1 - origin[1]);\n            break;\n        case SIDES.BACK:\n            distance = size[2] * (1 - origin[2]);\n            break;\n    }\n    return distance;\n}\n\n/*\n * Setter for options.\n *\n * @method setOptions\n * @param options {Objects}\n */\nWalls.prototype.setOptions = function setOptions(options) {\n    var resizeFlag = false;\n    if (options.restitution !== undefined) _setOptionsForEach.call(this, {restitution : options.restitution});\n    if (options.drift !== undefined) _setOptionsForEach.call(this, {drift : options.drift});\n    if (options.slop !== undefined) _setOptionsForEach.call(this, {slop : options.slop});\n    if (options.onContact !== undefined) _setOptionsForEach.call(this, {onContact : options.onContact});\n    if (options.size !== undefined) resizeFlag = true;\n    if (options.sides !== undefined) this.options.sides = options.sides;\n    if (options.origin !== undefined) resizeFlag = true;\n    if (resizeFlag) this.setSize(options.size, options.origin);\n};\n\nfunction _createComponents(sides) {\n    this.components = {};\n    var components = this.components;\n\n    for (var i = 0; i < sides.length; i++) {\n        var side = sides[i];\n        components[i] = new Wall({\n            normal   : _SIDE_NORMALS[side].clone(),\n            distance : _getDistance(side, this.options.size, this.options.origin)\n        });\n    }\n}\n\n/*\n * Setter for size.\n *\n * @method setOptions\n * @param options {Objects}\n */\nWalls.prototype.setSize = function setSize(size, origin) {\n    origin = origin || this.options.origin;\n    if (origin.length < 3) origin[2] = 0.5;\n\n    this.forEach(function(wall, side) {\n        var d = _getDistance(side, size, origin);\n        wall.setOptions({distance : d});\n    });\n\n    this.options.size   = size;\n    this.options.origin = origin;\n};\n\nfunction _setOptionsForEach(options) {\n    this.forEach(function(wall) {\n        wall.setOptions(options);\n    });\n    for (var key in options) this.options[key] = options[key];\n}\n\n/**\n * Adds an impulse to a physics body's velocity due to the walls constraint\n *\n * @method applyConstraint\n * @param targets {Array.Body}  Array of bodies to apply the constraint to\n * @param source {Body}         The source of the constraint\n * @param dt {Number}           Delta time\n */\nWalls.prototype.applyConstraint = function applyConstraint(targets, source, dt) {\n    this.forEach(function(wall) {\n        wall.applyConstraint(targets, source, dt);\n    });\n};\n\n/**\n * Apply a method to each wall making up the walls\n *\n * @method applyConstraint\n * @param fn {Function}  Function that takes in a wall as its first parameter\n */\nWalls.prototype.forEach = function forEach(fn) {\n    var sides = this.options.sides;\n    for (var key in this.sides) fn(sides[key], key);\n};\n\n/**\n * Rotates the walls by an angle in the XY-plane\n *\n * @method applyConstraint\n * @param angle {Function}\n */\nWalls.prototype.rotateZ = function rotateZ(angle) {\n    this.forEach(function(wall) {\n        var n = wall.options.normal;\n        n.rotateZ(angle).put(n);\n    });\n};\n\n/**\n * Rotates the walls by an angle in the YZ-plane\n *\n * @method applyConstraint\n * @param angle {Function}\n */\nWalls.prototype.rotateX = function rotateX(angle) {\n    this.forEach(function(wall) {\n        var n = wall.options.normal;\n        n.rotateX(angle).put(n);\n    });\n};\n\n/**\n * Rotates the walls by an angle in the XZ-plane\n *\n * @method applyConstraint\n * @param angle {Function}\n */\nWalls.prototype.rotateY = function rotateY(angle) {\n    this.forEach(function(wall) {\n        var n = wall.options.normal;\n        n.rotateY(angle).put(n);\n    });\n};\n\nmodule.exports = Walls;\n},{\"../../math/Vector\":41,\"./Constraint\":55,\"./Wall\":60}],62:[function(require,module,exports){\nmodule.exports = {\n  Collision: require('./Collision'),\n  Constraint: require('./Constraint'),\n  Curve: require('./Curve'),\n  Distance: require('./Distance'),\n  Snap: require('./Snap'),\n  Surface: require('./Surface'),\n  Wall: require('./Wall'),\n  Walls: require('./Walls')\n};\n\n},{\"./Collision\":54,\"./Constraint\":55,\"./Curve\":56,\"./Distance\":57,\"./Snap\":58,\"./Surface\":59,\"./Wall\":60,\"./Walls\":61}],63:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Force = require('./Force');\n\n/**\n * Drag is a force that opposes velocity. Attach it to the physics engine\n * to slow down a physics body in motion.\n *\n * @class Drag\n * @constructor\n * @extends Force\n * @param {Object} options options to set on drag\n */\nfunction Drag(options) {\n    this.options = Object.create(this.constructor.DEFAULT_OPTIONS);\n    if (options) this.setOptions(options);\n\n    Force.call(this);\n}\n\nDrag.prototype = Object.create(Force.prototype);\nDrag.prototype.constructor = Drag;\n\n/**\n * @property Drag.FORCE_FUNCTIONS\n * @type Object\n * @protected\n * @static\n */\nDrag.FORCE_FUNCTIONS = {\n\n    /**\n     * A drag force proportional to the velocity\n     * @attribute LINEAR\n     * @type Function\n     * @param {Vector} velocity\n     * @return {Vector} drag force\n     */\n    LINEAR : function(velocity) {\n        return velocity;\n    },\n\n    /**\n     * A drag force proportional to the square of the velocity\n     * @attribute QUADRATIC\n     * @type Function\n     * @param {Vector} velocity\n     * @return {Vector} drag force\n     */\n    QUADRATIC : function(velocity) {\n        return velocity.mult(velocity.norm());\n    }\n};\n\n/**\n * @property Drag.DEFAULT_OPTIONS\n * @type Object\n * @protected\n * @static\n */\nDrag.DEFAULT_OPTIONS = {\n\n    /**\n     * The strength of the force\n     *    Range : [0, 0.1]\n     * @attribute strength\n     * @type Number\n     * @default 0.01\n     */\n    strength : 0.01,\n\n    /**\n     * The type of opposing force\n     * @attribute forceFunction\n     * @type Function\n     */\n    forceFunction : Drag.FORCE_FUNCTIONS.LINEAR\n};\n\n/**\n * Adds a drag force to a physics body's force accumulator.\n *\n * @method applyForce\n * @param targets {Array.Body} Array of bodies to apply drag force to.\n */\nDrag.prototype.applyForce = function applyForce(targets) {\n    var strength        = this.options.strength;\n    var forceFunction   = this.options.forceFunction;\n    var force           = this.force;\n    var index;\n    var particle;\n\n    for (index = 0; index < targets.length; index++) {\n        particle = targets[index];\n        forceFunction(particle.velocity).mult(-strength).put(force);\n        particle.applyForce(force);\n    }\n};\n\n/**\n * Basic options setter\n *\n * @method setOptions\n * @param {Objects} options\n */\nDrag.prototype.setOptions = function setOptions(options) {\n    for (var key in options) this.options[key] = options[key];\n};\n\nmodule.exports = Drag;\n},{\"./Force\":64}],64:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Vector = require('../../math/Vector');\nvar EventHandler = require('../../core/EventHandler');\n\n/**\n * Force base class.\n *\n * @class Force\n * @uses EventHandler\n * @constructor\n */\nfunction Force(force) {\n    this.force = new Vector(force);\n    this._eventOutput = new EventHandler();\n    EventHandler.setOutputHandler(this, this._eventOutput);\n}\n\n/**\n * Basic setter for options\n *\n * @method setOptions\n * @param options {Objects}\n */\nForce.prototype.setOptions = function setOptions(options) {\n    this._eventOutput.emit('change', options);\n};\n\n/**\n * Adds a force to a physics body's force accumulator.\n *\n * @method applyForce\n * @param targets {Array.Body} Array of bodies to apply a force to.\n */\nForce.prototype.applyForce = function applyForce(targets) {\n    var length = targets.length;\n    while (length--) {\n        targets[length].applyForce(this.force);\n    }\n};\n\n/**\n * Getter for a force's potential energy.\n *\n * @method getEnergy\n * @return energy {Number}\n */\nForce.prototype.getEnergy = function getEnergy() {\n    return 0.0;\n};\n\nmodule.exports = Force;\n},{\"../../core/EventHandler\":7,\"../../math/Vector\":41}],65:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Force = require('./Force');\nvar Vector = require('../../math/Vector');\n\n/**\n *  Repulsion is a force that repels (attracts) bodies away (towards)\n *    each other. A repulsion of negative strength is attractive.\n *\n *  @class Repulsion\n *  @constructor\n *  @extends Force\n *  @param {Object} options overwrites default options\n */\nfunction Repulsion(options) {\n    this.options = Object.create(Repulsion.DEFAULT_OPTIONS);\n    if (options) this.setOptions(options);\n\n    //registers\n    this.disp  = new Vector();\n\n    Force.call(this);\n}\n\nRepulsion.prototype = Object.create(Force.prototype);\nRepulsion.prototype.constructor = Repulsion;\n/**\n * @property Repulsion.DECAY_FUNCTIONS\n * @type Object\n * @protected\n * @static\n */\nRepulsion.DECAY_FUNCTIONS = {\n\n    /**\n     * A linear decay function\n     * @attribute LINEAR\n     * @type Function\n     * @param {Number} r distance from the source body\n     * @param {Number} cutoff the effective radius of influence\n     */\n    LINEAR : function(r, cutoff) {\n        return Math.max(1 - (1 / cutoff) * r, 0);\n    },\n\n    /**\n     * A Morse potential decay function (http://en.wikipedia.org/wiki/Morse_potential)\n     * @attribute MORSE\n     * @type Function\n     * @param {Number} r distance from the source body\n     * @param {Number} cutoff the minimum radius of influence\n     */\n    MORSE : function(r, cutoff) {\n        var r0 = (cutoff === 0) ? 100 : cutoff;\n        var rShifted = r + r0 * (1 - Math.log(2)); //shift by x-intercept\n        return Math.max(1 - Math.pow(1 - Math.exp(rShifted/r0 - 1), 2), 0);\n    },\n\n    /**\n     * An inverse distance decay function\n     * @attribute INVERSE\n     * @type Function\n     * @param {Number} r distance from the source body\n     * @param {Number} cutoff a distance shift to avoid singularities\n     */\n    INVERSE : function(r, cutoff) {\n        return 1 / (1 - cutoff + r);\n    },\n\n    /**\n     * An inverse squared distance decay function\n     * @attribute GRAVITY\n     * @type Function\n     * @param {Number} r distance from the source body\n     * @param {Number} cutoff a distance shift to avoid singularities\n     */\n    GRAVITY : function(r, cutoff) {\n        return 1 / (1 - cutoff + r*r);\n    }\n};\n\n/**\n * @property Repulsion.DEFAULT_OPTIONS\n * @type Object\n * @protected\n * @static\n */\nRepulsion.DEFAULT_OPTIONS = {\n\n    /**\n     * The strength of the force\n     *    Range : [0, 100]\n     * @attribute strength\n     * @type Number\n     * @default 1\n     */\n    strength : 1,\n\n    /**\n     * The location of the force, if not another physics body\n     *\n     * @attribute anchor\n     * @type Number\n     * @default 0.01\n     * @optional\n     */\n    anchor : undefined,\n\n    /**\n     * The range of the repulsive force\n     * @attribute radii\n     * @type Array\n     * @default [0, Infinity]\n     */\n    range : [0, Infinity],\n\n    /**\n     * A normalization for the force to avoid singularities at the origin\n     * @attribute cutoff\n     * @type Number\n     * @default 0\n     */\n    cutoff : 0,\n\n    /**\n     * The maximum magnitude of the force\n     *    Range : [0, Infinity]\n     * @attribute cap\n     * @type Number\n     * @default Infinity\n     */\n    cap : Infinity,\n\n    /**\n     * The type of decay the repulsive force should have\n     * @attribute decayFunction\n     * @type Function\n     */\n    decayFunction : Repulsion.DECAY_FUNCTIONS.GRAVITY\n};\n\n/*\n * Setter for options.\n *\n * @method setOptions\n * @param {Objects} options\n */\nRepulsion.prototype.setOptions = function setOptions(options) {\n    if (options.anchor !== undefined) {\n        if (options.anchor.position instanceof Vector) this.options.anchor = options.anchor.position;\n        if (options.anchor   instanceof Array)  this.options.anchor = new Vector(options.anchor);\n        delete options.anchor;\n    }\n    for (var key in options) this.options[key] = options[key];\n};\n\n/**\n * Adds a drag force to a physics body's force accumulator.\n *\n * @method applyForce\n * @param targets {Array.Body}  Array of bodies to apply force to.\n * @param source {Body}         The source of the force\n */\nRepulsion.prototype.applyForce = function applyForce(targets, source) {\n    var options     = this.options;\n    var force       = this.force;\n    var disp        = this.disp;\n\n    var strength    = options.strength;\n    var anchor      = options.anchor || source.position;\n    var cap         = options.cap;\n    var cutoff      = options.cutoff;\n    var rMin        = options.range[0];\n    var rMax        = options.range[1];\n    var decayFn     = options.decayFunction;\n\n    if (strength === 0) return;\n\n    var length = targets.length;\n    var particle;\n    var m1;\n    var p1;\n    var r;\n\n    while (length--) {\n        particle = targets[length];\n\n        if (particle === source) continue;\n\n        m1 = particle.mass;\n        p1 = particle.position;\n\n        disp.set(p1.sub(anchor));\n        r = disp.norm();\n\n        if (r < rMax && r > rMin) {\n            force.set(disp.normalize(strength * m1 * decayFn(r, cutoff)).cap(cap));\n            particle.applyForce(force);\n        }\n    }\n\n};\n\nmodule.exports = Repulsion;\n},{\"../../math/Vector\":41,\"./Force\":64}],66:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Drag = require('./Drag');\n\n/**\n * Rotational drag is a force that opposes angular velocity.\n *   Attach it to a physics body to slow down its rotation.\n *\n * @class RotationalDrag\n * @constructor\n * @extends Force\n * @param {Object} options options to set on drag\n */\nfunction RotationalDrag(options) {\n    Drag.call(this, options);\n}\n\nRotationalDrag.prototype = Object.create(Drag.prototype);\nRotationalDrag.prototype.constructor = RotationalDrag;\n\nRotationalDrag.DEFAULT_OPTIONS = Drag.DEFAULT_OPTIONS;\nRotationalDrag.FORCE_FUNCTIONS = Drag.FORCE_FUNCTIONS;\n\n/**\n * @property Repulsion.FORCE_FUNCTIONS\n * @type Object\n * @protected\n * @static\n */\nRotationalDrag.FORCE_FUNCTIONS = {\n\n    /**\n     * A drag force proprtional to the angular velocity\n     * @attribute LINEAR\n     * @type Function\n     * @param {Vector} angularVelocity\n     * @return {Vector} drag force\n     */\n    LINEAR : function(angularVelocity) {\n        return angularVelocity;\n    },\n\n    /**\n     * A drag force proprtional to the square of the angular velocity\n     * @attribute QUADRATIC\n     * @type Function\n     * @param {Vector} angularVelocity\n     * @return {Vector} drag force\n     */\n    QUADRATIC : function(angularVelocity) {\n        return angularVelocity.mult(angularVelocity.norm());\n    }\n};\n\n/**\n * Adds a rotational drag force to a physics body's torque accumulator.\n *\n * @method applyForce\n * @param targets {Array.Body} Array of bodies to apply drag force to.\n */\nRotationalDrag.prototype.applyForce = function applyForce(targets) {\n    var strength       = this.options.strength;\n    var forceFunction  = this.options.forceFunction;\n    var force          = this.force;\n\n    //TODO: rotational drag as function of inertia\n\n    var index;\n    var particle;\n\n    for (index = 0; index < targets.length; index++) {\n        particle = targets[index];\n        forceFunction(particle.angularVelocity).mult(-100*strength).put(force);\n        particle.applyTorque(force);\n    }\n};\n\n/*\n * Setter for options.\n *\n * @method setOptions\n * @param {Objects} options\n */\nRotationalDrag.prototype.setOptions = function setOptions(options) {\n    for (var key in options) this.options[key] = options[key];\n};\n\nmodule.exports = RotationalDrag;\n},{\"./Drag\":63}],67:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\n//TODO: test inheritance\nvar Force = require('./Force');\nvar Spring = require('./Spring');\nvar Quaternion = require('../../math/Quaternion');\n\n/**\n *  A force that rotates a physics body back to target Euler angles.\n *  Just as a spring translates a body to a particular X, Y, Z, location,\n *  a rotational spring rotates a body to a particular X, Y, Z Euler angle.\n *      Note: there is no physical agent that does this in the \"real world\"\n *\n *  @class RotationalSpring\n *  @constructor\n *  @extends Spring\n *  @param {Object} options options to set on drag\n */\nfunction RotationalSpring(options) {\n    Spring.call(this, options);\n}\n\nRotationalSpring.prototype = Object.create(Spring.prototype);\nRotationalSpring.prototype.constructor = RotationalSpring;\n\nRotationalSpring.DEFAULT_OPTIONS = Spring.DEFAULT_OPTIONS;\nRotationalSpring.FORCE_FUNCTIONS = Spring.FORCE_FUNCTIONS;\n\n/** @const */\nvar pi = Math.PI;\n\nfunction _calcStiffness() {\n    var options = this.options;\n    options.stiffness = Math.pow(2 * pi / options.period, 2);\n}\n\nfunction _calcDamping() {\n    var options = this.options;\n    options.damping = 4 * pi * options.dampingRatio / options.period;\n}\n\nfunction _init() {\n    _calcStiffness.call(this);\n    _calcDamping.call(this);\n}\n\nRotationalSpring.prototype.setOptions = function setOptions(options) {\n    // TODO fix no-console error\n    /* eslint no-console: 0 */\n\n    if (options.anchor !== undefined) {\n        if (options.anchor instanceof Quaternion) this.options.anchor = options.anchor;\n        if (options.anchor  instanceof Array) this.options.anchor = new Quaternion(options.anchor);\n    }\n\n    if (options.period !== undefined){\n        this.options.period = options.period;\n    }\n\n    if (options.dampingRatio !== undefined) this.options.dampingRatio = options.dampingRatio;\n    if (options.length !== undefined) this.options.length = options.length;\n    if (options.forceFunction !== undefined) this.options.forceFunction = options.forceFunction;\n    if (options.maxLength !== undefined) this.options.maxLength = options.maxLength;\n\n    _init.call(this);\n    Force.prototype.setOptions.call(this, options);\n};\n\n/**\n * Adds a torque force to a physics body's torque accumulator.\n *\n * @method applyForce\n * @param targets {Array.Body} Array of bodies to apply torque to.\n */\nRotationalSpring.prototype.applyForce = function applyForce(targets) {\n    var force = this.force;\n    var options = this.options;\n    var disp = this.disp;\n\n    var stiffness = options.stiffness;\n    var damping = options.damping;\n    var restLength = options.length;\n    var anchor = options.anchor;\n    var forceFunction = options.forceFunction;\n    var maxLength = options.maxLength;\n\n    var i;\n    var target;\n    var dist;\n    var m;\n\n    for (i = 0; i < targets.length; i++) {\n        target = targets[i];\n\n        disp.set(anchor.sub(target.orientation));\n        dist = disp.norm() - restLength;\n\n        if (dist === 0) return;\n\n        //if dampingRatio specified, then override strength and damping\n        m      = target.mass;\n        stiffness *= m;\n        damping   *= m;\n\n        force.set(disp.normalize(stiffness * forceFunction(dist, maxLength)));\n\n        if (damping) force.add(target.angularVelocity.mult(-damping)).put(force);\n\n        target.applyTorque(force);\n    }\n};\n\n/**\n * Calculates the potential energy of the rotational spring.\n *\n * @method getEnergy\n * @param [targets] target The physics body attached to the spring\n */\nRotationalSpring.prototype.getEnergy = function getEnergy(targets) {\n    var options     = this.options;\n    var restLength  = options.length;\n    var anchor      = options.anchor;\n    var strength    = options.stiffness;\n\n    var energy = 0.0;\n    for (var i = 0; i < targets.length; i++) {\n        var target = targets[i];\n        var dist = anchor.sub(target.orientation).norm() - restLength;\n        energy += 0.5 * strength * dist * dist;\n    }\n    return energy;\n};\n\nmodule.exports = RotationalSpring;\n},{\"../../math/Quaternion\":38,\"./Force\":64,\"./Spring\":68}],68:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\n/*global console */\n\nvar Force = require('./Force');\nvar Vector = require('../../math/Vector');\n\n/**\n *  A force that moves a physics body to a location with a spring motion.\n *    The body can be moved to another physics body, or an anchor point.\n *\n *  @class Spring\n *  @constructor\n *  @extends Force\n *  @param {Object} options options to set on drag\n */\nfunction Spring(options) {\n    Force.call(this);\n\n    this.options = Object.create(this.constructor.DEFAULT_OPTIONS);\n    if (options) this.setOptions(options);\n\n    //registers\n    this.disp = new Vector(0,0,0);\n\n    _init.call(this);\n}\n\nSpring.prototype = Object.create(Force.prototype);\nSpring.prototype.constructor = Spring;\n\n/** @const */\nvar pi = Math.PI;\nvar MIN_PERIOD = 150;\n\n/**\n * @property Spring.FORCE_FUNCTIONS\n * @type Object\n * @protected\n * @static\n */\nSpring.FORCE_FUNCTIONS = {\n\n    /**\n     * A FENE (Finitely Extensible Nonlinear Elastic) spring force\n     *      see: http://en.wikipedia.org/wiki/FENE\n     * @attribute FENE\n     * @type Function\n     * @param {Number} dist current distance target is from source body\n     * @param {Number} rMax maximum range of influence\n     * @return {Number} unscaled force\n     */\n    FENE : function(dist, rMax) {\n        var rMaxSmall = rMax * .99;\n        var r = Math.max(Math.min(dist, rMaxSmall), -rMaxSmall);\n        return r / (1 - r * r/(rMax * rMax));\n    },\n\n    /**\n     * A Hookean spring force, linear in the displacement\n     *      see: http://en.wikipedia.org/wiki/Hooke's_law\n     * @attribute FENE\n     * @type Function\n     * @param {Number} dist current distance target is from source body\n     * @return {Number} unscaled force\n     */\n    HOOK : function(dist) {\n        return dist;\n    }\n};\n\n/**\n * @property Spring.DEFAULT_OPTIONS\n * @type Object\n * @protected\n * @static\n */\nSpring.DEFAULT_OPTIONS = {\n\n    /**\n     * The amount of time in milliseconds taken for one complete oscillation\n     * when there is no damping\n     *    Range : [150, Infinity]\n     * @attribute period\n     * @type Number\n     * @default 300\n     */\n    period : 300,\n\n    /**\n     * The damping of the spring.\n     *    Range : [0, 1]\n     *    0 = no damping, and the spring will oscillate forever\n     *    1 = critically damped (the spring will never oscillate)\n     * @attribute dampingRatio\n     * @type Number\n     * @default 0.1\n     */\n    dampingRatio : 0.1,\n\n    /**\n     * The rest length of the spring\n     *    Range : [0, Infinity]\n     * @attribute length\n     * @type Number\n     * @default 0\n     */\n    length : 0,\n\n    /**\n     * The maximum length of the spring (for a FENE spring)\n     *    Range : [0, Infinity]\n     * @attribute length\n     * @type Number\n     * @default Infinity\n     */\n    maxLength : Infinity,\n\n    /**\n     * The location of the spring's anchor, if not another physics body\n     *\n     * @attribute anchor\n     * @type Array\n     * @optional\n     */\n    anchor : undefined,\n\n    /**\n     * The type of spring force\n     * @attribute forceFunction\n     * @type Function\n     */\n    forceFunction : Spring.FORCE_FUNCTIONS.HOOK\n};\n\nfunction _calcStiffness() {\n    var options = this.options;\n    options.stiffness = Math.pow(2 * pi / options.period, 2);\n}\n\nfunction _calcDamping() {\n    var options = this.options;\n    options.damping = 4 * pi * options.dampingRatio / options.period;\n}\n\nfunction _init() {\n    _calcStiffness.call(this);\n    _calcDamping.call(this);\n}\n\n/**\n * Basic options setter\n *\n * @method setOptions\n * @param options {Object}\n */\nSpring.prototype.setOptions = function setOptions(options) {\n    // TODO fix no-console error\n    /* eslint no-console: 0 */\n\n    if (options.anchor !== undefined) {\n        if (options.anchor.position instanceof Vector) this.options.anchor = options.anchor.position;\n        if (options.anchor instanceof Vector) this.options.anchor = options.anchor;\n        if (options.anchor instanceof Array)  this.options.anchor = new Vector(options.anchor);\n    }\n\n    if (options.period !== undefined){\n        if (options.period < MIN_PERIOD) {\n            options.period = MIN_PERIOD;\n            console.warn('The period of a SpringTransition is capped at ' + MIN_PERIOD + ' ms. Use a SnapTransition for faster transitions');\n        }\n        this.options.period = options.period;\n    }\n\n    if (options.dampingRatio !== undefined) this.options.dampingRatio = options.dampingRatio;\n    if (options.length !== undefined) this.options.length = options.length;\n    if (options.forceFunction !== undefined) this.options.forceFunction = options.forceFunction;\n    if (options.maxLength !== undefined) this.options.maxLength = options.maxLength;\n\n    _init.call(this);\n    Force.prototype.setOptions.call(this, options);\n};\n\n/**\n * Adds a spring force to a physics body's force accumulator.\n *\n * @method applyForce\n * @param targets {Array.Body} Array of bodies to apply force to.\n */\nSpring.prototype.applyForce = function applyForce(targets, source) {\n    var force = this.force;\n    var disp = this.disp;\n    var options = this.options;\n\n    var stiffness = options.stiffness;\n    var damping = options.damping;\n    var restLength = options.length;\n    var maxLength = options.maxLength;\n    var anchor = options.anchor || source.position;\n    var forceFunction = options.forceFunction;\n\n    var i;\n    var target;\n    var p2;\n    var v2;\n    var dist;\n    var m;\n\n    for (i = 0; i < targets.length; i++) {\n        target = targets[i];\n        p2 = target.position;\n        v2 = target.velocity;\n\n        anchor.sub(p2).put(disp);\n        dist = disp.norm() - restLength;\n\n        if (dist === 0) return;\n\n        //if dampingRatio specified, then override strength and damping\n        m      = target.mass;\n        stiffness *= m;\n        damping   *= m;\n\n        disp.normalize(stiffness * forceFunction(dist, maxLength))\n            .put(force);\n\n        if (damping)\n            if (source) force.add(v2.sub(source.velocity).mult(-damping)).put(force);\n            else force.add(v2.mult(-damping)).put(force);\n\n        target.applyForce(force);\n        if (source) source.applyForce(force.mult(-1));\n    }\n};\n\n/**\n * Calculates the potential energy of the spring.\n *\n * @method getEnergy\n * @param [targets] target  The physics body attached to the spring\n * @return {source}         The potential energy of the spring\n */\nSpring.prototype.getEnergy = function getEnergy(targets, source) {\n    var options     = this.options;\n    var restLength  = options.length;\n    var anchor      = (source) ? source.position : options.anchor;\n    var strength    = options.stiffness;\n\n    var energy = 0.0;\n    for (var i = 0; i < targets.length; i++){\n        var target = targets[i];\n        var dist = anchor.sub(target.position).norm() - restLength;\n        energy += 0.5 * strength * dist * dist;\n    }\n    return energy;\n};\n\nmodule.exports = Spring;\n},{\"../../math/Vector\":41,\"./Force\":64}],69:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Force = require('./Force');\nvar Vector = require('../../math/Vector');\n\n/**\n *  A force that moves a physics body to a location with a spring motion.\n *    The body can be moved to another physics body, or an anchor point.\n *\n *  @class VectorField\n *  @constructor\n *  @extends Force\n *  @param {Object} options options to set on drag\n */\nfunction VectorField(options) {\n    Force.call(this);\n\n    this.options = Object.create(VectorField.DEFAULT_OPTIONS);\n    if (options) this.setOptions(options);\n\n    //registers\n    this.evaluation = new Vector();\n}\n\nVectorField.prototype = Object.create(Force.prototype);\nVectorField.prototype.constructor = VectorField;\n\n/**\n * @property Spring.FORCE_FUNCTIONS\n * @type Object\n * @protected\n * @static\n */\nVectorField.FIELDS = {\n    /**\n     * Constant force, e.g., gravity\n     * @attribute CONSTANT\n     * @type Function\n     * @param v {Vector}        Current position of physics body\n     * @param options {Object}  The direction of the force\n     *      Pass a {direction : Vector} into the VectorField options\n     * @return {Number} unscaled force\n     */\n    CONSTANT : function(v, options) {\n        options.direction.put(this.evaluation);\n    },\n\n    /**\n     * Linear force\n     * @attribute LINEAR\n     * @type Function\n     * @param v {Vector} Current position of physics body\n     * @return {Vector} unscaled force\n     */\n    LINEAR : function(v) {\n        v.put(this.evaluation);\n    },\n\n    /**\n     * Radial force, e.g., Hookean spring\n     * @attribute RADIAL\n     * @type Function\n     * @param v {Vector} Current position of physics body\n     * @return {Vector} unscaled force\n     */\n    RADIAL : function(v) {\n        v.mult(-1).put(this.evaluation);\n    },\n\n    /**\n     * Point attractor force, e.g., Hookean spring with an anchor\n     * @attribute POINT_ATTRACTOR\n     * @type Function\n     * @param v {Vector}        Current position of physics body\n     * @param options {Object}  And object with the position of the attractor\n     *      Pass a {position : Vector} into the VectorField options\n     * @return {Vector} unscaled force\n     */\n    POINT_ATTRACTOR : function(v, options) {\n        options.position.sub(v).put(this.evaluation);\n    }\n};\n\n/**\n * @property VectorField.DEFAULT_OPTIONS\n * @type Object\n * @protected\n * @static\n */\nVectorField.DEFAULT_OPTIONS = {\n\n    /**\n     * The strength of the force\n     *    Range : [0, 10]\n     * @attribute strength\n     * @type Number\n     * @default .01\n     */\n    strength : .01,\n\n    /**\n     * Type of vectorfield\n     *    Range : [0, 100]\n     * @attribute field\n     * @type Function\n     */\n    field : VectorField.FIELDS.CONSTANT\n};\n\n/**\n * Basic options setter\n *\n * @method setOptions\n * @param {Objects} options\n */\nVectorField.prototype.setOptions = function setOptions(options) {\n    if (options.strength !== undefined) this.options.strength = options.strength;\n    if (options.field !== undefined) {\n        this.options.field = options.field;\n        _setFieldOptions.call(this, this.options.field);\n    }\n};\n\nfunction _setFieldOptions(field) {\n    var FIELDS = VectorField.FIELDS;\n\n    switch (field) {\n        case FIELDS.CONSTANT:\n            if (!this.options.direction) this.options.direction = new Vector(0,1,0);\n            else if (this.options.direction instanceof Array) this.options.direction = new Vector(this.options.direction);\n            break;\n        case FIELDS.POINT_ATTRACTOR:\n            if (!this.options.position) this.options.position = new Vector(0,0,0);\n            else if (this.options.position instanceof Array) this.options.position = new Vector(this.options.position);\n            break;\n    }\n}\n\n/**\n * Adds the VectorField's force to a physics body's force accumulator.\n *\n * @method applyForce\n * @param targets {Array.body} Array of bodies to apply force to.\n */\nVectorField.prototype.applyForce = function applyForce(targets) {\n    var force = this.force;\n    var strength = this.options.strength;\n    var field = this.options.field;\n\n    var i;\n    var target;\n\n    for (i = 0; i < targets.length; i++) {\n        target = targets[i];\n        field.call(this, target.position, this.options);\n        this.evaluation.mult(target.mass * strength).put(force);\n        target.applyForce(force);\n    }\n};\n\nVectorField.prototype.getEnergy = function getEnergy(targets) {\n    var field = this.options.field;\n    var FIELDS = VectorField.FIELDS;\n\n    var energy = 0;\n\n    var i;\n    var target;\n    switch (field) {\n        case FIELDS.CONSTANT:\n            energy = targets.length * this.options.direction.norm();\n            break;\n        case FIELDS.RADIAL:\n            for (i = 0; i < targets.length; i++){\n                target = targets[i];\n                energy += target.position.norm();\n            }\n            break;\n        case FIELDS.POINT_ATTRACTOR:\n            for (i = 0; i < targets.length; i++){\n                target = targets[i];\n                energy += target.position.sub(this.options.position).norm();\n            }\n            break;\n    }\n    energy *= this.options.strength;\n    return energy;\n};\n\nmodule.exports = VectorField;\n},{\"../../math/Vector\":41,\"./Force\":64}],70:[function(require,module,exports){\nmodule.exports = {\n  Drag: require('./Drag'),\n  Force: require('./Force'),\n  Repulsion: require('./Repulsion'),\n  RotationalDrag: require('./RotationalDrag'),\n  RotationalSpring: require('./RotationalSpring'),\n  Spring: require('./Spring'),\n  VectorField: require('./VectorField')\n};\n\n},{\"./Drag\":63,\"./Force\":64,\"./Repulsion\":65,\"./RotationalDrag\":66,\"./RotationalSpring\":67,\"./Spring\":68,\"./VectorField\":69}],71:[function(require,module,exports){\nmodule.exports = {\n  PhysicsEngine: require('./PhysicsEngine'),\n  bodies: require('./bodies'),\n  constraints: require('./constraints'),\n  forces: require('./forces'),\n  integrators: require('./integrators')\n};\n\n},{\"./PhysicsEngine\":48,\"./bodies\":53,\"./constraints\":62,\"./forces\":70,\"./integrators\":73}],72:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\n\n\n\n/**\n * Ordinary Differential Equation (ODE) Integrator.\n * Manages updating a physics body's state over time.\n *\n *  p = position, v = velocity, m = mass, f = force, dt = change in time\n *\n *      v <- v + dt * f / m\n *      p <- p + dt * v\n *\n *  q = orientation, w = angular velocity, L = angular momentum\n *\n *      L <- L + dt * t\n *      q <- q + dt/2 * q * w\n *\n * @class SymplecticEuler\n * @constructor\n * @param {Object} options Options to set\n */\nvar SymplecticEuler = {};\n\n/*\n * Updates the velocity of a physics body from its accumulated force.\n *      v <- v + dt * f / m\n *\n * @method integrateVelocity\n * @param {Body} physics body\n * @param {Number} dt delta time\n */\nSymplecticEuler.integrateVelocity = function integrateVelocity(body, dt) {\n    var v = body.velocity;\n    var w = body.inverseMass;\n    var f = body.force;\n\n    if (f.isZero()) return;\n\n    v.add(f.mult(dt * w)).put(v);\n    f.clear();\n};\n\n/*\n * Updates the position of a physics body from its velocity.\n *      p <- p + dt * v\n *\n * @method integratePosition\n * @param {Body} physics body\n * @param {Number} dt delta time\n */\nSymplecticEuler.integratePosition = function integratePosition(body, dt) {\n    var p = body.position;\n    var v = body.velocity;\n\n    p.add(v.mult(dt)).put(p);\n};\n\n/*\n * Updates the angular momentum of a physics body from its accumuled torque.\n *      L <- L + dt * t\n *\n * @method integrateAngularMomentum\n * @param {Body} physics body (except a particle)\n * @param {Number} dt delta time\n */\nSymplecticEuler.integrateAngularMomentum = function integrateAngularMomentum(body, dt) {\n    var L = body.angularMomentum;\n    var t = body.torque;\n\n    if (t.isZero()) return;\n\n    L.add(t.mult(dt)).put(L);\n    t.clear();\n};\n\n/*\n * Updates the orientation of a physics body from its angular velocity.\n *      q <- q + dt/2 * q * w\n *\n * @method integrateOrientation\n * @param {Body} physics body (except a particle)\n * @param {Number} dt delta time\n */\nSymplecticEuler.integrateOrientation = function integrateOrientation(body, dt) {\n    var q = body.orientation;\n    var w = body.angularVelocity;\n\n    if (w.isZero()) return;\n    q.add(q.multiply(w).scalarMultiply(0.5 * dt)).put(q);\n//        q.normalize.put(q);\n};\n\nmodule.exports = SymplecticEuler;\n},{}],73:[function(require,module,exports){\nmodule.exports = {\n  SymplecticEuler: require('./SymplecticEuler')\n};\n\n},{\"./SymplecticEuler\":72}],74:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Surface = require('../core/Surface');\n\n/**\n * A surface containing an HTML5 Canvas element.\n *   This extends the Surface class.\n *\n * @class CanvasSurface\n * @extends Surface\n * @constructor\n * @param {Object} [options] overrides of default options\n * @param {Array.Number} [options.canvasSize] [width, height] for document element\n */\nfunction CanvasSurface(options) {\n    if (options && options.canvasSize) this._canvasSize = options.canvasSize;\n    Surface.apply(this, arguments);\n    if (!this._canvasSize) this._canvasSize = this.getSize();\n    this._backBuffer = document.createElement('canvas');\n    if (this._canvasSize) {\n        this._backBuffer.width = this._canvasSize[0];\n        this._backBuffer.height = this._canvasSize[1];\n    }\n    this._contextId = undefined;\n}\n\nCanvasSurface.prototype = Object.create(Surface.prototype);\nCanvasSurface.prototype.constructor = CanvasSurface;\nCanvasSurface.prototype.elementType = 'canvas';\nCanvasSurface.prototype.elementClass = 'famous-surface';\n\n/**\n * Set inner document content.  Note that this is a noop for CanvasSurface.\n *\n * @method setContent\n *\n */\nCanvasSurface.prototype.setContent = function setContent() {};\n\n/**\n * Place the document element this component manages into the document.\n *    This will draw the content to the document.\n *\n * @private\n * @method deploy\n * @param {Node} target document parent of this container\n */\nCanvasSurface.prototype.deploy = function deploy(target) {\n    if (this._canvasSize) {\n        target.width = this._canvasSize[0];\n        target.height = this._canvasSize[1];\n    }\n    if (this._contextId === '2d') {\n        target.getContext(this._contextId).drawImage(this._backBuffer, 0, 0);\n        this._backBuffer.width = 0;\n        this._backBuffer.height = 0;\n    }\n};\n\n/**\n * Remove this component and contained content from the document\n *\n * @private\n * @method recall\n *\n * @param {Node} target node to which the component was deployed\n */\nCanvasSurface.prototype.recall = function recall(target) {\n    var size = this.getSize();\n\n    this._backBuffer.width = target.width;\n    this._backBuffer.height = target.height;\n\n    if (this._contextId === '2d') {\n        this._backBuffer.getContext(this._contextId).drawImage(target, 0, 0);\n        target.width = 0;\n        target.height = 0;\n    }\n};\n\n/**\n * Returns the canvas element's context\n *\n * @method getContext\n * @param {string} contextId context identifier\n */\nCanvasSurface.prototype.getContext = function getContext(contextId) {\n    this._contextId = contextId;\n    return this._currentTarget ? this._currentTarget.getContext(contextId) : this._backBuffer.getContext(contextId);\n};\n\n/**\n *  Set the size of the surface and canvas element.\n *\n *  @method setSize\n *  @param {Array.number} size [width, height] of surface\n *  @param {Array.number} canvasSize [width, height] of canvas surface\n */\nCanvasSurface.prototype.setSize = function setSize(size, canvasSize) {\n    Surface.prototype.setSize.apply(this, arguments);\n    if (canvasSize) this._canvasSize = [canvasSize[0], canvasSize[1]];\n    if (this._currentTarget) {\n        this._currentTarget.width = this._canvasSize[0];\n        this._currentTarget.height = this._canvasSize[1];\n    }\n};\n\nmodule.exports = CanvasSurface;\n},{\"../core/Surface\":14}],75:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Surface = require('../core/Surface');\nvar Context = require('../core/Context');\n\n/**\n * ContainerSurface is an object designed to contain surfaces and\n *   set properties to be applied to all of them at once.\n *   This extends the Surface class.\n *   A container surface will enforce these properties on the\n *   surfaces it contains:\n *\n *   size (clips contained surfaces to its own width and height);\n *\n *   origin;\n *\n *   its own opacity and transform, which will be automatically\n *   applied to  all Surfaces contained directly and indirectly.\n *\n * @class ContainerSurface\n * @extends Surface\n * @constructor\n * @param {Array.Number} [options.size] [width, height] in pixels\n * @param {Array.string} [options.classes] CSS classes to set on all inner content\n * @param {Array} [options.properties] string dictionary of HTML attributes to set on target div\n * @param {string} [options.content] inner (HTML) content of surface (should not be used)\n */\nfunction ContainerSurface(options) {\n    Surface.call(this, options);\n    this._container = document.createElement('div');\n    this._container.classList.add('famous-group');\n    this._container.classList.add('famous-container-group');\n    this._shouldRecalculateSize = false;\n    this.context = new Context(this._container);\n    this.setContent(this._container);\n}\n\nContainerSurface.prototype = Object.create(Surface.prototype);\nContainerSurface.prototype.constructor = ContainerSurface;\nContainerSurface.prototype.elementType = 'div';\nContainerSurface.prototype.elementClass = 'famous-surface';\n\n/**\n * Add renderables to this object's render tree\n *\n * @method add\n *\n * @param {Object} obj renderable object\n * @return {RenderNode} RenderNode wrapping this object, if not already a RenderNode\n */\nContainerSurface.prototype.add = function add() {\n    return this.context.add.apply(this.context, arguments);\n};\n\n/**\n * Return spec for this surface.  Note: Can result in a size recalculation.\n *\n * @private\n * @method render\n *\n * @return {Object} render spec for this surface (spec id)\n */\nContainerSurface.prototype.render = function render() {\n    if (this._sizeDirty) this._shouldRecalculateSize = true;\n    return Surface.prototype.render.apply(this, arguments);\n};\n\n/**\n * Place the document element this component manages into the document.\n *\n * @private\n * @method deploy\n * @param {Node} target document parent of this container\n */\nContainerSurface.prototype.deploy = function deploy() {\n    this._shouldRecalculateSize = true;\n    return Surface.prototype.deploy.apply(this, arguments);\n};\n\n/**\n * Apply changes from this component to the corresponding document element.\n * This includes changes to classes, styles, size, content, opacity, origin,\n * and matrix transforms.\n *\n * @private\n * @method commit\n * @param {Context} context commit context\n * @param {Transform} transform unused TODO\n * @param {Number} opacity  unused TODO\n * @param {Array.Number} origin unused TODO\n * @param {Array.Number} size unused TODO\n * @return {undefined} TODO returns an undefined value\n */\nContainerSurface.prototype.commit = function commit(context, transform, opacity, origin, size) {\n    var previousSize = this._size ? [this._size[0], this._size[1]] : null;\n    var result = Surface.prototype.commit.apply(this, arguments);\n    if (this._shouldRecalculateSize || (previousSize && (this._size[0] !== previousSize[0] || this._size[1] !== previousSize[1]))) {\n        this.context.setSize();\n        this._shouldRecalculateSize = false;\n    }\n    this.context.update();\n    return result;\n};\n\nmodule.exports = ContainerSurface;\n},{\"../core/Context\":1,\"../core/Surface\":14}],76:[function(require,module,exports){\nvar ContainerSurface = require('./ContainerSurface');\n\nfunction FormContainerSurface(options) {\n    if (options) this._method = options.method || '';\n    ContainerSurface.apply(this, arguments);\n}\n\nFormContainerSurface.prototype = Object.create(ContainerSurface.prototype);\nFormContainerSurface.prototype.constructor = FormContainerSurface;\n\nFormContainerSurface.prototype.elementType = 'form';\n\nFormContainerSurface.prototype.deploy = function deploy(target) {\n    if (this._method) target.method = this._method;\n    return ContainerSurface.prototype.deploy.apply(this, arguments);\n};\n\nmodule.exports = FormContainerSurface;\n},{\"./ContainerSurface\":75}],77:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Surface = require('../core/Surface');\n\n/**\n * A surface containing image content.\n *   This extends the Surface class.\n *\n * @class ImageSurface\n *\n * @extends Surface\n * @constructor\n * @param {Object} [options] overrides of default options\n */\nfunction ImageSurface(options) {\n    this._imageUrl = undefined;\n    Surface.apply(this, arguments);\n}\n\nvar urlCache = [];\nvar countCache = [];\nvar nodeCache = [];\nvar cacheEnabled = true;\n\nImageSurface.enableCache = function enableCache() {\n    cacheEnabled = true;\n};\n\nImageSurface.disableCache = function disableCache() {\n    cacheEnabled = false;\n};\n\nImageSurface.clearCache = function clearCache() {\n    urlCache = [];\n    countCache = [];\n    nodeCache = [];\n};\n\nImageSurface.getCache = function getCache() {\n    return {\n        urlCache: urlCache,\n        countCache: countCache,\n        nodeCache: countCache\n    };\n};\n\nImageSurface.prototype = Object.create(Surface.prototype);\nImageSurface.prototype.constructor = ImageSurface;\nImageSurface.prototype.elementType = 'img';\nImageSurface.prototype.elementClass = 'famous-surface';\n\n/**\n * Set content URL.  This will cause a re-rendering.\n * @method setContent\n * @param {string} imageUrl\n */\nImageSurface.prototype.setContent = function setContent(imageUrl) {\n    var urlIndex = urlCache.indexOf(this._imageUrl);\n    if (urlIndex !== -1) {\n        if (countCache[urlIndex] === 1) {\n            urlCache.splice(urlIndex, 1);\n            countCache.splice(urlIndex, 1);\n            nodeCache.splice(urlIndex, 1);\n        } else {\n            countCache[urlIndex]--;\n        }\n    }\n\n    urlIndex = urlCache.indexOf(imageUrl);\n    if (urlIndex === -1) {\n        urlCache.push(imageUrl);\n        countCache.push(1);\n    }\n    else {\n        countCache[urlIndex]++;\n    }\n\n    this._imageUrl = imageUrl;\n    this._contentDirty = true;\n};\n\n/**\n * Place the document element that this component manages into the document.\n *\n * @private\n * @method deploy\n * @param {Node} target document parent of this container\n */\nImageSurface.prototype.deploy = function deploy(target) {\n    var urlIndex = urlCache.indexOf(this._imageUrl);\n    if (nodeCache[urlIndex] === undefined && cacheEnabled) {\n        var img = new Image();\n        img.src = this._imageUrl || '';\n        nodeCache[urlIndex] = img;\n    }\n\n    target.src = this._imageUrl || '';\n};\n\n/**\n * Remove this component and contained content from the document\n *\n * @private\n * @method recall\n *\n * @param {Node} target node to which the component was deployed\n */\nImageSurface.prototype.recall = function recall(target) {\n    target.src = '';\n};\n\nmodule.exports = ImageSurface;\n},{\"../core/Surface\":14}],78:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Surface = require('../core/Surface');\n\n/**\n * A Famo.us surface in the form of an HTML input element.\n *   This extends the Surface class.\n *\n * @class InputSurface\n * @extends Surface\n * @constructor\n * @param {Object} [options] overrides of default options\n * @param {string} [options.placeholder] placeholder text hint that describes the expected value of an <input> element\n * @param {string} [options.type] specifies the type of element to display (e.g. 'datetime', 'text', 'button', etc.)\n * @param {string} [options.value] value of text\n */\nfunction InputSurface(options) {\n    this._placeholder = options.placeholder || '';\n    this._value       = options.value || '';\n    this._type        = options.type || 'text';\n    this._name        = options.name || '';\n\n    Surface.apply(this, arguments);\n\n    this.on('click', this.focus.bind(this));\n    window.addEventListener('click', function(event) {\n        if (event.target !== this._currentTarget) this.blur();\n    }.bind(this));\n}\nInputSurface.prototype = Object.create(Surface.prototype);\nInputSurface.prototype.constructor = InputSurface;\n\nInputSurface.prototype.elementType = 'input';\nInputSurface.prototype.elementClass = 'famous-surface';\n\n/**\n * Set placeholder text.  Note: Triggers a repaint.\n *\n * @method setPlaceholder\n * @param {string} str Value to set the placeholder to.\n * @return {InputSurface} this, allowing method chaining.\n */\nInputSurface.prototype.setPlaceholder = function setPlaceholder(str) {\n    this._placeholder = str;\n    this._contentDirty = true;\n    return this;\n};\n\n/**\n * Focus on the current input, pulling up the keyboard on mobile.\n *\n * @method focus\n * @return {InputSurface} this, allowing method chaining.\n */\nInputSurface.prototype.focus = function focus() {\n    if (this._currentTarget) this._currentTarget.focus();\n    return this;\n};\n\n/**\n * Blur the current input, hiding the keyboard on mobile.\n *\n * @method blur\n * @return {InputSurface} this, allowing method chaining.\n */\nInputSurface.prototype.blur = function blur() {\n    if (this._currentTarget) this._currentTarget.blur();\n    return this;\n};\n\n/**\n * Set the placeholder conent.\n *   Note: Triggers a repaint next tick.\n *\n * @method setValue\n * @param {string} str Value to set the main input value to.\n * @return {InputSurface} this, allowing method chaining.\n */\nInputSurface.prototype.setValue = function setValue(str) {\n    this._value = str;\n    this._contentDirty = true;\n    return this;\n};\n\n/**\n * Set the type of element to display conent.\n *   Note: Triggers a repaint next tick.\n *\n * @method setType\n * @param {string} str type of the input surface (e.g. 'button', 'text')\n * @return {InputSurface} this, allowing method chaining.\n */\nInputSurface.prototype.setType = function setType(str) {\n    this._type = str;\n    this._contentDirty = true;\n    return this;\n};\n\n/**\n * Get the value of the inner content of the element (e.g. the entered text)\n *\n * @method getValue\n * @return {string} value of element\n */\nInputSurface.prototype.getValue = function getValue() {\n    if (this._currentTarget) {\n        return this._currentTarget.value;\n    }\n    else {\n        return this._value;\n    }\n};\n\n/**\n * Set the name attribute of the element.\n *   Note: Triggers a repaint next tick.\n *\n * @method setName\n * @param {string} str element name\n * @return {InputSurface} this, allowing method chaining.\n */\nInputSurface.prototype.setName = function setName(str) {\n    this._name = str;\n    this._contentDirty = true;\n    return this;\n};\n\n/**\n * Get the name attribute of the element.\n *\n * @method getName\n * @return {string} name of element\n */\nInputSurface.prototype.getName = function getName() {\n    return this._name;\n};\n\n/**\n * Place the document element this component manages into the document.\n *\n * @private\n * @method deploy\n * @param {Node} target document parent of this container\n */\nInputSurface.prototype.deploy = function deploy(target) {\n    if (this._placeholder !== '') target.placeholder = this._placeholder;\n    target.value = this._value;\n    target.type = this._type;\n    target.name = this._name;\n};\n\nmodule.exports = InputSurface;\n},{\"../core/Surface\":14}],79:[function(require,module,exports){\nvar InputSurface = require('./InputSurface');\n\nfunction SubmitInputSurface(options) {\n    InputSurface.apply(this, arguments);\n    this._type = 'submit';\n    if (options && options.onClick) this.setOnClick(options.onClick);\n}\n\nSubmitInputSurface.prototype = Object.create(InputSurface.prototype);\nSubmitInputSurface.prototype.constructor = SubmitInputSurface;\n\nSubmitInputSurface.prototype.setOnClick = function(onClick) {\n    this.onClick = onClick;\n};\n\nSubmitInputSurface.prototype.deploy = function deploy(target) {\n    if (this.onclick) target.onClick = this.onClick;\n    InputSurface.prototype.deploy.apply(this, arguments);\n};\n\nmodule.exports = SubmitInputSurface;\n},{\"./InputSurface\":78}],80:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Surface = require('../core/Surface');\n\n/**\n * A Famo.us surface in the form of an HTML textarea element.\n *   This extends the Surface class.\n *\n * @class TextareaSurface\n * @extends Surface\n * @constructor\n * @param {Object} [options] overrides of default options\n * @param {string} [options.placeholder] placeholder text hint that describes the expected value of an textarea element\n * @param {string} [options.value] value of text\n * @param {string} [options.name] specifies the name of textarea\n * @param {string} [options.wrap] specify 'hard' or 'soft' wrap for textarea\n * @param {number} [options.cols] number of columns in textarea\n * @param {number} [options.rows] number of rows in textarea\n */\nfunction TextareaSurface(options) {\n    this._placeholder = options.placeholder || '';\n    this._value       = options.value || '';\n    this._name        = options.name || '';\n    this._wrap        = options.wrap || '';\n    this._cols        = options.cols || '';\n    this._rows        = options.rows || '';\n\n    Surface.apply(this, arguments);\n    this.on('click', this.focus.bind(this));\n}\nTextareaSurface.prototype = Object.create(Surface.prototype);\nTextareaSurface.prototype.constructor = TextareaSurface;\n\nTextareaSurface.prototype.elementType = 'textarea';\nTextareaSurface.prototype.elementClass = 'famous-surface';\n\n/**\n * Set placeholder text.  Note: Triggers a repaint.\n *\n * @method setPlaceholder\n * @param {string} str Value to set the placeholder to.\n * @return {TextareaSurface} this, allowing method chaining.\n */\nTextareaSurface.prototype.setPlaceholder = function setPlaceholder(str) {\n    this._placeholder = str;\n    this._contentDirty = true;\n    return this;\n};\n\n/**\n * Focus on the current input, pulling up the keyboard on mobile.\n *\n * @method focus\n * @return {TextareaSurface} this, allowing method chaining.\n */\nTextareaSurface.prototype.focus = function focus() {\n    if (this._currentTarget) this._currentTarget.focus();\n    return this;\n};\n\n/**\n * Blur the current input, hiding the keyboard on mobile.\n *\n * @method focus\n * @return {TextareaSurface} this, allowing method chaining.\n */\nTextareaSurface.prototype.blur = function blur() {\n    if (this._currentTarget) this._currentTarget.blur();\n    return this;\n};\n\n/**\n * Set the value of textarea.\n *   Note: Triggers a repaint next tick.\n *\n * @method setValue\n * @param {string} str Value to set the main textarea value to.\n * @return {TextareaSurface} this, allowing method chaining.\n */\nTextareaSurface.prototype.setValue = function setValue(str) {\n    this._value = str;\n    this._contentDirty = true;\n    return this;\n};\n\n/**\n * Get the value of the inner content of the textarea (e.g. the entered text)\n *\n * @method getValue\n * @return {string} value of element\n */\nTextareaSurface.prototype.getValue = function getValue() {\n    if (this._currentTarget) {\n        return this._currentTarget.value;\n    }\n    else {\n        return this._value;\n    }\n};\n\n/**\n * Set the name attribute of the element.\n *   Note: Triggers a repaint next tick.\n *\n * @method setName\n * @param {string} str element name\n * @return {TextareaSurface} this, allowing method chaining.\n */\nTextareaSurface.prototype.setName = function setName(str) {\n    this._name = str;\n    this._contentDirty = true;\n    return this;\n};\n\n/**\n * Get the name attribute of the element.\n *\n * @method getName\n * @return {string} name of element\n */\nTextareaSurface.prototype.getName = function getName() {\n    return this._name;\n};\n\n/**\n * Set the wrap of textarea.\n *   Note: Triggers a repaint next tick.\n *\n * @method setWrap\n * @param {string} str wrap of the textarea surface (e.g. 'soft', 'hard')\n * @return {TextareaSurface} this, allowing method chaining.\n */\nTextareaSurface.prototype.setWrap = function setWrap(str) {\n    this._wrap = str;\n    this._contentDirty = true;\n    return this;\n};\n\n/**\n * Set the number of columns visible in the textarea.\n *   Note: Overridden by surface size; set width to true. (eg. size: [true, *])\n *         Triggers a repaint next tick.\n *\n * @method setColumns\n * @param {number} num columns in textarea surface\n * @return {TextareaSurface} this, allowing method chaining.\n */\nTextareaSurface.prototype.setColumns = function setColumns(num) {\n    this._cols = num;\n    this._contentDirty = true;\n    return this;\n};\n\n/**\n * Set the number of rows visible in the textarea.\n *   Note: Overridden by surface size; set height to true. (eg. size: [*, true])\n *         Triggers a repaint next tick.\n *\n * @method setRows\n * @param {number} num rows in textarea surface\n * @return {TextareaSurface} this, allowing method chaining.\n */\nTextareaSurface.prototype.setRows = function setRows(num) {\n    this._rows = num;\n    this._contentDirty = true;\n    return this;\n};\n\n/**\n * Place the document element this component manages into the document.\n *\n * @private\n * @method deploy\n * @param {Node} target document parent of this container\n */\nTextareaSurface.prototype.deploy = function deploy(target) {\n    if (this._placeholder !== '') target.placeholder = this._placeholder;\n    if (this._value !== '') target.value = this._value;\n    if (this._name !== '') target.name = this._name;\n    if (this._wrap !== '') target.wrap = this._wrap;\n    if (this._cols !== '') target.cols = this._cols;\n    if (this._rows !== '') target.rows = this._rows;\n};\n\nmodule.exports = TextareaSurface;\n},{\"../core/Surface\":14}],81:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Surface = require('../core/Surface');\n\n/**\n * Creates a famous surface containing video content. Currently adding\n *   controls and manipulating the video are not supported through the\n *   surface interface, but can be accomplished via standard JavaScript\n *   manipulation of the video DOM element.\n *   This extends the Surface class.\n *\n * @class VideoSurface\n * @extends Surface\n * @constructor\n * @param {Object} [options] default option overrides\n * @param {Array.Number} [options.size] [width, height] in pixels\n * @param {Array.string} [options.classes] CSS classes to set on inner content\n * @param {Array} [options.properties] string dictionary of HTML attributes to set on target div\n * @param {String} [options.src] videoUrl URL\n * @param {boolean} [options.autoplay] autoplay\n */\nfunction VideoSurface(options) {\n    Surface.apply(this, arguments);\n    this._videoUrl = undefined;\n    this.options = Object.create(VideoSurface.DEFAULT_OPTIONS);\n    if (options) this.setOptions(options);\n}\n\nVideoSurface.prototype = Object.create(Surface.prototype);\nVideoSurface.prototype.constructor = VideoSurface;\n\nVideoSurface.DEFAULT_OPTIONS = {\n    autoplay: false\n};\n\nVideoSurface.prototype.elementType = 'video';\nVideoSurface.prototype.elementClass = 'famous-surface';\n\n/**\n * Set internal options, overriding any default options\n *\n * @method setOptions\n *\n * @param {Object} [options] overrides of default options\n * @param {Boolean} [options.autoplay] HTML autoplay\n */\nVideoSurface.prototype.setOptions = function setOptions(options) {\n    if (options.size) this.setSize(options.size);\n    if (options.classes) this.setClasses(options.classes);\n    if (options.properties) this.setProperties(options.properties);\n    if (options.autoplay) this.options.autoplay = options.autoplay;\n    if (options.src) {\n        this._videoUrl = options.src;\n        this._contentDirty = true;\n    }\n};\n\n/**\n * Set url of the video.\n *\n * @method setContent\n * @param {string} videoUrl URL\n */\nVideoSurface.prototype.setContent = function setContent(videoUrl) {\n    this._videoUrl = videoUrl;\n    this._contentDirty = true;\n};\n\n/**\n * Place the document element this component manages into the document.\n *   Note: In the case of VideoSurface, simply changes the options on the target.\n *\n * @private\n * @method deploy\n * @param {Node} target document parent of this container\n */\nVideoSurface.prototype.deploy = function deploy(target) {\n    target.src = this._videoUrl;\n    target.autoplay = this.options.autoplay;\n};\n\n/**\n * Remove this component and contained content from the document.\n *   Note: This doesn't actually remove the <video> element from the\n *   document.\n * @private\n * @method recall\n *\n * @param {Node} target node to which the component was deployed\n */\nVideoSurface.prototype.recall = function recall(target) {\n    target.src = '';\n};\n\nmodule.exports = VideoSurface;\n},{\"../core/Surface\":14}],82:[function(require,module,exports){\nmodule.exports = {\n  CanvasSurface: require('./CanvasSurface'),\n  ContainerSurface: require('./ContainerSurface'),\n  FormContainerSurface: require('./FormContainerSurface'),\n  ImageSurface: require('./ImageSurface'),\n  InputSurface: require('./InputSurface'),\n  SubmitInputSurface: require('./SubmitInputSurface'),\n  TextareaSurface: require('./TextareaSurface'),\n  VideoSurface: require('./VideoSurface')\n};\n\n},{\"./CanvasSurface\":74,\"./ContainerSurface\":75,\"./FormContainerSurface\":76,\"./ImageSurface\":77,\"./InputSurface\":78,\"./SubmitInputSurface\":79,\"./TextareaSurface\":80,\"./VideoSurface\":81}],83:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\n\n\n/**\n * A simple in-memory object cache.  Used as a helper for Views with\n * provider functions.\n * @class CachedMap\n * @constructor\n */\nfunction CachedMap(mappingFunction) {\n    this._map = mappingFunction || null;\n    this._cachedOutput = null;\n    this._cachedInput = Number.NaN; //never valid as input\n}\n\n/**\n * Creates a mapping function with a cache.\n * This is the main entry point for this object.\n * @static\n * @method create\n * @param {function} mappingFunction mapping\n * @return {function} memorized mapping function\n */\nCachedMap.create = function create(mappingFunction) {\n    var instance = new CachedMap(mappingFunction);\n    return instance.get.bind(instance);\n};\n\n/**\n * Retrieve items from cache or from mapping function.\n *\n * @method get\n * @param {Object} input input key\n */\nCachedMap.prototype.get = function get(input) {\n    if (input !== this._cachedInput) {\n        this._cachedInput = input;\n        this._cachedOutput = this._map(input);\n    }\n    return this._cachedOutput;\n};\n\nmodule.exports = CachedMap;\n},{}],84:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\n\n\n\n/**\n * A library of curves which map an animation explicitly as a function of time.\n *\n * @class Easing\n */\nvar Easing = {\n\n    /**\n     * @property inQuad\n     * @static\n     */\n    inQuad: function(t) {\n        return t*t;\n    },\n\n    /**\n     * @property outQuad\n     * @static\n     */\n    outQuad: function(t) {\n        return -(t-=1)*t+1;\n    },\n\n    /**\n     * @property inOutQuad\n     * @static\n     */\n    inOutQuad: function(t) {\n        if ((t/=.5) < 1) return .5*t*t;\n        return -.5*((--t)*(t-2) - 1);\n    },\n\n    /**\n     * @property inCubic\n     * @static\n     */\n    inCubic: function(t) {\n        return t*t*t;\n    },\n\n    /**\n     * @property outCubic\n     * @static\n     */\n    outCubic: function(t) {\n        return ((--t)*t*t + 1);\n    },\n\n    /**\n     * @property inOutCubic\n     * @static\n     */\n    inOutCubic: function(t) {\n        if ((t/=.5) < 1) return .5*t*t*t;\n        return .5*((t-=2)*t*t + 2);\n    },\n\n    /**\n     * @property inQuart\n     * @static\n     */\n    inQuart: function(t) {\n        return t*t*t*t;\n    },\n\n    /**\n     * @property outQuart\n     * @static\n     */\n    outQuart: function(t) {\n        return -((--t)*t*t*t - 1);\n    },\n\n    /**\n     * @property inOutQuart\n     * @static\n     */\n    inOutQuart: function(t) {\n        if ((t/=.5) < 1) return .5*t*t*t*t;\n        return -.5 * ((t-=2)*t*t*t - 2);\n    },\n\n    /**\n     * @property inQuint\n     * @static\n     */\n    inQuint: function(t) {\n        return t*t*t*t*t;\n    },\n\n    /**\n     * @property outQuint\n     * @static\n     */\n    outQuint: function(t) {\n        return ((--t)*t*t*t*t + 1);\n    },\n\n    /**\n     * @property inOutQuint\n     * @static\n     */\n    inOutQuint: function(t) {\n        if ((t/=.5) < 1) return .5*t*t*t*t*t;\n        return .5*((t-=2)*t*t*t*t + 2);\n    },\n\n    /**\n     * @property inSine\n     * @static\n     */\n    inSine: function(t) {\n        return -1.0*Math.cos(t * (Math.PI/2)) + 1.0;\n    },\n\n    /**\n     * @property outSine\n     * @static\n     */\n    outSine: function(t) {\n        return Math.sin(t * (Math.PI/2));\n    },\n\n    /**\n     * @property inOutSine\n     * @static\n     */\n    inOutSine: function(t) {\n        return -.5*(Math.cos(Math.PI*t) - 1);\n    },\n\n    /**\n     * @property inExpo\n     * @static\n     */\n    inExpo: function(t) {\n        return (t===0) ? 0.0 : Math.pow(2, 10 * (t - 1));\n    },\n\n    /**\n     * @property outExpo\n     * @static\n     */\n    outExpo: function(t) {\n        return (t===1.0) ? 1.0 : (-Math.pow(2, -10 * t) + 1);\n    },\n\n    /**\n     * @property inOutExpo\n     * @static\n     */\n    inOutExpo: function(t) {\n        if (t===0) return 0.0;\n        if (t===1.0) return 1.0;\n        if ((t/=.5) < 1) return .5 * Math.pow(2, 10 * (t - 1));\n        return .5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n\n    /**\n     * @property inCirc\n     * @static\n     */\n    inCirc: function(t) {\n        return -(Math.sqrt(1 - t*t) - 1);\n    },\n\n    /**\n     * @property outCirc\n     * @static\n     */\n    outCirc: function(t) {\n        return Math.sqrt(1 - (--t)*t);\n    },\n\n    /**\n     * @property inOutCirc\n     * @static\n     */\n    inOutCirc: function(t) {\n        if ((t/=.5) < 1) return -.5 * (Math.sqrt(1 - t*t) - 1);\n        return .5 * (Math.sqrt(1 - (t-=2)*t) + 1);\n    },\n\n    /**\n     * @property inElastic\n     * @static\n     */\n    inElastic: function(t) {\n        var s=1.70158;var p=0;var a=1.0;\n        if (t===0) return 0.0;  if (t===1) return 1.0;  if (!p) p=.3;\n        s = p/(2*Math.PI) * Math.asin(1.0/a);\n        return -(a*Math.pow(2,10*(t-=1)) * Math.sin((t-s)*(2*Math.PI)/ p));\n    },\n\n    /**\n     * @property outElastic\n     * @static\n     */\n    outElastic: function(t) {\n        var s=1.70158;var p=0;var a=1.0;\n        if (t===0) return 0.0;  if (t===1) return 1.0;  if (!p) p=.3;\n        s = p/(2*Math.PI) * Math.asin(1.0/a);\n        return a*Math.pow(2,-10*t) * Math.sin((t-s)*(2*Math.PI)/p) + 1.0;\n    },\n\n    /**\n     * @property inOutElastic\n     * @static\n     */\n    inOutElastic: function(t) {\n        var s=1.70158;var p=0;var a=1.0;\n        if (t===0) return 0.0;  if ((t/=.5)===2) return 1.0;  if (!p) p=(.3*1.5);\n        s = p/(2*Math.PI) * Math.asin(1.0/a);\n        if (t < 1) return -.5*(a*Math.pow(2,10*(t-=1)) * Math.sin((t-s)*(2*Math.PI)/p));\n        return a*Math.pow(2,-10*(t-=1)) * Math.sin((t-s)*(2*Math.PI)/p)*.5 + 1.0;\n    },\n\n    /**\n     * @property inBack\n     * @static\n     */\n    inBack: function(t, s) {\n        if (s === undefined) s = 1.70158;\n        return t*t*((s+1)*t - s);\n    },\n\n    /**\n     * @property outBack\n     * @static\n     */\n    outBack: function(t, s) {\n        if (s === undefined) s = 1.70158;\n        return ((--t)*t*((s+1)*t + s) + 1);\n    },\n\n    /**\n     * @property inOutBack\n     * @static\n     */\n    inOutBack: function(t, s) {\n        if (s === undefined) s = 1.70158;\n        if ((t/=.5) < 1) return .5*(t*t*(((s*=(1.525))+1)*t - s));\n        return .5*((t-=2)*t*(((s*=(1.525))+1)*t + s) + 2);\n    },\n\n    /**\n     * @property inBounce\n     * @static\n     */\n    inBounce: function(t) {\n        return 1.0 - Easing.outBounce(1.0-t);\n    },\n\n    /**\n     * @property outBounce\n     * @static\n     */\n    outBounce: function(t) {\n        if (t < (1/2.75)) {\n            return (7.5625*t*t);\n        } else if (t < (2/2.75)) {\n            return (7.5625*(t-=(1.5/2.75))*t + .75);\n        } else if (t < (2.5/2.75)) {\n            return (7.5625*(t-=(2.25/2.75))*t + .9375);\n        } else {\n            return (7.5625*(t-=(2.625/2.75))*t + .984375);\n        }\n    },\n\n    /**\n     * @property inOutBounce\n     * @static\n     */\n    inOutBounce: function(t) {\n        if (t < .5) return Easing.inBounce(t*2) * .5;\n        return Easing.outBounce(t*2-1.0) * .5 + .5;\n    }\n};\n\nmodule.exports = Easing;\n},{}],85:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Utility = require('../utilities/Utility');\n\n/**\n * Transition meta-method to support transitioning multiple\n *   values with scalar-only methods.\n *\n *\n * @class MultipleTransition\n * @constructor\n *\n * @param {Object} method Transionable class to multiplex\n */\nfunction MultipleTransition(method) {\n    this.method = method;\n    this._instances = [];\n    this.state = [];\n}\n\nMultipleTransition.SUPPORTS_MULTIPLE = true;\n\n/**\n * Get the state of each transition.\n *\n * @method get\n *\n * @return state {Number|Array} state array\n */\nMultipleTransition.prototype.get = function get() {\n    for (var i = 0; i < this._instances.length; i++) {\n        this.state[i] = this._instances[i].get();\n    }\n    return this.state;\n};\n\n/**\n * Set the end states with a shared transition, with optional callback.\n *\n * @method set\n *\n * @param {Number|Array} endState Final State.  Use a multi-element argument for multiple transitions.\n * @param {Object} transition Transition definition, shared among all instances\n * @param {Function} callback called when all endStates have been reached.\n */\nMultipleTransition.prototype.set = function set(endState, transition, callback) {\n    var _allCallback = Utility.after(endState.length, callback);\n    for (var i = 0; i < endState.length; i++) {\n        if (!this._instances[i]) this._instances[i] = new (this.method)();\n        this._instances[i].set(endState[i], transition, _allCallback);\n    }\n};\n\n/**\n * Reset all transitions to start state.\n *\n * @method reset\n *\n * @param  {Number|Array} startState Start state\n */\nMultipleTransition.prototype.reset = function reset(startState) {\n    for (var i = 0; i < startState.length; i++) {\n        if (!this._instances[i]) this._instances[i] = new (this.method)();\n        this._instances[i].reset(startState[i]);\n    }\n};\n\nmodule.exports = MultipleTransition;\n},{\"../utilities/Utility\":95}],86:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar PE = require('../physics/PhysicsEngine');\nvar Particle = require('../physics/bodies/Particle');\nvar Spring = require('../physics/constraints/Snap');\nvar Vector = require('../math/Vector');\n\n/**\n * SnapTransition is a method of transitioning between two values (numbers,\n * or arrays of numbers). It is similar to SpringTransition except\n * the transition can be much faster and always has a damping effect.\n *\n * @class SnapTransition\n * @constructor\n *\n * @param [state=0] {Number|Array} Initial state\n */\nfunction SnapTransition(state) {\n    state = state || 0;\n\n    this.endState  = new Vector(state);\n    this.initState = new Vector();\n\n    this._dimensions       = 1;\n    this._restTolerance    = 1e-10;\n    this._absRestTolerance = this._restTolerance;\n    this._callback         = undefined;\n\n    this.PE       = new PE();\n    this.particle = new Particle();\n    this.spring   = new Spring({anchor : this.endState});\n\n    this.PE.addBody(this.particle);\n    this.PE.attach(this.spring, this.particle);\n}\n\nSnapTransition.SUPPORTS_MULTIPLE = 3;\n\n/**\n * @property SnapTransition.DEFAULT_OPTIONS\n * @type Object\n * @protected\n * @static\n */\nSnapTransition.DEFAULT_OPTIONS = {\n\n    /**\n     * The amount of time in milliseconds taken for one complete oscillation\n     * when there is no damping\n     *    Range : [0, Infinity]\n     *\n     * @attribute period\n     * @type Number\n     * @default 100\n     */\n    period : 100,\n\n    /**\n     * The damping of the snap.\n     *    Range : [0, 1]\n     *\n     * @attribute dampingRatio\n     * @type Number\n     * @default 0.2\n     */\n    dampingRatio : 0.2,\n\n    /**\n     * The initial velocity of the transition.\n     *\n     * @attribute velocity\n     * @type Number|Array\n     * @default 0\n     */\n    velocity : 0\n};\n\nfunction _getEnergy() {\n    return this.particle.getEnergy() + this.spring.getEnergy([this.particle]);\n}\n\nfunction _setAbsoluteRestTolerance() {\n    var distance = this.endState.sub(this.initState).normSquared();\n    this._absRestTolerance = (distance === 0)\n        ? this._restTolerance\n        : this._restTolerance * distance;\n}\n\nfunction _setTarget(target) {\n    this.endState.set(target);\n    _setAbsoluteRestTolerance.call(this);\n}\n\nfunction _wake() {\n    this.PE.wake();\n}\n\nfunction _sleep() {\n    this.PE.sleep();\n}\n\nfunction _setParticlePosition(p) {\n    this.particle.position.set(p);\n}\n\nfunction _setParticleVelocity(v) {\n    this.particle.velocity.set(v);\n}\n\nfunction _getParticlePosition() {\n    return (this._dimensions === 0)\n        ? this.particle.getPosition1D()\n        : this.particle.getPosition();\n}\n\nfunction _getParticleVelocity() {\n    return (this._dimensions === 0)\n        ? this.particle.getVelocity1D()\n        : this.particle.getVelocity();\n}\n\nfunction _setCallback(callback) {\n    this._callback = callback;\n}\n\nfunction _setupDefinition(definition) {\n    var defaults = SnapTransition.DEFAULT_OPTIONS;\n    if (definition.period === undefined)       definition.period       = defaults.period;\n    if (definition.dampingRatio === undefined) definition.dampingRatio = defaults.dampingRatio;\n    if (definition.velocity === undefined)     definition.velocity     = defaults.velocity;\n\n    //setup spring\n    this.spring.setOptions({\n        period       : definition.period,\n        dampingRatio : definition.dampingRatio\n    });\n\n    //setup particle\n    _setParticleVelocity.call(this, definition.velocity);\n}\n\nfunction _update() {\n    if (this.PE.isSleeping()) {\n        if (this._callback) {\n            var cb = this._callback;\n            this._callback = undefined;\n            cb();\n        }\n        return;\n    }\n\n    if (_getEnergy.call(this) < this._absRestTolerance) {\n        _setParticlePosition.call(this, this.endState);\n        _setParticleVelocity.call(this, [0,0,0]);\n        _sleep.call(this);\n    }\n}\n\n/**\n * Resets the state and velocity\n *\n * @method reset\n *\n * @param state {Number|Array}      State\n * @param [velocity] {Number|Array} Velocity\n */\nSnapTransition.prototype.reset = function reset(state, velocity) {\n    this._dimensions = (state instanceof Array)\n        ? state.length\n        : 0;\n\n    this.initState.set(state);\n    _setParticlePosition.call(this, state);\n    _setTarget.call(this, state);\n    if (velocity) _setParticleVelocity.call(this, velocity);\n    _setCallback.call(this, undefined);\n};\n\n/**\n * Getter for velocity\n *\n * @method getVelocity\n *\n * @return velocity {Number|Array}\n */\nSnapTransition.prototype.getVelocity = function getVelocity() {\n    return _getParticleVelocity.call(this);\n};\n\n/**\n * Setter for velocity\n *\n * @method setVelocity\n *\n * @return velocity {Number|Array}\n */\nSnapTransition.prototype.setVelocity = function setVelocity(velocity) {\n    this.call(this, _setParticleVelocity(velocity));\n};\n\n/**\n * Detects whether a transition is in progress\n *\n * @method isActive\n *\n * @return {Boolean}\n */\nSnapTransition.prototype.isActive = function isActive() {\n    return !this.PE.isSleeping();\n};\n\n/**\n * Halt the transition\n *\n * @method halt\n */\nSnapTransition.prototype.halt = function halt() {\n    this.set(this.get());\n};\n\n/**\n * Get the current position of the transition\ns     *\n * @method get\n *\n * @return state {Number|Array}\n */\nSnapTransition.prototype.get = function get() {\n    _update.call(this);\n    return _getParticlePosition.call(this);\n};\n\n/**\n * Set the end position and transition, with optional callback on completion.\n *\n * @method set\n *\n * @param state {Number|Array}      Final state\n * @param [definition] {Object}     Transition definition\n * @param [callback] {Function}     Callback\n */\nSnapTransition.prototype.set = function set(state, definition, callback) {\n    if (!definition) {\n        this.reset(state);\n        if (callback) callback();\n        return;\n    }\n\n    this._dimensions = (state instanceof Array)\n        ? state.length\n        : 0;\n\n    _wake.call(this);\n    _setupDefinition.call(this, definition);\n    _setTarget.call(this, state);\n    _setCallback.call(this, callback);\n};\n\nmodule.exports = SnapTransition;\n},{\"../math/Vector\":41,\"../physics/PhysicsEngine\":48,\"../physics/bodies/Particle\":51,\"../physics/constraints/Snap\":58}],87:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\n/*global console*/\n\nvar PE = require('../physics/PhysicsEngine');\nvar Particle = require('../physics/bodies/Particle');\nvar Spring = require('../physics/forces/Spring');\nvar Vector = require('../math/Vector');\n\n/**\n * SpringTransition is a method of transitioning between two values (numbers,\n * or arrays of numbers) with a bounce. The transition will overshoot the target\n * state depending on the parameters of the transition.\n *\n * @class SpringTransition\n * @constructor\n *\n * @param {Number|Array} [state=0] Initial state\n */\nfunction SpringTransition(state) {\n    state = state || 0;\n    this.endState  = new Vector(state);\n    this.initState = new Vector();\n\n    this._dimensions       = undefined;\n    this._restTolerance    = 1e-10;\n    this._absRestTolerance = this._restTolerance;\n    this._callback         = undefined;\n\n    this.PE       = new PE();\n    this.spring   = new Spring({anchor : this.endState});\n    this.particle = new Particle();\n\n    this.PE.addBody(this.particle);\n    this.PE.attach(this.spring, this.particle);\n}\n\nSpringTransition.SUPPORTS_MULTIPLE = 3;\n\n/**\n * @property SpringTransition.DEFAULT_OPTIONS\n * @type Object\n * @protected\n * @static\n */\nSpringTransition.DEFAULT_OPTIONS = {\n\n    /**\n     * The amount of time in milliseconds taken for one complete oscillation\n     * when there is no damping\n     *    Range : [0, Infinity]\n     *\n     * @attribute period\n     * @type Number\n     * @default 300\n     */\n    period : 300,\n\n    /**\n     * The damping of the snap.\n     *    Range : [0, 1]\n     *    0 = no damping, and the spring will oscillate forever\n     *    1 = critically damped (the spring will never oscillate)\n     *\n     * @attribute dampingRatio\n     * @type Number\n     * @default 0.5\n     */\n    dampingRatio : 0.5,\n\n    /**\n     * The initial velocity of the transition.\n     *\n     * @attribute velocity\n     * @type Number|Array\n     * @default 0\n     */\n    velocity : 0\n};\n\nfunction _getEnergy() {\n    return this.particle.getEnergy() + this.spring.getEnergy([this.particle]);\n}\n\nfunction _setParticlePosition(p) {\n    this.particle.setPosition(p);\n}\n\nfunction _setParticleVelocity(v) {\n    this.particle.setVelocity(v);\n}\n\nfunction _getParticlePosition() {\n    return (this._dimensions === 0)\n        ? this.particle.getPosition1D()\n        : this.particle.getPosition();\n}\n\nfunction _getParticleVelocity() {\n    return (this._dimensions === 0)\n        ? this.particle.getVelocity1D()\n        : this.particle.getVelocity();\n}\n\nfunction _setCallback(callback) {\n    this._callback = callback;\n}\n\nfunction _wake() {\n    this.PE.wake();\n}\n\nfunction _sleep() {\n    this.PE.sleep();\n}\n\nfunction _update() {\n    if (this.PE.isSleeping()) {\n        if (this._callback) {\n            var cb = this._callback;\n            this._callback = undefined;\n            cb();\n        }\n        return;\n    }\n\n    if (_getEnergy.call(this) < this._absRestTolerance) {\n        _setParticlePosition.call(this, this.endState);\n        _setParticleVelocity.call(this, [0,0,0]);\n        _sleep.call(this);\n    }\n}\n\nfunction _setupDefinition(definition) {\n    // TODO fix no-console error\n    /* eslint no-console: 0 */\n    var defaults = SpringTransition.DEFAULT_OPTIONS;\n    if (definition.period === undefined)       definition.period       = defaults.period;\n    if (definition.dampingRatio === undefined) definition.dampingRatio = defaults.dampingRatio;\n    if (definition.velocity === undefined)     definition.velocity     = defaults.velocity;\n\n    if (definition.period < 150) {\n        definition.period = 150;\n        console.warn('The period of a SpringTransition is capped at 150 ms. Use a SnapTransition for faster transitions');\n    }\n\n    //setup spring\n    this.spring.setOptions({\n        period       : definition.period,\n        dampingRatio : definition.dampingRatio\n    });\n\n    //setup particle\n    _setParticleVelocity.call(this, definition.velocity);\n}\n\nfunction _setAbsoluteRestTolerance() {\n    var distance = this.endState.sub(this.initState).normSquared();\n    this._absRestTolerance = (distance === 0)\n        ? this._restTolerance\n        : this._restTolerance * distance;\n}\n\nfunction _setTarget(target) {\n    this.endState.set(target);\n    _setAbsoluteRestTolerance.call(this);\n}\n\n/**\n * Resets the position and velocity\n *\n * @method reset\n *\n * @param {Number|Array.Number} pos positional state\n * @param {Number|Array} vel velocity\n */\nSpringTransition.prototype.reset = function reset(pos, vel) {\n    this._dimensions = (pos instanceof Array)\n        ? pos.length\n        : 0;\n\n    this.initState.set(pos);\n    _setParticlePosition.call(this, pos);\n    _setTarget.call(this, pos);\n    if (vel) _setParticleVelocity.call(this, vel);\n    _setCallback.call(this, undefined);\n};\n\n/**\n * Getter for velocity\n *\n * @method getVelocity\n *\n * @return {Number|Array} velocity\n */\nSpringTransition.prototype.getVelocity = function getVelocity() {\n    return _getParticleVelocity.call(this);\n};\n\n/**\n * Setter for velocity\n *\n * @method setVelocity\n *\n * @return {Number|Array} velocity\n */\nSpringTransition.prototype.setVelocity = function setVelocity(v) {\n    this.call(this, _setParticleVelocity(v));\n};\n\n/**\n * Detects whether a transition is in progress\n *\n * @method isActive\n *\n * @return {Boolean}\n */\nSpringTransition.prototype.isActive = function isActive() {\n    return !this.PE.isSleeping();\n};\n\n/**\n * Halt the transition\n *\n * @method halt\n */\nSpringTransition.prototype.halt = function halt() {\n    this.set(this.get());\n};\n\n/**\n * Get the current position of the transition\n *\n * @method get\n *\n * @return {Number|Array} state\n */\nSpringTransition.prototype.get = function get() {\n    _update.call(this);\n    return _getParticlePosition.call(this);\n};\n\n/**\n * Set the end position and transition, with optional callback on completion.\n *\n * @method set\n *\n * @param  {Number|Array} endState Final state\n * @param {Object}  definition  Transition definition\n * @param  {Function} callback Callback\n */\nSpringTransition.prototype.set = function set(endState, definition, callback) {\n    if (!definition) {\n        this.reset(endState);\n        if (callback) callback();\n        return;\n    }\n\n    this._dimensions = (endState instanceof Array)\n        ? endState.length\n        : 0;\n\n    _wake.call(this);\n    _setupDefinition.call(this, definition);\n    _setTarget.call(this, endState);\n    _setCallback.call(this, callback);\n};\n\nmodule.exports = SpringTransition;\n},{\"../math/Vector\":41,\"../physics/PhysicsEngine\":48,\"../physics/bodies/Particle\":51,\"../physics/forces/Spring\":68}],88:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar MultipleTransition = require('./MultipleTransition');\nvar TweenTransition = require('./TweenTransition');\n\n/**\n * A state maintainer for a smooth transition between\n *    numerically-specified states. Example numeric states include floats or\n *    Transform objects.\n *\n * An initial state is set with the constructor or set(startState). A\n *    corresponding end state and transition are set with set(endState,\n *    transition). Subsequent calls to set(endState, transition) begin at\n *    the last state. Calls to get(timestamp) provide the interpolated state\n *    along the way.\n *\n * Note that there is no event loop here - calls to get() are the only way\n *    to find state projected to the current (or provided) time and are\n *    the only way to trigger callbacks. Usually this kind of object would\n *    be part of the render() path of a visible component.\n *\n * @class Transitionable\n * @constructor\n * @param {number|Array.Number|Object.<number|string, number>} start\n *    beginning state\n */\nfunction Transitionable(start) {\n    this.currentAction = null;\n    this.actionQueue = [];\n    this.callbackQueue = [];\n\n    this.state = 0;\n    this.velocity = undefined;\n    this._callback = undefined;\n    this._engineInstance = null;\n    this._currentMethod = null;\n\n    this.set(start);\n}\n\nvar transitionMethods = {};\n\nTransitionable.register = function register(methods) {\n    var success = true;\n    for (var method in methods) {\n        if (!Transitionable.registerMethod(method, methods[method]))\n            success = false;\n    }\n    return success;\n};\n\nTransitionable.registerMethod = function registerMethod(name, engineClass) {\n    if (!(name in transitionMethods)) {\n        transitionMethods[name] = engineClass;\n        return true;\n    }\n    else return false;\n};\n\nTransitionable.unregisterMethod = function unregisterMethod(name) {\n    if (name in transitionMethods) {\n        delete transitionMethods[name];\n        return true;\n    }\n    else return false;\n};\n\nfunction _loadNext() {\n    if (this._callback) {\n        var callback = this._callback;\n        this._callback = undefined;\n        callback();\n    }\n    if (this.actionQueue.length <= 0) {\n        this.set(this.get()); // no update required\n        return;\n    }\n    this.currentAction = this.actionQueue.shift();\n    this._callback = this.callbackQueue.shift();\n\n    var method = null;\n    var endValue = this.currentAction[0];\n    var transition = this.currentAction[1];\n    if (transition instanceof Object && transition.method) {\n        method = transition.method;\n        if (typeof method === 'string') method = transitionMethods[method];\n    }\n    else {\n        method = TweenTransition;\n    }\n\n    if (this._currentMethod !== method) {\n        if (!(endValue instanceof Object) || method.SUPPORTS_MULTIPLE === true || endValue.length <= method.SUPPORTS_MULTIPLE) {\n            this._engineInstance = new method();\n        }\n        else {\n            this._engineInstance = new MultipleTransition(method);\n        }\n        this._currentMethod = method;\n    }\n\n    this._engineInstance.reset(this.state, this.velocity);\n    if (this.velocity !== undefined) transition.velocity = this.velocity;\n    this._engineInstance.set(endValue, transition, _loadNext.bind(this));\n}\n\n/**\n * Add transition to end state to the queue of pending transitions. Special\n *    Use: calling without a transition resets the object to that state with\n *    no pending actions\n *\n * @method set\n *\n * @param {number|FamousMatrix|Array.Number|Object.<number, number>} endState\n *    end state to which we interpolate\n * @param {transition=} transition object of type {duration: number, curve:\n *    f[0,1] -> [0,1] or name}. If transition is omitted, change will be\n *    instantaneous.\n * @param {function()=} callback Zero-argument function to call on observed\n *    completion (t=1)\n */\nTransitionable.prototype.set = function set(endState, transition, callback) {\n    if (!transition) {\n        this.reset(endState);\n        if (callback) callback();\n        return this;\n    }\n\n    var action = [endState, transition];\n    this.actionQueue.push(action);\n    this.callbackQueue.push(callback);\n    if (!this.currentAction) _loadNext.call(this);\n    return this;\n};\n\n/**\n * Cancel all transitions and reset to a stable state\n *\n * @method reset\n *\n * @param {number|Array.Number|Object.<number, number>} startState\n *    stable state to set to\n */\nTransitionable.prototype.reset = function reset(startState, startVelocity) {\n    this._currentMethod = null;\n    this._engineInstance = null;\n    this._callback = undefined;\n    this.state = startState;\n    this.velocity = startVelocity;\n    this.currentAction = null;\n    this.actionQueue = [];\n    this.callbackQueue = [];\n};\n\n/**\n * Add delay action to the pending action queue queue.\n *\n * @method delay\n *\n * @param {number} duration delay time (ms)\n * @param {function} callback Zero-argument function to call on observed\n *    completion (t=1)\n */\nTransitionable.prototype.delay = function delay(duration, callback) {\n    this.set(this.get(), {duration: duration,\n        curve: function() {\n            return 0;\n        }},\n        callback\n    );\n};\n\n/**\n * Get interpolated state of current action at provided time. If the last\n *    action has completed, invoke its callback.\n *\n * @method get\n *\n * @param {number=} timestamp Evaluate the curve at a normalized version of this\n *    time. If omitted, use current time. (Unix epoch time)\n * @return {number|Object.<number|string, number>} beginning state\n *    interpolated to this point in time.\n */\nTransitionable.prototype.get = function get(timestamp) {\n    if (this._engineInstance) {\n        if (this._engineInstance.getVelocity)\n            this.velocity = this._engineInstance.getVelocity();\n        this.state = this._engineInstance.get(timestamp);\n    }\n    return this.state;\n};\n\n/**\n * Is there at least one action pending completion?\n *\n * @method isActive\n *\n * @return {boolean}\n */\nTransitionable.prototype.isActive = function isActive() {\n    return !!this.currentAction;\n};\n\n/**\n * Halt transition at current state and erase all pending actions.\n *\n * @method halt\n */\nTransitionable.prototype.halt = function halt() {\n    return this.set(this.get());\n};\n\nmodule.exports = Transitionable;\n},{\"./MultipleTransition\":85,\"./TweenTransition\":90}],89:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Transitionable = require('./Transitionable');\nvar Transform = require('../core/Transform');\nvar Utility = require('../utilities/Utility');\n\n/**\n * A class for transitioning the state of a Transform by transitioning\n * its translate, scale, skew and rotate components independently.\n *\n * @class TransitionableTransform\n * @constructor\n *\n * @param [transform=Transform.identity] {Transform} The initial transform state\n */\nfunction TransitionableTransform(transform) {\n    this._final = Transform.identity.slice();\n\n    this._finalTranslate = [0, 0, 0];\n    this._finalRotate = [0, 0, 0];\n    this._finalSkew = [0, 0, 0];\n    this._finalScale = [1, 1, 1];\n\n    this.translate = new Transitionable(this._finalTranslate);\n    this.rotate = new Transitionable(this._finalRotate);\n    this.skew = new Transitionable(this._finalSkew);\n    this.scale = new Transitionable(this._finalScale);\n\n    if (transform) this.set(transform);\n}\n\nfunction _build() {\n    return Transform.build({\n        translate: this.translate.get(),\n        rotate: this.rotate.get(),\n        skew: this.skew.get(),\n        scale: this.scale.get()\n    });\n}\n\nfunction _buildFinal() {\n    return Transform.build({\n        translate: this._finalTranslate,\n        rotate: this._finalRotate,\n        skew: this._finalSkew,\n        scale: this._finalScale\n    });\n}\n\n/**\n * An optimized way of setting only the translation component of a Transform\n *\n * @method setTranslate\n * @chainable\n *\n * @param translate {Array}     New translation state\n * @param [transition] {Object} Transition definition\n * @param [callback] {Function} Callback\n * @return {TransitionableTransform}\n */\nTransitionableTransform.prototype.setTranslate = function setTranslate(translate, transition, callback) {\n    this._finalTranslate = translate;\n    this._final = _buildFinal.call(this);\n    this.translate.set(translate, transition, callback);\n    return this;\n};\n\n/**\n * An optimized way of setting only the scale component of a Transform\n *\n * @method setScale\n * @chainable\n *\n * @param scale {Array}         New scale state\n * @param [transition] {Object} Transition definition\n * @param [callback] {Function} Callback\n * @return {TransitionableTransform}\n */\nTransitionableTransform.prototype.setScale = function setScale(scale, transition, callback) {\n    this._finalScale = scale;\n    this._final = _buildFinal.call(this);\n    this.scale.set(scale, transition, callback);\n    return this;\n};\n\n/**\n * An optimized way of setting only the rotational component of a Transform\n *\n * @method setRotate\n * @chainable\n *\n * @param eulerAngles {Array}   Euler angles for new rotation state\n * @param [transition] {Object} Transition definition\n * @param [callback] {Function} Callback\n * @return {TransitionableTransform}\n */\nTransitionableTransform.prototype.setRotate = function setRotate(eulerAngles, transition, callback) {\n    this._finalRotate = eulerAngles;\n    this._final = _buildFinal.call(this);\n    this.rotate.set(eulerAngles, transition, callback);\n    return this;\n};\n\n/**\n * An optimized way of setting only the skew component of a Transform\n *\n * @method setSkew\n * @chainable\n *\n * @param skewAngles {Array}    New skew state\n * @param [transition] {Object} Transition definition\n * @param [callback] {Function} Callback\n * @return {TransitionableTransform}\n */\nTransitionableTransform.prototype.setSkew = function setSkew(skewAngles, transition, callback) {\n    this._finalSkew = skewAngles;\n    this._final = _buildFinal.call(this);\n    this.skew.set(skewAngles, transition, callback);\n    return this;\n};\n\n/**\n * Setter for a TransitionableTransform with optional parameters to transition\n * between Transforms\n *\n * @method set\n * @chainable\n *\n * @param transform {Array}     New transform state\n * @param [transition] {Object} Transition definition\n * @param [callback] {Function} Callback\n * @return {TransitionableTransform}\n */\nTransitionableTransform.prototype.set = function set(transform, transition, callback) {\n    var components = Transform.interpret(transform);\n\n    this._finalTranslate = components.translate;\n    this._finalRotate = components.rotate;\n    this._finalSkew = components.skew;\n    this._finalScale = components.scale;\n    this._final = transform;\n\n    var _callback = callback ? Utility.after(4, callback) : null;\n    this.translate.set(components.translate, transition, _callback);\n    this.rotate.set(components.rotate, transition, _callback);\n    this.skew.set(components.skew, transition, _callback);\n    this.scale.set(components.scale, transition, _callback);\n    return this;\n};\n\n/**\n * Sets the default transition to use for transitioning betwen Transform states\n *\n * @method setDefaultTransition\n *\n * @param transition {Object} Transition definition\n */\nTransitionableTransform.prototype.setDefaultTransition = function setDefaultTransition(transition) {\n    this.translate.setDefault(transition);\n    this.rotate.setDefault(transition);\n    this.skew.setDefault(transition);\n    this.scale.setDefault(transition);\n};\n\n/**\n * Getter. Returns the current state of the Transform\n *\n * @method get\n *\n * @return {Transform}\n */\nTransitionableTransform.prototype.get = function get() {\n    if (this.isActive()) {\n        return _build.call(this);\n    }\n    else return this._final;\n};\n\n/**\n * Get the destination state of the Transform\n *\n * @method getFinal\n *\n * @return Transform {Transform}\n */\nTransitionableTransform.prototype.getFinal = function getFinal() {\n    return this._final;\n};\n\n/**\n * Determine if the TransitionalTransform is currently transitioning\n *\n * @method isActive\n *\n * @return {Boolean}\n */\nTransitionableTransform.prototype.isActive = function isActive() {\n    return this.translate.isActive() || this.rotate.isActive() || this.scale.isActive() || this.skew.isActive();\n};\n\n/**\n * Halts the transition\n *\n * @method halt\n */\nTransitionableTransform.prototype.halt = function halt() {\n    this.translate.halt();\n    this.rotate.halt();\n    this.skew.halt();\n    this.scale.halt();\n\n    this._final = this.get();\n    this._finalTranslate = this.translate.get();\n    this._finalRotate = this.rotate.get();\n    this._finalSkew = this.skew.get();\n    this._finalScale = this.scale.get();\n\n    return this;\n};\n\nmodule.exports = TransitionableTransform;\n},{\"../core/Transform\":15,\"../utilities/Utility\":95,\"./Transitionable\":88}],90:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\n\n\n\n/**\n *\n * A state maintainer for a smooth transition between\n *    numerically-specified states.  Example numeric states include floats or\n *    Transfornm objects.\n *\n *    An initial state is set with the constructor or set(startValue). A\n *    corresponding end state and transition are set with set(endValue,\n *    transition). Subsequent calls to set(endValue, transition) begin at\n *    the last state. Calls to get(timestamp) provide the _interpolated state\n *    along the way.\n *\n *   Note that there is no event loop here - calls to get() are the only way\n *    to find out state projected to the current (or provided) time and are\n *    the only way to trigger callbacks. Usually this kind of object would\n *    be part of the render() path of a visible component.\n *\n * @class TweenTransition\n * @constructor\n *\n * @param {Object} options TODO\n *    beginning state\n */\nfunction TweenTransition(options) {\n    this.options = Object.create(TweenTransition.DEFAULT_OPTIONS);\n    if (options) this.setOptions(options);\n\n    this._startTime = 0;\n    this._startValue = 0;\n    this._updateTime = 0;\n    this._endValue = 0;\n    this._curve = undefined;\n    this._duration = 0;\n    this._active = false;\n    this._callback = undefined;\n    this.state = 0;\n    this.velocity = undefined;\n}\n\n/**\n * Transition curves mapping independent variable t from domain [0,1] to a\n *    range within [0,1]. Includes functions 'linear', 'easeIn', 'easeOut',\n *    'easeInOut', 'easeOutBounce', 'spring'.\n *\n * @property {object} Curve\n * @final\n */\nTweenTransition.Curves = {\n    linear: function(t) {\n        return t;\n    },\n    easeIn: function(t) {\n        return t*t;\n    },\n    easeOut: function(t) {\n        return t*(2-t);\n    },\n    easeInOut: function(t) {\n        if (t <= 0.5) return 2*t*t;\n        else return -2*t*t + 4*t - 1;\n    },\n    easeOutBounce: function(t) {\n        return t*(3 - 2*t);\n    },\n    spring: function(t) {\n        return (1 - t) * Math.sin(6 * Math.PI * t) + t;\n    }\n};\n\nTweenTransition.SUPPORTS_MULTIPLE = true;\nTweenTransition.DEFAULT_OPTIONS = {\n    curve: TweenTransition.Curves.linear,\n    duration: 500,\n    speed: 0 /* considered only if positive */\n};\n\nvar registeredCurves = {};\n\n/**\n * Add \"unit\" curve to internal dictionary of registered curves.\n *\n * @method registerCurve\n *\n * @static\n *\n * @param {string} curveName dictionary key\n * @param {unitCurve} curve function of one numeric variable mapping [0,1]\n *    to range inside [0,1]\n * @return {boolean} false if key is taken, else true\n */\nTweenTransition.registerCurve = function registerCurve(curveName, curve) {\n    if (!registeredCurves[curveName]) {\n        registeredCurves[curveName] = curve;\n        return true;\n    }\n    else {\n        return false;\n    }\n};\n\n/**\n * Remove object with key \"curveName\" from internal dictionary of registered\n *    curves.\n *\n * @method unregisterCurve\n *\n * @static\n *\n * @param {string} curveName dictionary key\n * @return {boolean} false if key has no dictionary value\n */\nTweenTransition.unregisterCurve = function unregisterCurve(curveName) {\n    if (registeredCurves[curveName]) {\n        delete registeredCurves[curveName];\n        return true;\n    }\n    else {\n        return false;\n    }\n};\n\n/**\n * Retrieve function with key \"curveName\" from internal dictionary of\n *    registered curves. Default curves are defined in the\n *    TweenTransition.Curves array, where the values represent\n *    unitCurve functions.\n *\n * @method getCurve\n *\n * @static\n *\n * @param {string} curveName dictionary key\n * @return {unitCurve} curve function of one numeric variable mapping [0,1]\n *    to range inside [0,1]\n */\nTweenTransition.getCurve = function getCurve(curveName) {\n    var curve = registeredCurves[curveName];\n    if (curve !== undefined) return curve;\n    else throw new Error('curve not registered');\n};\n\n/**\n * Retrieve all available curves.\n *\n * @method getCurves\n *\n * @static\n *\n * @return {object} curve functions of one numeric variable mapping [0,1]\n *    to range inside [0,1]\n */\nTweenTransition.getCurves = function getCurves() {\n    return registeredCurves;\n};\n\n // Interpolate: If a linear function f(0) = a, f(1) = b, then return f(t)\nfunction _interpolate(a, b, t) {\n    return ((1 - t) * a) + (t * b);\n}\n\nfunction _clone(obj) {\n    if (obj instanceof Object) {\n        if (obj instanceof Array) return obj.slice(0);\n        else return Object.create(obj);\n    }\n    else return obj;\n}\n\n// Fill in missing properties in \"transition\" with those in defaultTransition, and\n//   convert internal named curve to function object, returning as new\n//   object.\nfunction _normalize(transition, defaultTransition) {\n    var result = {curve: defaultTransition.curve};\n    if (defaultTransition.duration) result.duration = defaultTransition.duration;\n    if (defaultTransition.speed) result.speed = defaultTransition.speed;\n    if (transition instanceof Object) {\n        if (transition.duration !== undefined) result.duration = transition.duration;\n        if (transition.curve) result.curve = transition.curve;\n        if (transition.speed) result.speed = transition.speed;\n    }\n    if (typeof result.curve === 'string') result.curve = TweenTransition.getCurve(result.curve);\n    return result;\n}\n\n/**\n * Set internal options, overriding any default options.\n *\n * @method setOptions\n *\n *\n * @param {Object} options options object\n * @param {Object} [options.curve] function mapping [0,1] to [0,1] or identifier\n * @param {Number} [options.duration] duration in ms\n * @param {Number} [options.speed] speed in pixels per ms\n */\nTweenTransition.prototype.setOptions = function setOptions(options) {\n    if (options.curve !== undefined) this.options.curve = options.curve;\n    if (options.duration !== undefined) this.options.duration = options.duration;\n    if (options.speed !== undefined) this.options.speed = options.speed;\n};\n\n/**\n * Add transition to end state to the queue of pending transitions. Special\n *    Use: calling without a transition resets the object to that state with\n *    no pending actions\n *\n * @method set\n *\n *\n * @param {number|FamousMatrix|Array.Number|Object.<number, number>} endValue\n *    end state to which we _interpolate\n * @param {transition=} transition object of type {duration: number, curve:\n *    f[0,1] -> [0,1] or name}. If transition is omitted, change will be\n *    instantaneous.\n * @param {function()=} callback Zero-argument function to call on observed\n *    completion (t=1)\n */\nTweenTransition.prototype.set = function set(endValue, transition, callback) {\n    if (!transition) {\n        this.reset(endValue);\n        if (callback) callback();\n        return;\n    }\n\n    this._startValue = _clone(this.get());\n    transition = _normalize(transition, this.options);\n    if (transition.speed) {\n        var startValue = this._startValue;\n        if (startValue instanceof Object) {\n            var variance = 0;\n            for (var i in startValue) variance += (endValue[i] - startValue[i]) * (endValue[i] - startValue[i]);\n            transition.duration = Math.sqrt(variance) / transition.speed;\n        }\n        else {\n            transition.duration = Math.abs(endValue - startValue) / transition.speed;\n        }\n    }\n\n    this._startTime = Date.now();\n    this._endValue = _clone(endValue);\n    this._startVelocity = _clone(transition.velocity);\n    this._duration = transition.duration;\n    this._curve = transition.curve;\n    this._active = true;\n    this._callback = callback;\n};\n\n/**\n * Cancel all transitions and reset to a stable state\n *\n * @method reset\n *\n * @param {number|Array.Number|Object.<number, number>} startValue\n *    starting state\n * @param {number} startVelocity\n *    starting velocity\n */\nTweenTransition.prototype.reset = function reset(startValue, startVelocity) {\n    if (this._callback) {\n        var callback = this._callback;\n        this._callback = undefined;\n        callback();\n    }\n    this.state = _clone(startValue);\n    this.velocity = _clone(startVelocity);\n    this._startTime = 0;\n    this._duration = 0;\n    this._updateTime = 0;\n    this._startValue = this.state;\n    this._startVelocity = this.velocity;\n    this._endValue = this.state;\n    this._active = false;\n};\n\n/**\n * Get current velocity\n *\n * @method getVelocity\n *\n * @returns {Number} velocity\n */\nTweenTransition.prototype.getVelocity = function getVelocity() {\n    return this.velocity;\n};\n\n/**\n * Get interpolated state of current action at provided time. If the last\n *    action has completed, invoke its callback.\n *\n * @method get\n *\n *\n * @param {number=} timestamp Evaluate the curve at a normalized version of this\n *    time. If omitted, use current time. (Unix epoch time)\n * @return {number|Object.<number|string, number>} beginning state\n *    _interpolated to this point in time.\n */\nTweenTransition.prototype.get = function get(timestamp) {\n    this.update(timestamp);\n    return this.state;\n};\n\nfunction _calculateVelocity(current, start, curve, duration, t) {\n    var velocity;\n    var eps = 1e-7;\n    var speed = (curve(t) - curve(t - eps)) / eps;\n    if (current instanceof Array) {\n        velocity = [];\n        for (var i = 0; i < current.length; i++){\n            if (typeof current[i] === 'number')\n                velocity[i] = speed * (current[i] - start[i]) / duration;\n            else\n                velocity[i] = 0;\n        }\n\n    }\n    else velocity = speed * (current - start) / duration;\n    return velocity;\n}\n\nfunction _calculateState(start, end, t) {\n    var state;\n    if (start instanceof Array) {\n        state = [];\n        for (var i = 0; i < start.length; i++) {\n            if (typeof start[i] === 'number')\n                state[i] = _interpolate(start[i], end[i], t);\n            else\n                state[i] = start[i];\n        }\n    }\n    else state = _interpolate(start, end, t);\n    return state;\n}\n\n/**\n * Update internal state to the provided timestamp. This may invoke the last\n *    callback and begin a new action.\n *\n * @method update\n *\n *\n * @param {number=} timestamp Evaluate the curve at a normalized version of this\n *    time. If omitted, use current time. (Unix epoch time)\n */\nTweenTransition.prototype.update = function update(timestamp) {\n    if (!this._active) {\n        if (this._callback) {\n            var callback = this._callback;\n            this._callback = undefined;\n            callback();\n        }\n        return;\n    }\n\n    if (!timestamp) timestamp = Date.now();\n    if (this._updateTime >= timestamp) return;\n    this._updateTime = timestamp;\n\n    var timeSinceStart = timestamp - this._startTime;\n    if (timeSinceStart >= this._duration) {\n        this.state = this._endValue;\n        this.velocity = _calculateVelocity(this.state, this._startValue, this._curve, this._duration, 1);\n        this._active = false;\n    }\n    else if (timeSinceStart < 0) {\n        this.state = this._startValue;\n        this.velocity = this._startVelocity;\n    }\n    else {\n        var t = timeSinceStart / this._duration;\n        this.state = _calculateState(this._startValue, this._endValue, this._curve(t));\n        this.velocity = _calculateVelocity(this.state, this._startValue, this._curve, this._duration, t);\n    }\n};\n\n/**\n * Is there at least one action pending completion?\n *\n * @method isActive\n *\n *\n * @return {boolean}\n */\nTweenTransition.prototype.isActive = function isActive() {\n    return this._active;\n};\n\n/**\n * Halt transition at current state and erase all pending actions.\n *\n * @method halt\n *\n */\nTweenTransition.prototype.halt = function halt() {\n    this.reset(this.get());\n};\n\n// Register all the default curves\nTweenTransition.registerCurve('linear', TweenTransition.Curves.linear);\nTweenTransition.registerCurve('easeIn', TweenTransition.Curves.easeIn);\nTweenTransition.registerCurve('easeOut', TweenTransition.Curves.easeOut);\nTweenTransition.registerCurve('easeInOut', TweenTransition.Curves.easeInOut);\nTweenTransition.registerCurve('easeOutBounce', TweenTransition.Curves.easeOutBounce);\nTweenTransition.registerCurve('spring', TweenTransition.Curves.spring);\n\nTweenTransition.customCurve = function customCurve(v1, v2) {\n    v1 = v1 || 0; v2 = v2 || 0;\n    return function(t) {\n        return v1*t + (-2*v1 - v2 + 3)*t*t + (v1 + v2 - 2)*t*t*t;\n    };\n};\n\nmodule.exports = TweenTransition;\n},{}],91:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar PE = require('../physics/PhysicsEngine');\nvar Particle = require('../physics/bodies/Particle');\nvar Spring = require('../physics/forces/Spring');\nvar Wall = require('../physics/constraints/Wall');\nvar Vector = require('../math/Vector');\n\n/**\n * WallTransition is a method of transitioning between two values (numbers,\n *   or arrays of numbers) with a bounce. Unlike a SpringTransition\n *   The transition will not overshoot the target, but bounce back against it.\n *   The behavior of the bounce is specified by the transition options.\n *\n * @class WallTransition\n * @constructor\n *\n * @param {Number|Array} [state=0] Initial state\n */\nfunction WallTransition(state) {\n    state = state || 0;\n\n    this.endState  = new Vector(state);\n    this.initState = new Vector();\n\n    this.spring = new Spring({anchor : this.endState});\n    this.wall   = new Wall();\n\n    this._restTolerance = 1e-10;\n    this._dimensions = 1;\n    this._absRestTolerance = this._restTolerance;\n    this._callback = undefined;\n\n    this.PE = new PE();\n    this.particle = new Particle();\n\n    this.PE.addBody(this.particle);\n    this.PE.attach([this.wall, this.spring], this.particle);\n}\n\nWallTransition.SUPPORTS_MULTIPLE = 3;\n\n/**\n * @property WallTransition.DEFAULT_OPTIONS\n * @type Object\n * @protected\n * @static\n */\nWallTransition.DEFAULT_OPTIONS = {\n\n    /**\n     * The amount of time in milliseconds taken for one complete oscillation\n     * when there is no damping\n     *    Range : [0, Infinity]\n     *\n     * @attribute period\n     * @type Number\n     * @default 300\n     */\n    period : 300,\n\n    /**\n     * The damping of the snap.\n     *    Range : [0, 1]\n     *    0 = no damping, and the spring will oscillate forever\n     *    1 = critically damped (the spring will never oscillate)\n     *\n     * @attribute dampingRatio\n     * @type Number\n     * @default 0.5\n     */\n    dampingRatio : 0.5,\n\n    /**\n     * The initial velocity of the transition.\n     *\n     * @attribute velocity\n     * @type Number|Array\n     * @default 0\n     */\n    velocity : 0,\n\n    /**\n     * The percentage of momentum transferred to the wall\n     *\n     * @attribute restitution\n     * @type Number\n     * @default 0.5\n     */\n    restitution : 0.5\n};\n\nfunction _getEnergy() {\n    return this.particle.getEnergy() + this.spring.getEnergy([this.particle]);\n}\n\nfunction _setAbsoluteRestTolerance() {\n    var distance = this.endState.sub(this.initState).normSquared();\n    this._absRestTolerance = (distance === 0)\n        ? this._restTolerance\n        : this._restTolerance * distance;\n}\n\nfunction _wake() {\n    this.PE.wake();\n}\n\nfunction _sleep() {\n    this.PE.sleep();\n}\n\nfunction _setTarget(target) {\n    this.endState.set(target);\n\n    var dist = this.endState.sub(this.initState).norm();\n\n    this.wall.setOptions({\n        distance : this.endState.norm(),\n        normal : (dist === 0)\n            ? this.particle.velocity.normalize(-1)\n            : this.endState.sub(this.initState).normalize(-1)\n    });\n\n    _setAbsoluteRestTolerance.call(this);\n}\n\nfunction _setParticlePosition(p) {\n    this.particle.position.set(p);\n}\n\nfunction _setParticleVelocity(v) {\n    this.particle.velocity.set(v);\n}\n\nfunction _getParticlePosition() {\n    return (this._dimensions === 0)\n        ? this.particle.getPosition1D()\n        : this.particle.getPosition();\n}\n\nfunction _getParticleVelocity() {\n    return (this._dimensions === 0)\n        ? this.particle.getVelocity1D()\n        : this.particle.getVelocity();\n}\n\nfunction _setCallback(callback) {\n    this._callback = callback;\n}\n\nfunction _update() {\n    if (this.PE.isSleeping()) {\n        if (this._callback) {\n            var cb = this._callback;\n            this._callback = undefined;\n            cb();\n        }\n        return;\n    }\n    var energy = _getEnergy.call(this);\n    if (energy < this._absRestTolerance) {\n        _sleep.call(this);\n        _setParticlePosition.call(this, this.endState);\n        _setParticleVelocity.call(this, [0,0,0]);\n    }\n}\n\nfunction _setupDefinition(def) {\n    var defaults = WallTransition.DEFAULT_OPTIONS;\n    if (def.period === undefined) def.period = defaults.period;\n    if (def.dampingRatio === undefined) def.dampingRatio = defaults.dampingRatio;\n    if (def.velocity === undefined) def.velocity = defaults.velocity;\n    if (def.restitution === undefined) def.restitution = defaults.restitution;\n\n    //setup spring\n    this.spring.setOptions({\n        period : def.period,\n        dampingRatio : def.dampingRatio\n    });\n\n    //setup wall\n    this.wall.setOptions({\n        restitution : def.restitution\n    });\n\n    //setup particle\n    _setParticleVelocity.call(this, def.velocity);\n}\n\n/**\n * Resets the state and velocity\n *\n * @method reset\n *\n * @param {Number|Array}  state     State\n * @param  {Number|Array} [velocity] Velocity\n */\nWallTransition.prototype.reset = function reset(state, velocity) {\n    this._dimensions = (state instanceof Array)\n        ? state.length\n        : 0;\n\n    this.initState.set(state);\n    _setParticlePosition.call(this, state);\n    if (velocity) _setParticleVelocity.call(this, velocity);\n    _setTarget.call(this, state);\n    _setCallback.call(this, undefined);\n};\n\n/**\n * Getter for velocity\n *\n * @method getVelocity\n *\n * @return velocity {Number|Array}\n */\nWallTransition.prototype.getVelocity = function getVelocity() {\n    return _getParticleVelocity.call(this);\n};\n\n/**\n * Setter for velocity\n *\n * @method setVelocity\n *\n * @return velocity {Number|Array}\n */\nWallTransition.prototype.setVelocity = function setVelocity(velocity) {\n    this.call(this, _setParticleVelocity(velocity));\n};\n\n/**\n * Detects whether a transition is in progress\n *\n * @method isActive\n *\n * @return {Boolean}\n */\nWallTransition.prototype.isActive = function isActive() {\n    return !this.PE.isSleeping();\n};\n\n/**\n * Halt the transition\n *\n * @method halt\n */\nWallTransition.prototype.halt = function halt() {\n    this.set(this.get());\n};\n\n/**\n * Getter\n *\n * @method get\n *\n * @return state {Number|Array}\n */\nWallTransition.prototype.get = function get() {\n    _update.call(this);\n    return _getParticlePosition.call(this);\n};\n\n/**\n * Set the end position and transition, with optional callback on completion.\n *\n * @method set\n *\n * @param state {Number|Array}      Final state\n * @param [definition] {Object}     Transition definition\n * @param [callback] {Function}     Callback\n */\nWallTransition.prototype.set = function set(state, definition, callback) {\n    if (!definition) {\n        this.reset(state);\n        if (callback) callback();\n        return;\n    }\n\n    this._dimensions = (state instanceof Array)\n        ? state.length\n        : 0;\n\n    _wake.call(this);\n    _setupDefinition.call(this, definition);\n    _setTarget.call(this, state);\n    _setCallback.call(this, callback);\n};\n\nmodule.exports = WallTransition;\n},{\"../math/Vector\":41,\"../physics/PhysicsEngine\":48,\"../physics/bodies/Particle\":51,\"../physics/constraints/Wall\":60,\"../physics/forces/Spring\":68}],92:[function(require,module,exports){\nmodule.exports = {\n  CachedMap: require('./CachedMap'),\n  Easing: require('./Easing'),\n  MultipleTransition: require('./MultipleTransition'),\n  SnapTransition: require('./SnapTransition'),\n  SpringTransition: require('./SpringTransition'),\n  Transitionable: require('./Transitionable'),\n  TransitionableTransform: require('./TransitionableTransform'),\n  TweenTransition: require('./TweenTransition'),\n  WallTransition: require('./WallTransition')\n};\n\n},{\"./CachedMap\":83,\"./Easing\":84,\"./MultipleTransition\":85,\"./SnapTransition\":86,\"./SpringTransition\":87,\"./Transitionable\":88,\"./TransitionableTransform\":89,\"./TweenTransition\":90,\"./WallTransition\":91}],93:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\n\n\n\n/**\n * Collection to map keyboard codes in plain english\n *\n * @class KeyCodes\n * @static\n */\nvar KeyCodes = {\n    0 : 48,\n    1 : 49,\n    2 : 50,\n    3 : 51,\n    4 : 52,\n    5 : 53,\n    6 : 54,\n    7 : 55,\n    8 : 56,\n    9 : 57,\n    a : 97,\n    b : 98,\n    c : 99,\n    d : 100,\n    e : 101,\n    f : 102,\n    g : 103,\n    h : 104,\n    i : 105,\n    j : 106,\n    k : 107,\n    l : 108,\n    m : 109,\n    n : 110,\n    o : 111,\n    p : 112,\n    q : 113,\n    r : 114,\n    s : 115,\n    t : 116,\n    u : 117,\n    v : 118,\n    w : 119,\n    x : 120,\n    y : 121,\n    z : 122,\n    A : 65,\n    B : 66,\n    C : 67,\n    D : 68,\n    E : 69,\n    F : 70,\n    G : 71,\n    H : 72,\n    I : 73,\n    J : 74,\n    K : 75,\n    L : 76,\n    M : 77,\n    N : 78,\n    O : 79,\n    P : 80,\n    Q : 81,\n    R : 82,\n    S : 83,\n    T : 84,\n    U : 85,\n    V : 86,\n    W : 87,\n    X : 88,\n    Y : 89,\n    Z : 90,\n    ENTER : 13,\n    LEFT_ARROW: 37,\n    RIGHT_ARROW: 39,\n    UP_ARROW: 38,\n    DOWN_ARROW: 40,\n    SPACE: 32,\n    SHIFT: 16,\n    TAB: 9\n};\n\nmodule.exports = KeyCodes;\n},{}],94:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n// TODO fix func-style\n/*eslint func-style: [0, \"declaration\"] */\n\n/**\n * An internal library to reproduce javascript time-based scheduling.\n *   Using standard javascript setTimeout methods can have a negative performance impact\n *   when combined with the Famous rendering process, so instead require Timer and call\n *   Timer.setTimeout, Timer.setInterval, etc.\n *\n * @class Timer\n * @constructor\n */\nvar FamousEngine = require('../core/Engine');\n\nvar _event  = 'prerender';\n\nvar getTime = (window.performance && window.performance.now) ?\n    function() {\n        return window.performance.now();\n    }\n    : function() {\n        return Date.now();\n    };\n\n/**\n * Add a function to be run on every prerender\n *\n * @method addTimerFunction\n *\n * @param {function} fn function to be run every prerender\n *\n * @return {function} function passed in as parameter\n */\nfunction addTimerFunction(fn) {\n    FamousEngine.on(_event, fn);\n    return fn;\n}\n\n/**\n * Wraps a function to be invoked after a certain amount of time.\n *  After a set duration has passed, it executes the function and\n *  removes it as a listener to 'prerender'.\n *\n * @method setTimeout\n *\n * @param {function} fn function to be run after a specified duration\n * @param {number} duration milliseconds from now to execute the function\n *\n * @return {function} function passed in as parameter\n */\nfunction setTimeout(fn, duration) {\n    var t = getTime();\n    var callback = function() {\n        var t2 = getTime();\n        if (t2 - t >= duration) {\n            fn.apply(this, arguments);\n            FamousEngine.removeListener(_event, callback);\n        }\n    };\n    return addTimerFunction(callback);\n}\n\n/**\n * Wraps a function to be invoked after a certain amount of time.\n *  After a set duration has passed, it executes the function and\n *  resets the execution time.\n *\n * @method setInterval\n *\n * @param {function} fn function to be run after a specified duration\n * @param {number} duration interval to execute function in milliseconds\n *\n * @return {function} function passed in as parameter\n */\nfunction setInterval(fn, duration) {\n    var t = getTime();\n    var callback = function() {\n        var t2 = getTime();\n        if (t2 - t >= duration) {\n            fn.apply(this, arguments);\n            t = getTime();\n        }\n    };\n    return addTimerFunction(callback);\n}\n\n/**\n * Wraps a function to be invoked after a certain amount of prerender ticks.\n *  Similar use to setTimeout but tied to the engine's run speed.\n *\n * @method after\n *\n * @param {function} fn function to be run after a specified amount of ticks\n * @param {number} numTicks number of prerender frames to wait\n *\n * @return {function} function passed in as parameter\n */\nfunction after(fn, numTicks) {\n    if (numTicks === undefined) return undefined;\n    var callback = function() {\n        numTicks--;\n        if (numTicks <= 0) { //in case numTicks is fraction or negative\n            fn.apply(this, arguments);\n            clear(callback);\n        }\n    };\n    return addTimerFunction(callback);\n}\n\n/**\n * Wraps a function to be continually invoked after a certain amount of prerender ticks.\n *  Similar use to setInterval but tied to the engine's run speed.\n *\n * @method every\n *\n * @param {function} fn function to be run after a specified amount of ticks\n * @param {number} numTicks number of prerender frames to wait\n *\n * @return {function} function passed in as parameter\n */\nfunction every(fn, numTicks) {\n    numTicks = numTicks || 1;\n    var initial = numTicks;\n    var callback = function() {\n        numTicks--;\n        if (numTicks <= 0) { //in case numTicks is fraction or negative\n            fn.apply(this, arguments);\n            numTicks = initial;\n        }\n    };\n    return addTimerFunction(callback);\n}\n\n/**\n * Remove a function that gets called every prerender\n *\n * @method clear\n *\n * @param {function} fn event linstener\n */\nfunction clear(fn) {\n    FamousEngine.removeListener(_event, fn);\n}\n\n/**\n * Executes a function after a certain amount of time. Makes sure\n *  the function is not run multiple times.\n *\n * @method debounce\n *\n * @param {function} func function to run after certain amount of time\n * @param {number} wait amount of time\n *\n * @return {function} function that is not able to debounce\n */\nfunction debounce(func, wait) {\n    var timeout;\n    var ctx;\n    var timestamp;\n    var result;\n    var args;\n    return function() {\n        ctx = this;\n        args = arguments;\n        timestamp = getTime();\n\n        var fn = function() {\n            var last = getTime - timestamp;\n\n            if (last < wait) {\n                timeout = setTimeout(fn, wait - last);\n            } else {\n                timeout = null;\n                result = func.apply(ctx, args);\n            }\n        };\n\n        clear(timeout);\n        timeout = setTimeout(fn, wait);\n\n        return result;\n    };\n}\n\nmodule.exports = {\n    setTimeout : setTimeout,\n    setInterval : setInterval,\n    debounce : debounce,\n    after : after,\n    every : every,\n    clear : clear\n};\n},{\"../core/Engine\":4}],95:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\n\n\n/**\n * This namespace holds standalone functionality.\n *  Currently includes name mapping for transition curves,\n *  name mapping for origin pairs, and the after() function.\n *\n * @class Utility\n * @static\n */\nvar Utility = {};\n\n/**\n * Table of direction array positions\n *\n * @property {object} Direction\n * @final\n */\nUtility.Direction = {\n    X: 0,\n    Y: 1,\n    Z: 2\n};\n\n/**\n * Return wrapper around callback function. Once the wrapper is called N\n *   times, invoke the callback function. Arguments and scope preserved.\n *\n * @method after\n *\n * @param {number} count number of calls before callback function invoked\n * @param {Function} callback wrapped callback function\n *\n * @return {function} wrapped callback with coundown feature\n */\nUtility.after = function after(count, callback) {\n    var counter = count;\n    return function() {\n        counter--;\n        if (counter === 0) callback.apply(this, arguments);\n    };\n};\n\n/**\n * Load a URL and return its contents in a callback\n *\n * @method loadURL\n *\n * @param {string} url URL of object\n * @param {function} callback callback to dispatch with content\n */\nUtility.loadURL = function loadURL(url, callback) {\n    var xhr = new XMLHttpRequest();\n    xhr.onreadystatechange = function onreadystatechange() {\n        if (this.readyState === 4) {\n            if (callback) callback(this.responseText);\n        }\n    };\n    xhr.open('GET', url);\n    xhr.send();\n};\n\n/**\n * Create a document fragment from a string of HTML\n *\n * @method createDocumentFragmentFromHTML\n *\n * @param {string} html HTML to convert to DocumentFragment\n *\n * @return {DocumentFragment} DocumentFragment representing input HTML\n */\nUtility.createDocumentFragmentFromHTML = function createDocumentFragmentFromHTML(html) {\n    var element = document.createElement('div');\n    element.innerHTML = html;\n    var result = document.createDocumentFragment();\n    while (element.hasChildNodes()) result.appendChild(element.firstChild);\n    return result;\n};\n\n/*\n *  Deep clone an object.\n *  @param b {Object} Object to clone\n *  @return a {Object} Cloned object.\n */\nUtility.clone = function clone(b) {\n    var a;\n    if (typeof b === 'object') {\n        a = (b instanceof Array) ? [] : {};\n        for (var key in b) {\n            if (typeof b[key] === 'object' && b[key] !== null) {\n                if (b[key] instanceof Array) {\n                    a[key] = new Array(b[key].length);\n                    for (var i = 0; i < b[key].length; i++) {\n                        a[key][i] = Utility.clone(b[key][i]);\n                    }\n                }\n                else {\n                  a[key] = Utility.clone(b[key]);\n                }\n            }\n            else {\n                a[key] = b[key];\n            }\n        }\n    }\n    else {\n        a = b;\n    }\n    return a;\n};\n\nmodule.exports = Utility;\n},{}],96:[function(require,module,exports){\nmodule.exports = {\n  KeyCodes: require('./KeyCodes'),\n  Timer: require('./Timer'),\n  Utility: require('./Utility')\n};\n\n},{\"./KeyCodes\":93,\"./Timer\":94,\"./Utility\":95}],97:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mike@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Entity = require('../core/Entity');\nvar Transform = require('../core/Transform');\nvar EventHandler = require('../core/EventHandler');\nvar OptionsManager = require('../core/OptionsManager');\n\n/**\n * ContextualView is an interface for creating views that need to\n *   be aware of their parent's transform, size, and/or origin.\n *   Consists of a OptionsManager paired with an input EventHandler\n *   and an output EventHandler. Meant to be extended by the developer.\n * @class ContextualView\n * @constructor\n * @param {Options} [options] An object of configurable options.\n */\nfunction ContextualView(options) {\n    this.options = Object.create(this.constructor.DEFAULT_OPTIONS || ContextualView.DEFAULT_OPTIONS);\n    this._optionsManager = new OptionsManager(this.options);\n    if (options) this.setOptions(options);\n\n    this._eventInput = new EventHandler();\n    this._eventOutput = new EventHandler();\n    EventHandler.setInputHandler(this, this._eventInput);\n    EventHandler.setOutputHandler(this, this._eventOutput);\n\n    this._id = Entity.register(this);\n}\n\nContextualView.DEFAULT_OPTIONS = {};\n\n/**\n * Patches the ContextualLayout instance's options with the passed-in ones.\n *\n * @method setOptions\n * @param {Options} options An object of configurable options for the ContextualLayout instance.\n */\nContextualView.prototype.setOptions = function setOptions(options) {\n    return this._optionsManager.setOptions(options);\n};\n\n/**\n * Returns ContextualLayout instance's options.\n *\n * @method setOptions\n * @param {string} key\n * @return {Options} options The instance's object of configurable options.\n */\nContextualView.prototype.getOptions = function getOptions(key) {\n    return this._optionsManager.getOptions(key);\n};\n\n/**\n * Return the registers Entity id for the ContextualView.\n *\n * @private\n * @method render\n * @return {Number} Registered Entity id\n */\nContextualView.prototype.render = function render() {\n    return this._id;\n};\n\n/**\n * Apply changes from this component to the corresponding document element.\n * This includes changes to classes, styles, size, content, opacity, origin,\n * and matrix transforms.\n *\n * @private\n * @method commit\n * @param {Context} context commit context\n */\nContextualView.prototype.commit = function commit(context) {};\n\nmodule.exports = ContextualView;\n},{\"../core/Entity\":5,\"../core/EventHandler\":7,\"../core/OptionsManager\":10,\"../core/Transform\":15}],98:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: felix@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Transform = require('../core/Transform');\nvar OptionsManager = require('../core/OptionsManager');\nvar Transitionable = require('../transitions/Transitionable');\nvar Utility = require('../utilities/Utility');\nvar SequentialLayout = require('./SequentialLayout');\n\n/**\n * A Sequential Layout that can be opened and closed with animations.\n *\n *   Takes the same options as SequentialLayout\n *   as well as options for the open/close transition\n *   and the rotation you want your Deck instance to layout in.\n *\n * @class Deck\n * @constructor\n * @extends SequentialLayout\n *\n * @param {Options} [options] An object of configurable options\n * @param {Transition} [options.transition={duration: 500, curve: 'easeOutBounce'}\n *   The transition that executes upon opening or closing your deck instance.\n * @param {Number} [stackRotation=0] The amount of rotation applied to the propogation\n *   of the Deck instance's stack of renderables.\n * @param {Object} [options.transition] A transition object for changing between states.\n * @param {Number} [options.direction] axis of expansion (Utility.Direction.X or .Y)\n */\nfunction Deck(options) {\n    SequentialLayout.apply(this, arguments);\n    this.state = new Transitionable(0);\n    this._isOpen = false;\n\n    this.setOutputFunction(function(input, offset, index) {\n        var state = _getState.call(this);\n        var positionMatrix = (this.options.direction === Utility.Direction.X) ?\n            Transform.translate(state * offset, 0, 0.001 * (state - 1) * offset) :\n            Transform.translate(0, state * offset, 0.001 * (state - 1) * offset);\n        var output = input.render();\n        if (this.options.stackRotation) {\n            var amount = this.options.stackRotation * index * (1 - state);\n            output = {\n                transform: Transform.rotateZ(amount),\n                origin: [0.5, 0.5],\n                target: output\n            };\n        }\n        return {\n            transform: positionMatrix,\n            size: input.getSize(),\n            target: output\n        };\n    });\n}\nDeck.prototype = Object.create(SequentialLayout.prototype);\nDeck.prototype.constructor = Deck;\n\nDeck.DEFAULT_OPTIONS = OptionsManager.patch(SequentialLayout.DEFAULT_OPTIONS, {\n    transition: {\n        curve: 'easeOutBounce',\n        duration: 500\n    },\n    stackRotation: 0\n});\n\n/**\n * Returns the width and the height of the Deck instance.\n *\n * @method getSize\n * @return {Array} A two value array of Deck's current width and height (in that order).\n *   Scales as Deck opens and closes.\n */\nDeck.prototype.getSize = function getSize() {\n    var originalSize = SequentialLayout.prototype.getSize.apply(this, arguments);\n    var firstSize = this._items ? this._items.get().getSize() : [0, 0];\n    if (!firstSize) firstSize = [0, 0];\n    var state = _getState.call(this);\n    var invState = 1 - state;\n    return [firstSize[0] * invState + originalSize[0] * state, firstSize[1] * invState + originalSize[1] * state];\n};\n\nfunction _getState(returnFinal) {\n    if (returnFinal) return this._isOpen ? 1 : 0;\n    else return this.state.get();\n}\n\nfunction _setState(pos, transition, callback) {\n    this.state.halt();\n    this.state.set(pos, transition, callback);\n}\n\n/**\n * An accesor method to find out if the messaged Deck instance is open or closed.\n *\n * @method isOpen\n * @return {Boolean} Returns true if the instance is open or false if it's closed.\n */\nDeck.prototype.isOpen = function isOpen() {\n    return this._isOpen;\n};\n\n/**\n * Sets the Deck instance to an open state.\n *\n * @method open\n * @param {function} [callback] Executes after transitioning to a fully open state.\n */\nDeck.prototype.open = function open(callback) {\n    this._isOpen = true;\n   _setState.call(this, 1, this.options.transition, callback);\n};\n\n/**\n * Sets the Deck instance to an open state.\n *\n * @method close\n * @param {function} [callback] Executes after transitioning to a fully closed state.\n */\nDeck.prototype.close = function close(callback) {\n    this._isOpen = false;\n    _setState.call(this, 0, this.options.transition, callback);\n};\n\n/**\n * Sets the Deck instance from its current state to the opposite state.\n *\n * @method close\n * @param {function} [callback] Executes after transitioning to the toggled state.\n */\nDeck.prototype.toggle = function toggle(callback) {\n    if (this._isOpen) this.close(callback);\n    else this.open(callback);\n};\n\nmodule.exports = Deck;\n},{\"../core/OptionsManager\":10,\"../core/Transform\":15,\"../transitions/Transitionable\":88,\"../utilities/Utility\":95,\"./SequentialLayout\":110}],99:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar RenderNode = require('../core/RenderNode');\nvar Transform = require('../core/Transform');\nvar OptionsManager = require('../core/OptionsManager');\nvar Transitionable = require('../transitions/Transitionable');\nvar EventHandler = require('../core/EventHandler');\n\n/**\n * A layout which will arrange two renderables: a featured content, and a\n *   concealed drawer. The drawer can be revealed from any side of the\n *   content (left, top, right, bottom) by dragging the content.\n *\n *   A @link{Sync} must be piped in to recieve user input.\n *\n *   Events:\n *     broadcasts: 'open', 'close'\n *     listens to: 'update', 'end'\n *\n * @class DrawerLayout\n *\n * @constructor\n *\n * @param [options] {Object}                                An object of configurable options\n * @param [options.side=DrawerLayout.SIDES.LEFT] {Number}   The side of the content the drawer is placed.\n *                                                          Choice of DrawerLayout.SIDES.LEFT/RIGHT/TOP/BOTTOM\n * @param [options.drawerLength=0] {Number}                 The default length of the drawer\n * @param [options.velocityThreshold=0] {Number}            The velocity threshold to trigger a toggle\n * @param [options.positionThreshold=0] {Number}            The position threshold to trigger a toggle\n * @param [options.transition=true] {Boolean|Object}        The toggle transition\n */\nfunction DrawerLayout(options) {\n    this.options = Object.create(DrawerLayout.DEFAULT_OPTIONS);\n    this._optionsManager = new OptionsManager(this.options);\n    if (options) this.setOptions(options);\n\n    this._position = new Transitionable(0);\n    this._direction = _getDirectionFromSide(this.options.side);\n    this._orientation = _getOrientationFromSide(this.options.side);\n    this._isOpen = false;\n    this._cachedLength = 0;\n\n    this.drawer = new RenderNode();\n    this.content = new RenderNode();\n\n    this._eventInput = new EventHandler();\n    this._eventOutput = new EventHandler();\n    EventHandler.setInputHandler(this, this._eventInput);\n    EventHandler.setOutputHandler(this, this._eventOutput);\n\n    this._eventInput.on('update', _handleUpdate.bind(this));\n    this._eventInput.on('end', _handleEnd.bind(this));\n}\n\nvar DIRECTION_X = 0;\nvar DIRECTION_Y = 1;\n\nDrawerLayout.SIDES = {\n    LEFT   : 0,\n    TOP    : 1,\n    RIGHT  : 2,\n    BOTTOM : 3\n};\n\nDrawerLayout.DEFAULT_OPTIONS = {\n    side: DrawerLayout.SIDES.LEFT,\n    drawerLength : 0,\n    velocityThreshold : 0,\n    positionThreshold : 0,\n    transition : true\n};\n\nfunction _getDirectionFromSide(side) {\n    var SIDES = DrawerLayout.SIDES;\n    return (side === SIDES.LEFT || side === SIDES.RIGHT) ? DIRECTION_X : DIRECTION_Y;\n}\n\nfunction _getOrientationFromSide(side) {\n    var SIDES = DrawerLayout.SIDES;\n    return (side === SIDES.LEFT || side === SIDES.TOP) ? 1 : -1;\n}\n\nfunction _resolveNodeSize(node) {\n    var options = this.options;\n    var size;\n    if (options.drawerLength) size = options.drawerLength;\n    else {\n        var nodeSize = node.getSize();\n        size = nodeSize ? nodeSize[this._direction] : options.drawerLength;\n    }\n    return this._orientation * size;\n}\n\nfunction _handleUpdate(data) {\n    var newPosition = this.getPosition() + data.delta;\n\n    var MIN_LENGTH;\n    var MAX_LENGTH;\n    this._cachedLength = _resolveNodeSize.call(this, this.drawer);\n\n    if (this._orientation === 1){\n        MIN_LENGTH = 0;\n        MAX_LENGTH = this._cachedLength;\n    }\n    else {\n        MIN_LENGTH = this._cachedLength;\n        MAX_LENGTH = 0;\n    }\n\n    if (newPosition > MAX_LENGTH) newPosition = MAX_LENGTH;\n    else if (newPosition < MIN_LENGTH) newPosition = MIN_LENGTH;\n\n    this.setPosition(newPosition);\n}\n\nfunction _handleEnd(data) {\n    var velocity = data.velocity;\n    var position = this._orientation * this.getPosition();\n    var options = this.options;\n\n    var MAX_LENGTH = this._orientation * this._cachedLength;\n    var positionThreshold = options.positionThreshold || MAX_LENGTH / 2;\n    var velocityThreshold = options.velocityThreshold;\n\n    if (options.transition instanceof Object)\n        options.transition.velocity = data.velocity;\n\n    if (position === 0) {\n        this._isOpen = false;\n        return;\n    }\n\n    if (position === MAX_LENGTH) {\n        this._isOpen = true;\n        return;\n    }\n\n    var shouldToggle = Math.abs(velocity) > velocityThreshold || (!this._isOpen && position > positionThreshold) || (this._isOpen && position < positionThreshold);\n    if (shouldToggle) this.toggle();\n    else this.reset();\n}\n\n/**\n * Patches the DrawerLayout instance's options with the passed-in ones.\n *\n * @method setOptions\n * @param options {Object} options\n */\nDrawerLayout.prototype.setOptions = function setOptions(options) {\n    this._optionsManager.setOptions(options);\n    if (options.side !== undefined) {\n        this._direction = _getDirectionFromSide(options.side);\n        this._orientation = _getOrientationFromSide(options.side);\n    }\n};\n\n/**\n * Reveals the drawer with a transition\n *   Emits an 'open' event when an opening transition has been committed to.\n *\n * @method open\n * @param [transition] {Boolean|Object} transition definition\n * @param [callback] {Function}         callback\n */\nDrawerLayout.prototype.open = function open(transition, callback) {\n    if (transition instanceof Function) callback = transition;\n    if (transition === undefined) transition = this.options.transition;\n    this._cachedLength = _resolveNodeSize.call(this, this.drawer);\n    this.setPosition(this._cachedLength, transition, callback);\n    if (!this._isOpen) {\n        this._isOpen = true;\n        this._eventOutput.emit('open');\n    }\n};\n\n/**\n * Conceals the drawer with a transition\n *   Emits a 'close' event when an closing transition has been committed to.\n *\n * @method close\n * @param [transition] {Boolean|Object} transition definition\n * @param [callback] {Function}         callback\n */\nDrawerLayout.prototype.close = function close(transition, callback) {\n    if (transition instanceof Function) callback = transition;\n    if (transition === undefined) transition = this.options.transition;\n    this.setPosition(0, transition, callback);\n    if (this._isOpen){\n        this._isOpen = false;\n        this._eventOutput.emit('close');\n    }\n};\n\n/**\n * Sets the position in pixels for the content's displacement\n *\n * @method setPosition\n * @param position {Number}             position\n * @param [transition] {Boolean|Object} transition definition\n * @param [callback] {Function}         callback\n */\nDrawerLayout.prototype.setPosition = function setPosition(position, transition, callback) {\n    if (this._position.isActive()) this._position.halt();\n    this._position.set(position, transition, callback);\n};\n\n/**\n * Gets the position in pixels for the content's displacement\n *\n * @method getPosition\n * @return position {Number} position\n */\nDrawerLayout.prototype.getPosition = function getPosition() {\n    return this._position.get();\n};\n\n/**\n * Sets the progress (between 0 and 1) for the content's displacement\n *\n * @method setProgress\n * @param progress {Number}             position\n * @param [transition] {Boolean|Object} transition definition\n * @param [callback] {Function}         callback\n */\nDrawerLayout.prototype.setProgress = function setProgress(progress, transition, callback) {\n    return this._position.set(progress * this._cachedLength, transition, callback);\n};\n\n/**\n * Gets the progress (between 0 and 1) for the content's displacement\n *\n * @method getProgress\n * @return position {Number} position\n */\nDrawerLayout.prototype.getProgress = function getProgress() {\n    return this._position.get() / this._cachedLength;\n};\n\n/**\n * Toggles between open and closed states\n *\n * @method toggle\n * @param [transition] {Boolean|Object} transition definition\n */\nDrawerLayout.prototype.toggle = function toggle(transition) {\n    if (this._isOpen) this.close(transition);\n    else this.open(transition);\n};\n\n/**\n * Resets to last state of being open or closed\n *\n * @method reset\n * @param [transition] {Boolean|Object} transition definition\n */\nDrawerLayout.prototype.reset = function reset(transition) {\n    if (this._isOpen) this.open(transition);\n    else this.close(transition);\n};\n\n/**\n * Returns if drawer is committed to being open or closed\n *\n * @method isOpen\n * @return {Boolean}\n */\nDrawerLayout.prototype.isOpen = function isOpen(transition) {\n    return this._isOpen;\n};\n\n/**\n * Generates a Render Spec from the contents of this component\n *\n * @private\n * @method render\n * @return {Spec}\n */\nDrawerLayout.prototype.render = function render() {\n    var position = this.getPosition();\n\n    // clamp transition on close\n    if (!this._isOpen && (position < 0 && this._orientation === 1) || (position > 0 && this._orientation === -1)) {\n        position = 0;\n        this.setPosition(position);\n    }\n\n    var contentTransform = (this._direction === DIRECTION_X)\n        ? Transform.translate(position, 0, 0)\n        : Transform.translate(0, position, 0);\n\n    return [\n        {\n            transform : Transform.behind,\n            target: this.drawer.render()\n        },\n        {\n            transform: contentTransform,\n            target: this.content.render()\n        }\n    ];\n};\n\nmodule.exports = DrawerLayout;\n},{\"../core/EventHandler\":7,\"../core/OptionsManager\":10,\"../core/RenderNode\":11,\"../core/Transform\":15,\"../transitions/Transitionable\":88}],100:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: felix@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar CachedMap = require('../transitions/CachedMap');\nvar Entity = require('../core/Entity');\nvar EventHandler = require('../core/EventHandler');\nvar Transform = require('../core/Transform');\nvar RenderController = require('./RenderController');\n\n/**\n * Container which handles swapping renderables from the edge of its parent context.\n * @class EdgeSwapper\n * @constructor\n * @param {Options} [options] An object of configurable options.\n *   Takes the same options as RenderController.\n * @uses RenderController\n */\nfunction EdgeSwapper(options) {\n    this._currentTarget = null;\n    this._size = [undefined, undefined];\n\n    this._controller = new RenderController(options);\n    this._controller.inTransformFrom(CachedMap.create(_transformMap.bind(this, 0.0001)));\n    this._controller.outTransformFrom(CachedMap.create(_transformMap.bind(this, -0.0001)));\n\n    this._eventInput = new EventHandler();\n    EventHandler.setInputHandler(this, this._eventInput);\n\n    this._entityId = Entity.register(this);\n    if (options) this.setOptions(options);\n}\n\nfunction _transformMap(zMax, progress) {\n    return Transform.translate(this._size[0] * (1 - progress), 0, zMax * (1 - progress));\n}\n\n/**\n * Displays the passed-in content with the EdgeSwapper instance's default transition.\n *\n * @method show\n * @param {Object} content The renderable you want to display.\n */\nEdgeSwapper.prototype.show = function show(content) {\n    // stop sending input to old target\n    if (this._currentTarget) this._eventInput.unpipe(this._currentTarget);\n\n    this._currentTarget = content;\n\n    // start sending input to new target\n    if (this._currentTarget && this._currentTarget.trigger) this._eventInput.pipe(this._currentTarget);\n\n    this._controller.show.apply(this._controller, arguments);\n};\n\n/**\n * Patches the EdgeSwapper instance's options with the passed-in ones.\n *\n * @method setOptions\n * @param {Options} options An object of configurable options for the Edgeswapper instance.\n */\nEdgeSwapper.prototype.setOptions = function setOptions(options) {\n    this._controller.setOptions(options);\n};\n\n/**\n * Generate a render spec from the contents of this component.\n *\n * @private\n * @method render\n * @return {number} Render spec for this component\n */\nEdgeSwapper.prototype.render = function render() {\n    return this._entityId;\n};\n\n/**\n * Apply changes from this component to the corresponding document element.\n * This includes changes to classes, styles, size, content, opacity, origin,\n * and matrix transforms.\n *\n * @private\n * @method commit\n * @param {Context} context commit context\n */\nEdgeSwapper.prototype.commit = function commit(context) {\n    this._size[0] = context.size[0];\n    this._size[1] = context.size[1];\n\n    return {\n        transform: context.transform,\n        opacity: context.opacity,\n        origin: context.origin,\n        size: context.size,\n        target: this._controller.render()\n    };\n};\n\nmodule.exports = EdgeSwapper;\n},{\"../core/Entity\":5,\"../core/EventHandler\":7,\"../core/Transform\":15,\"../transitions/CachedMap\":83,\"./RenderController\":106}],101:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mike@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Entity = require('../core/Entity');\nvar Transform = require('../core/Transform');\nvar OptionsManager = require('../core/OptionsManager');\nvar EventHandler = require('../core/EventHandler');\nvar Transitionable = require('../transitions/Transitionable');\n\n/**\n * A layout which divides a context into sections based on a proportion\n *   of the total sum of ratios.  FlexibleLayout can either lay renderables\n *   out vertically or horizontally.\n * @class FlexibleLayout\n * @constructor\n * @param {Options} [options] An object of configurable options.\n * @param {Number} [options.direction=0] Direction the FlexibleLayout instance should lay out renderables.\n * @param {Transition} [options.transition=false] The transiton that controls the FlexibleLayout instance's reflow.\n * @param {Ratios} [options.ratios=[]] The proportions for the renderables to maintain\n */\nfunction FlexibleLayout(options) {\n    this.options = Object.create(FlexibleLayout.DEFAULT_OPTIONS);\n    this.optionsManager = new OptionsManager(this.options);\n    if (options) this.setOptions(options);\n\n    this.id = Entity.register(this);\n\n    this._ratios = new Transitionable(this.options.ratios);\n    this._nodes = [];\n    this._size = [0, 0];\n\n    this._cachedDirection = null;\n    this._cachedLengths = [];\n    this._cachedTransforms = null;\n    this._ratiosDirty = false;\n\n    this._eventOutput = new EventHandler();\n    EventHandler.setOutputHandler(this, this._eventOutput);\n}\n\nFlexibleLayout.DIRECTION_X = 0;\nFlexibleLayout.DIRECTION_Y = 1;\n\nFlexibleLayout.DEFAULT_OPTIONS = {\n    direction: FlexibleLayout.DIRECTION_X,\n    transition: false,\n    ratios : []\n};\n\nfunction _reflow(ratios, length, direction) {\n    var currTransform;\n    var translation = 0;\n    var flexLength = length;\n    var ratioSum = 0;\n    var ratio;\n    var node;\n    var i;\n\n    this._cachedLengths = [];\n    this._cachedTransforms = [];\n\n    for (i = 0; i < ratios.length; i++){\n        ratio = ratios[i];\n        node = this._nodes[i];\n\n        if (typeof ratio !== 'number')\n            flexLength -= node.getSize()[direction] || 0;\n        else\n            ratioSum += ratio;\n    }\n\n    for (i = 0; i < ratios.length; i++) {\n        node = this._nodes[i];\n        ratio = ratios[i];\n\n        length = (typeof ratio === 'number')\n            ? flexLength * ratio / ratioSum\n            : node.getSize()[direction];\n\n        currTransform = (direction === FlexibleLayout.DIRECTION_X)\n            ? Transform.translate(translation, 0, 0)\n            : Transform.translate(0, translation, 0);\n\n        this._cachedTransforms.push(currTransform);\n        this._cachedLengths.push(length);\n\n        translation += length;\n    }\n}\n\nfunction _trueSizedDirty(ratios, direction) {\n    for (var i = 0; i < ratios.length; i++) {\n        if (typeof ratios[i] !== 'number') {\n            if (this._nodes[i].getSize()[direction] !== this._cachedLengths[i])\n                return true;\n        }\n    }\n\n    return false;\n}\n\n/**\n * Generate a render spec from the contents of this component.\n *\n * @private\n * @method render\n * @return {Object} Render spec for this component\n */\nFlexibleLayout.prototype.render = function render() {\n    return this.id;\n};\n\n/**\n * Patches the FlexibleLayouts instance's options with the passed-in ones.\n *\n * @method setOptions\n * @param {Options} options An object of configurable options for the FlexibleLayout instance.\n */\nFlexibleLayout.prototype.setOptions = function setOptions(options) {\n    this.optionsManager.setOptions(options);\n};\n\n/**\n * Sets the collection of renderables under the FlexibleLayout instance's control.  Also sets\n * the associated ratio values for sizing the renderables if given.\n *\n * @method sequenceFrom\n * @param {Array} sequence An array of renderables.\n */\nFlexibleLayout.prototype.sequenceFrom = function sequenceFrom(sequence) {\n    this._nodes = sequence;\n\n    if (this._ratios.get().length === 0) {\n        var ratios = [];\n        for (var i = 0; i < this._nodes.length; i++) ratios.push(1);\n        this.setRatios(ratios);\n    }\n};\n\n/**\n * Sets the associated ratio values for sizing the renderables.\n *\n * @method setRatios\n * @param {Array} ratios Array of ratios corresponding to the percentage sizes each renderable should be\n */\nFlexibleLayout.prototype.setRatios = function setRatios(ratios, transition, callback) {\n    if (transition === undefined) transition = this.options.transition;\n    var currRatios = this._ratios;\n    if (currRatios.get().length === 0) transition = undefined;\n    if (currRatios.isActive()) currRatios.halt();\n    currRatios.set(ratios, transition, callback);\n    this._ratiosDirty = true;\n};\n\n/**\n * Gets the size of the context the FlexibleLayout exists within.\n *\n * @method getSize\n *\n * @return {Array} Size of the FlexibleLayout in pixels [width, height]\n */\nFlexibleLayout.prototype.getSize = function getSize() {\n    return this._size;\n};\n\n/**\n * Apply changes from this component to the corresponding document element.\n * This includes changes to classes, styles, size, content, opacity, origin,\n * and matrix transforms.\n *\n * @private\n * @method commit\n * @param {Context} context commit context\n */\nFlexibleLayout.prototype.commit = function commit(context) {\n    var parentSize = context.size;\n    var parentTransform = context.transform;\n    var parentOrigin = context.origin;\n    var parentOpacity = context.opacity;\n\n    var ratios = this._ratios.get();\n    var direction = this.options.direction;\n    var length = parentSize[direction];\n    var size;\n\n    if (length !== this._size[direction] || this._ratiosDirty || this._ratios.isActive() || direction !== this._cachedDirection || _trueSizedDirty.call(this, ratios, direction)) {\n        _reflow.call(this, ratios, length, direction);\n\n        if (length !== this._size[direction]) {\n            this._size[0] = parentSize[0];\n            this._size[1] = parentSize[1];\n        }\n\n        if (direction !== this._cachedDirection) this._cachedDirection = direction;\n        if (this._ratiosDirty) this._ratiosDirty = false;\n    }\n\n    var result = [];\n    for (var i = 0; i < ratios.length; i++) {\n        size = [undefined, undefined];\n        length = this._cachedLengths[i];\n        size[direction] = length;\n        result.push({\n            transform : this._cachedTransforms[i],\n            size: size,\n            target : this._nodes[i].render()\n        });\n    }\n\n    if (parentSize && (parentOrigin[0] !== 0 && parentOrigin[1] !== 0))\n        parentTransform = Transform.moveThen([-parentSize[0]*parentOrigin[0], -parentSize[1]*parentOrigin[1], 0], parentTransform);\n\n    return {\n        transform: parentTransform,\n        size: parentSize,\n        opacity: parentOpacity,\n        target: result\n    };\n};\n\nmodule.exports = FlexibleLayout;\n},{\"../core/Entity\":5,\"../core/EventHandler\":7,\"../core/OptionsManager\":10,\"../core/Transform\":15,\"../transitions/Transitionable\":88}],102:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: felix@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Transform = require('../core/Transform');\nvar Transitionable = require('../transitions/Transitionable');\nvar RenderNode = require('../core/RenderNode');\nvar OptionsManager = require('../core/OptionsManager');\n\n/**\n * Allows you to link two renderables as front and back sides that can be\n *  'flipped' back and forth along a chosen axis. Rendering optimizations are\n *  automatically handled.\n *\n * @class Flipper\n * @constructor\n * @param {Options} [options] An object of options.\n * @param {Transition} [options.transition=true] The transition executed when flipping your Flipper instance.\n */\nfunction Flipper(options) {\n    this.options = Object.create(Flipper.DEFAULT_OPTIONS);\n    this._optionsManager = new OptionsManager(this.options);\n    if (options) this.setOptions(options);\n\n    this.angle = new Transitionable(0);\n\n    this.frontNode = undefined;\n    this.backNode = undefined;\n\n    this.flipped = false;\n}\n\nFlipper.DIRECTION_X = 0;\nFlipper.DIRECTION_Y = 1;\n\nvar SEPERATION_LENGTH = 1;\n\nFlipper.DEFAULT_OPTIONS = {\n    transition: true,\n    direction: Flipper.DIRECTION_X\n};\n\n/**\n * Toggles the rotation between the front and back renderables\n *\n * @method flip\n * @param {Object} [transition] Transition definition\n * @param {Function} [callback] Callback\n */\nFlipper.prototype.flip = function flip(transition, callback) {\n    var angle = this.flipped ? 0 : Math.PI;\n    this.setAngle(angle, transition, callback);\n    this.flipped = !this.flipped;\n};\n\n/**\n * Basic setter to the angle\n *\n * @method setAngle\n * @param {Number} angle\n * @param {Object} [transition] Transition definition\n * @param {Function} [callback] Callback\n */\nFlipper.prototype.setAngle = function setAngle(angle, transition, callback) {\n    if (transition === undefined) transition = this.options.transition;\n    if (this.angle.isActive()) this.angle.halt();\n    this.angle.set(angle, transition, callback);\n};\n\n/**\n * Patches the Flipper instance's options with the passed-in ones.\n *\n * @method setOptions\n * @param {Options} options An object of configurable options for the Flipper instance.\n */\nFlipper.prototype.setOptions = function setOptions(options) {\n    return this._optionsManager.setOptions(options);\n};\n\n/**\n * Adds the passed-in renderable to the view associated with the 'front' of the Flipper instance.\n *\n * @method setFront\n * @chainable\n * @param {Object} node The renderable you want to add to the front.\n */\nFlipper.prototype.setFront = function setFront(node) {\n    this.frontNode = node;\n};\n\n/**\n * Adds the passed-in renderable to the view associated with the 'back' of the Flipper instance.\n *\n * @method setBack\n * @chainable\n * @param {Object} node The renderable you want to add to the back.\n */\nFlipper.prototype.setBack = function setBack(node) {\n    this.backNode = node;\n};\n\n/**\n * Generate a render spec from the contents of this component.\n *\n * @private\n * @method render\n * @return {Number} Render spec for this component\n */\nFlipper.prototype.render = function render() {\n    var angle = this.angle.get();\n\n    var frontTransform;\n    var backTransform;\n\n    if (this.options.direction === Flipper.DIRECTION_X) {\n        frontTransform = Transform.rotateY(angle);\n        backTransform = Transform.rotateY(angle + Math.PI);\n    }\n    else {\n        frontTransform = Transform.rotateX(angle);\n        backTransform = Transform.rotateX(angle + Math.PI);\n    }\n\n    var result = [];\n    if (this.frontNode){\n        result.push({\n            transform: frontTransform,\n            target: this.frontNode.render()\n        });\n    }\n\n    if (this.backNode){\n        result.push({\n            transform: Transform.moveThen([0, 0, SEPERATION_LENGTH], backTransform),\n            target: this.backNode.render()\n        });\n    }\n\n    return result;\n};\n\nmodule.exports = Flipper;\n},{\"../core/OptionsManager\":10,\"../core/RenderNode\":11,\"../core/Transform\":15,\"../transitions/Transitionable\":88}],103:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: felix@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Entity = require('../core/Entity');\nvar RenderNode = require('../core/RenderNode');\nvar Transform = require('../core/Transform');\nvar ViewSequence = require('../core/ViewSequence');\nvar EventHandler = require('../core/EventHandler');\nvar Modifier = require('../core/Modifier');\nvar OptionsManager = require('../core/OptionsManager');\nvar Transitionable = require('../transitions/Transitionable');\nvar TransitionableTransform = require('../transitions/TransitionableTransform');\n\n/**\n * A layout which divides a context into several evenly-sized grid cells.\n *   If dimensions are provided, the grid is evenly subdivided with children\n *   cells representing their own context, otherwise the cellSize property is used to compute\n *   dimensions so that items of cellSize will fit.\n * @class GridLayout\n * @constructor\n * @param {Options} [options] An object of configurable options.\n * @param {Array.Number} [options.dimensions=[1, 1]] A two value array which specifies the amount of columns\n * and rows in your Gridlayout instance.\n * @param {Array.Number} [options.gutterSize=[0, 0]] A two-value array which specifies size of the\n * horizontal and vertical gutters between items in the grid layout.\n * @param {Transition} [options.transition=false] The transiton that controls the Gridlayout instance's reflow.\n */\nfunction GridLayout(options) {\n    this.options = Object.create(GridLayout.DEFAULT_OPTIONS);\n    this.optionsManager = new OptionsManager(this.options);\n    if (options) this.setOptions(options);\n\n    this.id = Entity.register(this);\n\n    this._modifiers = [];\n    this._states = [];\n    this._contextSizeCache = [0, 0];\n    this._dimensionsCache = [0, 0];\n    this._activeCount = 0;\n\n    this._eventOutput = new EventHandler();\n    EventHandler.setOutputHandler(this, this._eventOutput);\n}\n\nfunction _reflow(size, cols, rows) {\n    var usableSize = [size[0], size[1]];\n    usableSize[0] -= this.options.gutterSize[0] * (cols - 1);\n    usableSize[1] -= this.options.gutterSize[1] * (rows - 1);\n\n    var rowSize = Math.round(usableSize[1] / rows);\n    var colSize = Math.round(usableSize[0] / cols);\n\n    var currY = 0;\n    var currX;\n    var currIndex = 0;\n    for (var i = 0; i < rows; i++) {\n        currX = 0;\n        for (var j = 0; j < cols; j++) {\n            if (this._modifiers[currIndex] === undefined) {\n                _createModifier.call(this, currIndex, [colSize, rowSize], [currX, currY, 0], 1);\n            }\n            else {\n                _animateModifier.call(this, currIndex, [colSize, rowSize], [currX, currY, 0], 1);\n            }\n\n            currIndex++;\n            currX += colSize + this.options.gutterSize[0];\n        }\n\n        currY += rowSize + this.options.gutterSize[1];\n    }\n\n    this._dimensionsCache = [this.options.dimensions[0], this.options.dimensions[1]];\n    this._contextSizeCache = [size[0], size[1]];\n\n    this._activeCount = rows * cols;\n\n    for (i = this._activeCount ; i < this._modifiers.length; i++) _animateModifier.call(this, i, [Math.round(colSize), Math.round(rowSize)], [0, 0], 0);\n\n    this._eventOutput.emit('reflow');\n}\n\nfunction _createModifier(index, size, position, opacity) {\n    var transitionItem = {\n        transform: new TransitionableTransform(Transform.translate.apply(null, position)),\n        opacity: new Transitionable(opacity),\n        size: new Transitionable(size)\n    };\n\n    var modifier = new Modifier({\n        transform: transitionItem.transform,\n        opacity: transitionItem.opacity,\n        size: transitionItem.size\n    });\n\n    this._states[index] = transitionItem;\n    this._modifiers[index] = modifier;\n\n}\n\nfunction _animateModifier(index, size, position, opacity) {\n    var currState = this._states[index];\n\n    var currSize = currState.size;\n    var currOpacity = currState.opacity;\n    var currTransform = currState.transform;\n\n    var transition = this.options.transition;\n\n    currTransform.halt();\n    currOpacity.halt();\n    currSize.halt();\n\n    currTransform.setTranslate(position, transition);\n    currSize.set(size, transition);\n    currOpacity.set(opacity, transition);\n}\n\nGridLayout.DEFAULT_OPTIONS = {\n    dimensions: [1, 1],\n    transition: false,\n    gutterSize: [0, 0]\n};\n\n/**\n * Generate a render spec from the contents of this component.\n *\n * @private\n * @method render\n * @return {Object} Render spec for this component\n */\nGridLayout.prototype.render = function render() {\n    return this.id;\n};\n\n/**\n * Patches the GridLayout instance's options with the passed-in ones.\n *\n * @method setOptions\n * @param {Options} options An object of configurable options for the GridLayout instance.\n */\nGridLayout.prototype.setOptions = function setOptions(options) {\n    return this.optionsManager.setOptions(options);\n};\n\n/**\n * Sets the collection of renderables under the Gridlayout instance's control.\n *\n * @method sequenceFrom\n * @param {Array|ViewSequence} sequence Either an array of renderables or a Famous viewSequence.\n */\nGridLayout.prototype.sequenceFrom = function sequenceFrom(sequence) {\n    if (sequence instanceof Array) sequence = new ViewSequence(sequence);\n    this.sequence = sequence;\n};\n\n/**\n * Apply changes from this component to the corresponding document element.\n * This includes changes to classes, styles, size, content, opacity, origin,\n * and matrix transforms.\n *\n * @private\n * @method commit\n * @param {Context} context commit context\n */\nGridLayout.prototype.commit = function commit(context) {\n    var transform = context.transform;\n    var opacity = context.opacity;\n    var origin = context.origin;\n    var size = context.size;\n\n    var cols = this.options.dimensions[0];\n    var rows = this.options.dimensions[1];\n\n    if (size[0] !== this._contextSizeCache[0] || size[1] !== this._contextSizeCache[1] || cols !== this._dimensionsCache[0] || rows !== this._dimensionsCache[1]) {\n        _reflow.call(this, size, cols, rows);\n    }\n\n    var sequence = this.sequence;\n    var result = [];\n    var currIndex = 0;\n    while (sequence && (currIndex < this._modifiers.length)) {\n        var item = sequence.get();\n        var modifier = this._modifiers[currIndex];\n        if (currIndex >= this._activeCount && this._states[currIndex].opacity.isActive()) {\n            this._modifiers.splice(currIndex, 1);\n            this._states.splice(currIndex, 1);\n        }\n        if (item) {\n            result.push(\n                modifier.modify({\n                    origin: origin,\n                    target: item.render()\n                })\n            );\n        }\n        sequence = sequence.getNext();\n        currIndex++;\n    }\n\n    if (size) transform = Transform.moveThen([-size[0]*origin[0], -size[1]*origin[1], 0], transform);\n    return {\n        transform: transform,\n        opacity: opacity,\n        size: size,\n        target: result\n    };\n};\n\nmodule.exports = GridLayout;\n},{\"../core/Entity\":5,\"../core/EventHandler\":7,\"../core/Modifier\":9,\"../core/OptionsManager\":10,\"../core/RenderNode\":11,\"../core/Transform\":15,\"../core/ViewSequence\":17,\"../transitions/Transitionable\":88,\"../transitions/TransitionableTransform\":89}],104:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: felix@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Entity = require('../core/Entity');\nvar RenderNode = require('../core/RenderNode');\nvar Transform = require('../core/Transform');\nvar OptionsManager = require('../core/OptionsManager');\n\n/**\n * A layout which will arrange three renderables into a header and footer area of defined size,\n  and a content area of flexible size.\n * @class HeaderFooterLayout\n * @constructor\n * @param {Options} [options] An object of configurable options.\n * @param {Number} [options.direction=HeaderFooterLayout.DIRECTION_Y] A direction of HeaderFooterLayout.DIRECTION_X\n * lays your HeaderFooterLayout instance horizontally, and a direction of HeaderFooterLayout.DIRECTION_Y\n * lays it out vertically.\n * @param {Number} [options.headerSize=undefined]  The amount of pixels allocated to the header node\n * in the HeaderFooterLayout instance's direction.\n * @param {Number} [options.footerSize=undefined] The amount of pixels allocated to the footer node\n * in the HeaderFooterLayout instance's direction.\n */\nfunction HeaderFooterLayout(options) {\n    this.options = Object.create(HeaderFooterLayout.DEFAULT_OPTIONS);\n    this._optionsManager = new OptionsManager(this.options);\n    if (options) this.setOptions(options);\n\n    this._entityId = Entity.register(this);\n\n    this.header = new RenderNode();\n    this.footer = new RenderNode();\n    this.content = new RenderNode();\n}\n\n/**\n *  When used as a value for your HeaderFooterLayout's direction option, causes it to lay out horizontally.\n *\n *  @attribute DIRECTION_X\n *  @type Number\n *  @static\n *  @default 0\n *  @protected\n */\nHeaderFooterLayout.DIRECTION_X = 0;\n\n/**\n *  When used as a value for your HeaderFooterLayout's direction option, causes it to lay out vertically.\n *\n *  @attribute DIRECTION_Y\n *  @type Number\n *  @static\n *  @default 1\n *  @protected\n */\nHeaderFooterLayout.DIRECTION_Y = 1;\n\nHeaderFooterLayout.DEFAULT_OPTIONS = {\n    direction: HeaderFooterLayout.DIRECTION_Y,\n    headerSize: undefined,\n    footerSize: undefined,\n    defaultHeaderSize: 0,\n    defaultFooterSize: 0\n};\n\n/**\n * Generate a render spec from the contents of this component.\n *\n * @private\n * @method render\n * @return {Object} Render spec for this component\n */\nHeaderFooterLayout.prototype.render = function render() {\n    return this._entityId;\n};\n\n/**\n * Patches the HeaderFooterLayout instance's options with the passed-in ones.\n *\n * @method setOptions\n * @param {Options} options An object of configurable options for the HeaderFooterLayout instance.\n */\nHeaderFooterLayout.prototype.setOptions = function setOptions(options) {\n    return this._optionsManager.setOptions(options);\n};\n\nfunction _resolveNodeSize(node, defaultSize) {\n    var nodeSize = node.getSize();\n    return nodeSize ? nodeSize[this.options.direction] : defaultSize;\n}\n\nfunction _outputTransform(offset) {\n    if (this.options.direction === HeaderFooterLayout.DIRECTION_X) return Transform.translate(offset, 0, 0);\n    else return Transform.translate(0, offset, 0);\n}\n\nfunction _finalSize(directionSize, size) {\n    if (this.options.direction === HeaderFooterLayout.DIRECTION_X) return [directionSize, size[1]];\n    else return [size[0], directionSize];\n}\n\n/**\n * Apply changes from this component to the corresponding document element.\n * This includes changes to classes, styles, size, content, opacity, origin,\n * and matrix transforms.\n *\n * @private\n * @method commit\n * @param {Context} context commit context\n */\nHeaderFooterLayout.prototype.commit = function commit(context) {\n    var transform = context.transform;\n    var origin = context.origin;\n    var size = context.size;\n    var opacity = context.opacity;\n\n    var headerSize = (this.options.headerSize !== undefined) ? this.options.headerSize : _resolveNodeSize.call(this, this.header, this.options.defaultHeaderSize);\n    var footerSize = (this.options.footerSize !== undefined) ? this.options.footerSize : _resolveNodeSize.call(this, this.footer, this.options.defaultFooterSize);\n    var contentSize = size[this.options.direction] - headerSize - footerSize;\n\n    if (size) transform = Transform.moveThen([-size[0]*origin[0], -size[1]*origin[1], 0], transform);\n\n    var result = [\n        {\n            size: _finalSize.call(this, headerSize, size),\n            target: this.header.render()\n        },\n        {\n            transform: _outputTransform.call(this, headerSize),\n            size: _finalSize.call(this, contentSize, size),\n            target: this.content.render()\n        },\n        {\n            transform: _outputTransform.call(this, headerSize + contentSize),\n            size: _finalSize.call(this, footerSize, size),\n            target: this.footer.render()\n        }\n    ];\n\n    return {\n        transform: transform,\n        opacity: opacity,\n        size: size,\n        target: result\n    };\n};\n\nmodule.exports = HeaderFooterLayout;\n},{\"../core/Entity\":5,\"../core/OptionsManager\":10,\"../core/RenderNode\":11,\"../core/Transform\":15}],105:[function(require,module,exports){\nvar Transform = require('../core/Transform');\nvar Modifier = require('../core/Modifier');\nvar RenderNode = require('../core/RenderNode');\nvar Utility = require('../utilities/Utility');\nvar OptionsManager = require('../core/OptionsManager');\nvar Transitionable = require('../transitions/Transitionable');\nvar TransitionableTransform = require('../transitions/TransitionableTransform');\n\n/**\n * Lightbox, using transitions, shows and hides different renderables. Lightbox can essentially be\n * thought of as RenderController with a stateful implementation and interface.\n *\n * @class Lightbox\n * @constructor\n * @param {Options} [options] An object of configurable options.\n * @param {Transform} [options.inTransform] The transform at the start of transitioning in a shown renderable.\n * @param {Transform} [options.outTransform] The transform at the end of transitioning out a renderable.\n * @param {Transform} [options.showTransform] The transform applied to your shown renderable in its state of equilibrium.\n * @param {Number} [options.inOpacity] A number between one and zero that defines the state of a shown renderables opacity upon initially\n * being transitioned in.\n * @param {Number} [options.outOpacity] A number between one and zero that defines the state of a shown renderables opacity upon being\n * fully transitioned out.\n * @param {Number} [options.showOpacity] A number between one and zero that defines the state of a shown renderables opacity\n * once succesfully transitioned in.\n * @param {Array<Number>} [options.inOrigin] A two value array of numbers between one and zero that defines the state of a shown renderables\n * origin upon intially being transitioned in.\n * @param {Array<Number>} [options.outOrigin] A two value array of numbers between one and zero that defines the state of a shown renderable\n * origin once fully hidden.\n * @param {Array<Number>} [options.showOrigin] A two value array of numbers between one and zero that defines the state of a shown renderables\n * origin upon succesfully being shown.\n * @param {Array<Number>} [options.inAlign] A two value array of numbers between one and zero that defines the state of a shown renderables\n * align upon intially being transitioned in.\n * @param {Array<Number>} [options.outAlign] A two value array of numbers between one and zero that defines the state of a shown renderable\n * align once fully hidden.\n * @param {Array<Number>} [options.showAlign] A two value array of numbers between one and zero that defines the state of a shown renderables\n * align upon succesfully being shown.\n * @param {Transition} [options.inTransition=true] The transition in charge of showing a renderable.\n * @param {Transition} [options.outTransition=true]  The transition in charge of removing your previous renderable when\n * you show a new one, or hiding your current renderable.\n * @param {Boolean} [options.overlap=false] When showing a new renderable, overlap determines if the\n *   out transition of the old one executes concurrently with the in transition of the new one,\n  *  or synchronously beforehand.\n */\nfunction Lightbox(options) {\n    this.options = Object.create(Lightbox.DEFAULT_OPTIONS);\n    this._optionsManager = new OptionsManager(this.options);\n\n    if (options) this.setOptions(options);\n\n    this._showing = false;\n    this.nodes = [];\n    this.transforms = [];\n    this.states = [];\n}\n\nLightbox.DEFAULT_OPTIONS = {\n    inTransform: Transform.scale(0.001, 0.001, 0.001),\n    inOpacity: 0,\n    inOrigin: [0.5, 0.5],\n    inAlign: [0.5, 0.5],\n    outTransform: Transform.scale(0.001, 0.001, 0.001),\n    outOpacity: 0,\n    outOrigin: [0.5, 0.5],\n    outAlign: [0.5, 0.5],\n    showTransform: Transform.identity,\n    showOpacity: 1,\n    showOrigin: [0.5, 0.5],\n    showAlign: [0.5, 0.5],\n    inTransition: true,\n    outTransition: true,\n    overlap: false\n};\n\n/**\n * Patches the Lightbox instance's options with the passed-in ones.\n *\n * @method setOptions\n * @param {Options} options An object of configurable options for the Lightbox instance.\n */\nLightbox.prototype.setOptions = function setOptions(options) {\n    return this._optionsManager.setOptions(options);\n};\n\n   /**\n * Show displays the targeted renderable with a transition and an optional callback to\n *  execute afterwards.\n * @method show\n * @param {Object} renderable The renderable you want to show.\n * @param {Transition} [transition] Overwrites the default transition in to display the\n * passed-in renderable.\n * @param {function} [callback] Executes after transitioning in the renderable.\n */\nLightbox.prototype.show = function show(renderable, transition, callback) {\n    if (!renderable) {\n        return this.hide(callback);\n    }\n\n    if (transition instanceof Function) {\n        callback = transition;\n        transition = undefined;\n    }\n\n    if (this._showing) {\n        if (this.options.overlap) this.hide();\n        else {\n            return this.hide(this.show.bind(this, renderable, transition, callback));\n        }\n    }\n    this._showing = true;\n\n    var stateItem = {\n        transform: new TransitionableTransform(this.options.inTransform),\n        origin: new Transitionable(this.options.inOrigin),\n        align: new Transitionable(this.options.inAlign),\n        opacity: new Transitionable(this.options.inOpacity)\n    };\n\n    var transform = new Modifier({\n        transform: stateItem.transform,\n        opacity: stateItem.opacity,\n        origin: stateItem.origin,\n        align: stateItem.align\n    });\n    var node = new RenderNode();\n    node.add(transform).add(renderable);\n    this.nodes.push(node);\n    this.states.push(stateItem);\n    this.transforms.push(transform);\n\n    var _cb = callback ? Utility.after(3, callback) : undefined;\n\n    if (!transition) transition = this.options.inTransition;\n    stateItem.transform.set(this.options.showTransform, transition, _cb);\n    stateItem.opacity.set(this.options.showOpacity, transition, _cb);\n    stateItem.origin.set(this.options.showOrigin, transition, _cb);\n    stateItem.align.set(this.options.showAlign, transition, _cb);\n};\n\n/**\n * Hide hides the currently displayed renderable with an out transition.\n * @method hide\n * @param {Transition} [transition] Overwrites the default transition in to hide the\n * currently controlled renderable.\n * @param {function} [callback] Executes after transitioning out the renderable.\n */\nLightbox.prototype.hide = function hide(transition, callback) {\n    if (!this._showing) return;\n    this._showing = false;\n\n    if (transition instanceof Function) {\n        callback = transition;\n        transition = undefined;\n    }\n\n    var node = this.nodes[this.nodes.length - 1];\n    var transform = this.transforms[this.transforms.length - 1];\n    var stateItem = this.states[this.states.length - 1];\n    var _cb = Utility.after(3, function() {\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n        this.states.splice(this.states.indexOf(stateItem), 1);\n        this.transforms.splice(this.transforms.indexOf(transform), 1);\n        if (callback) callback.call(this);\n    }.bind(this));\n\n    if (!transition) transition = this.options.outTransition;\n    stateItem.transform.set(this.options.outTransform, transition, _cb);\n    stateItem.opacity.set(this.options.outOpacity, transition, _cb);\n    stateItem.origin.set(this.options.outOrigin, transition, _cb);\n    stateItem.align.set(this.options.outAlign, transition, _cb);\n};\n\n/**\n * Generate a render spec from the contents of this component.\n *\n * @private\n * @method render\n * @return {number} Render spec for this component\n */\nLightbox.prototype.render = function render() {\n    var result = [];\n    for (var i = 0; i < this.nodes.length; i++) {\n        result.push(this.nodes[i].render());\n    }\n    return result;\n};\n\nmodule.exports = Lightbox;\n},{\"../core/Modifier\":9,\"../core/OptionsManager\":10,\"../core/RenderNode\":11,\"../core/Transform\":15,\"../transitions/Transitionable\":88,\"../transitions/TransitionableTransform\":89,\"../utilities/Utility\":95}],106:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: felix@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Modifier = require('../core/Modifier');\nvar RenderNode = require('../core/RenderNode');\nvar Transform = require('../core/Transform');\nvar Transitionable = require('../transitions/Transitionable');\nvar View = require('../core/View');\n\n/**\n * A dynamic view that can show or hide different renerables with transitions.\n * @class RenderController\n * @constructor\n * @param {Options} [options] An object of configurable options.\n * @param {Transition} [inTransition=true] The transition in charge of showing a renderable.\n * @param {Transition} [outTransition=true]  The transition in charge of removing your previous renderable when\n * you show a new one, or hiding your current renderable.\n * @param {Boolean} [overlap=true] When showing a new renderable, overlap determines if the\n  out transition of the old one executes concurrently with the in transition of the new one,\n   or synchronously beforehand.\n */\nfunction RenderController(options) {\n    View.apply(this, arguments);\n\n    this._showing = -1;\n    this._outgoingRenderables = [];\n    this._nextRenderable = null;\n\n    this._renderables = [];\n    this._nodes = [];\n    this._modifiers = [];\n    this._states = [];\n\n    this.inTransformMap = RenderController.DefaultMap.transform;\n    this.inOpacityMap = RenderController.DefaultMap.opacity;\n    this.inOriginMap = RenderController.DefaultMap.origin;\n    this.outTransformMap = RenderController.DefaultMap.transform;\n    this.outOpacityMap = RenderController.DefaultMap.opacity;\n    this.outOriginMap = RenderController.DefaultMap.origin;\n\n    this._output = [];\n}\nRenderController.prototype = Object.create(View.prototype);\nRenderController.prototype.constructor = RenderController;\n\nRenderController.DEFAULT_OPTIONS = {\n    inTransition: true,\n    outTransition: true,\n    overlap: true\n};\n\nRenderController.DefaultMap = {\n    transform: function() {\n        return Transform.identity;\n    },\n    opacity: function(progress) {\n        return progress;\n    },\n    origin: null\n};\n\nfunction _mappedState(map, state) {\n    return map(state.get());\n}\n\n/**\n * As your RenderController shows a new renderable, it executes a transition in. This transition in\n *  will affect a default interior state and modify it as you bring renderables in and out. However, if you want to control\n *  the transform, opacity, and origin state yourself, you may call certain methods (such as inTransformFrom) to obtain state from an outside source,\n *  that may either be a function or a Famous transitionable. inTransformFrom sets the accessor for the state of\n *  the transform used in transitioning in renderables.\n *\n * @method inTransformFrom\n * @param {Function|Transitionable} transform  A function that returns a transform from outside closure, or a\n * a transitionable that manages a full transform (a sixteen value array).\n * @chainable\n */\nRenderController.prototype.inTransformFrom = function inTransformFrom(transform) {\n    if (transform instanceof Function) this.inTransformMap = transform;\n    else if (transform && transform.get) this.inTransformMap = transform.get.bind(transform);\n    else throw new Error('inTransformFrom takes only function or getter object');\n    //TODO: tween transition\n    return this;\n};\n\n/**\n * inOpacityFrom sets the accessor for the state of the opacity used in transitioning in renderables.\n * @method inOpacityFrom\n * @param {Function|Transitionable} opacity  A function that returns an opacity from outside closure, or a\n * a transitionable that manages opacity (a number between zero and one).\n * @chainable\n */\nRenderController.prototype.inOpacityFrom = function inOpacityFrom(opacity) {\n    if (opacity instanceof Function) this.inOpacityMap = opacity;\n    else if (opacity && opacity.get) this.inOpacityMap = opacity.get.bind(opacity);\n    else throw new Error('inOpacityFrom takes only function or getter object');\n    //TODO: tween opacity\n    return this;\n};\n\n/**\n * inOriginFrom sets the accessor for the state of the origin used in transitioning in renderables.\n * @method inOriginFrom\n * @param {Function|Transitionable} origin A function that returns an origin from outside closure, or a\n * a transitionable that manages origin (a two value array of numbers between zero and one).\n * @chainable\n */\nRenderController.prototype.inOriginFrom = function inOriginFrom(origin) {\n    if (origin instanceof Function) this.inOriginMap = origin;\n    else if (origin && origin.get) this.inOriginMap = origin.get.bind(origin);\n    else throw new Error('inOriginFrom takes only function or getter object');\n    //TODO: tween origin\n    return this;\n};\n\n/**\n * outTransformFrom sets the accessor for the state of the transform used in transitioning out renderables.\n * @method outTransformFrom\n * @param {Function|Transitionable} transform  A function that returns a transform from outside closure, or a\n * a transitionable that manages a full transform (a sixteen value array).\n * @chainable\n */\nRenderController.prototype.outTransformFrom = function outTransformFrom(transform) {\n    if (transform instanceof Function) this.outTransformMap = transform;\n    else if (transform && transform.get) this.outTransformMap = transform.get.bind(transform);\n    else throw new Error('outTransformFrom takes only function or getter object');\n    //TODO: tween transition\n    return this;\n};\n\n/**\n * outOpacityFrom sets the accessor for the state of the opacity used in transitioning out renderables.\n * @method outOpacityFrom\n * @param {Function|Transitionable} opacity  A function that returns an opacity from outside closure, or a\n * a transitionable that manages opacity (a number between zero and one).\n * @chainable\n */\nRenderController.prototype.outOpacityFrom = function outOpacityFrom(opacity) {\n    if (opacity instanceof Function) this.outOpacityMap = opacity;\n    else if (opacity && opacity.get) this.outOpacityMap = opacity.get.bind(opacity);\n    else throw new Error('outOpacityFrom takes only function or getter object');\n    //TODO: tween opacity\n    return this;\n};\n\n/**\n * outOriginFrom sets the accessor for the state of the origin used in transitioning out renderables.\n * @method outOriginFrom\n * @param {Function|Transitionable} origin A function that returns an origin from outside closure, or a\n * a transitionable that manages origin (a two value array of numbers between zero and one).\n * @chainable\n */\nRenderController.prototype.outOriginFrom = function outOriginFrom(origin) {\n    if (origin instanceof Function) this.outOriginMap = origin;\n    else if (origin && origin.get) this.outOriginMap = origin.get.bind(origin);\n    else throw new Error('outOriginFrom takes only function or getter object');\n    //TODO: tween origin\n    return this;\n};\n\n/**\n * Show displays the targeted renderable with a transition and an optional callback to\n * execute afterwards.\n * @method show\n * @param {Object} renderable The renderable you want to show.\n * @param {Transition} [transition] Overwrites the default transition in to display the\n * passed-in renderable.\n * @param {function} [callback] Executes after transitioning in the renderable.\n * @chainable\n */\nRenderController.prototype.show = function show(renderable, transition, callback) {\n    if (!renderable) {\n        return this.hide(callback);\n    }\n\n    if (transition instanceof Function) {\n        callback = transition;\n        transition = null;\n    }\n\n    if (this._showing >= 0) {\n        if (this.options.overlap) this.hide();\n        else {\n            if (this._nextRenderable) {\n                this._nextRenderable = renderable;\n            }\n            else {\n                this._nextRenderable = renderable;\n                this.hide(function() {\n                    if (this._nextRenderable === renderable) this.show(this._nextRenderable, callback);\n                    this._nextRenderable = null;\n                });\n            }\n            return undefined;\n        }\n    }\n\n    var state = null;\n\n    // check to see if we should restore\n    var renderableIndex = this._renderables.indexOf(renderable);\n    if (renderableIndex >= 0) {\n        this._showing = renderableIndex;\n        state = this._states[renderableIndex];\n        state.halt();\n\n        var outgoingIndex = this._outgoingRenderables.indexOf(renderable);\n        if (outgoingIndex >= 0) this._outgoingRenderables.splice(outgoingIndex, 1);\n    }\n    else {\n        state = new Transitionable(0);\n\n        var modifier = new Modifier({\n            transform: this.inTransformMap ? _mappedState.bind(this, this.inTransformMap, state) : null,\n            opacity: this.inOpacityMap ? _mappedState.bind(this, this.inOpacityMap, state) : null,\n            origin: this.inOriginMap ? _mappedState.bind(this, this.inOriginMap, state) : null\n        });\n        var node = new RenderNode();\n        node.add(modifier).add(renderable);\n\n        this._showing = this._nodes.length;\n        this._nodes.push(node);\n        this._modifiers.push(modifier);\n        this._states.push(state);\n        this._renderables.push(renderable);\n    }\n\n    if (!transition) transition = this.options.inTransition;\n    state.set(1, transition, callback);\n};\n\n/**\n * Hide hides the currently displayed renderable with an out transition.\n * @method hide\n * @param {Transition} [transition] Overwrites the default transition in to hide the\n * currently controlled renderable.\n * @param {function} [callback] Executes after transitioning out the renderable.\n * @chainable\n */\nRenderController.prototype.hide = function hide(transition, callback) {\n    if (this._showing < 0) return;\n    var index = this._showing;\n    this._showing = -1;\n\n    if (transition instanceof Function) {\n        callback = transition;\n        transition = undefined;\n    }\n\n    var node = this._nodes[index];\n    var modifier = this._modifiers[index];\n    var state = this._states[index];\n    var renderable = this._renderables[index];\n\n    modifier.transformFrom(this.outTransformMap ? _mappedState.bind(this, this.outTransformMap, state) : null);\n    modifier.opacityFrom(this.outOpacityMap ? _mappedState.bind(this, this.outOpacityMap, state) : null);\n    modifier.originFrom(this.outOriginMap ? _mappedState.bind(this, this.outOriginMap, state) : null);\n\n    if (this._outgoingRenderables.indexOf(renderable) < 0) this._outgoingRenderables.push(renderable);\n\n    if (!transition) transition = this.options.outTransition;\n    state.halt();\n    state.set(0, transition, function(node, modifier, state, renderable) {\n        if (this._outgoingRenderables.indexOf(renderable) >= 0) {\n            var index = this._nodes.indexOf(node);\n            this._nodes.splice(index, 1);\n            this._modifiers.splice(index, 1);\n            this._states.splice(index, 1);\n            this._renderables.splice(index, 1);\n            this._outgoingRenderables.splice(this._outgoingRenderables.indexOf(renderable), 1);\n\n            if (this._showing >= index) this._showing--;\n        }\n        if (callback) callback.call(this);\n    }.bind(this, node, modifier, state, renderable));\n};\n\n/**\n * Generate a render spec from the contents of this component.\n *\n * @private\n * @method render\n * @return {number} Render spec for this component\n */\nRenderController.prototype.render = function render() {\n    var result = this._output;\n    if (result.length > this._nodes.length) result.splice(this._nodes.length);\n    for (var i = 0; i < this._nodes.length; i++) {\n        result[i] = this._nodes[i].render();\n    }\n    return result;\n};\n\nmodule.exports = RenderController;\n},{\"../core/Modifier\":9,\"../core/RenderNode\":11,\"../core/Transform\":15,\"../core/View\":16,\"../transitions/Transitionable\":88}],107:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: felix@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar ContainerSurface = require('../surfaces/ContainerSurface');\nvar EventHandler = require('../core/EventHandler');\nvar Scrollview = require('./Scrollview');\nvar Utility = require('../utilities/Utility');\nvar OptionsManager = require('../core/OptionsManager');\n\n/**\n * A Container surface with a scrollview automatically added. The convenience of ScrollContainer lies in\n * being able to clip out portions of the associated scrollview that lie outside the bounding surface,\n * and in being able to move the scrollview more easily by applying modifiers to the parent container\n * surface.\n * @class ScrollContainer\n * @constructor\n * @param {Options} [options] An object of configurable options.\n * @param {Options} [options.container=undefined] Options for the ScrollContainer instance's surface.\n * @param {Options} [options.scrollview={direction:Utility.Direction.X}]  Options for the ScrollContainer instance's scrollview.\n */\nfunction ScrollContainer(options) {\n    this.options = Object.create(ScrollContainer.DEFAULT_OPTIONS);\n    this._optionsManager = new OptionsManager(this.options);\n\n    if (options) this.setOptions(options);\n\n    this.container = new ContainerSurface(this.options.container);\n    this.scrollview = new Scrollview(this.options.scrollview);\n\n    this.container.add(this.scrollview);\n\n    this._eventInput = new EventHandler();\n    EventHandler.setInputHandler(this, this._eventInput);\n\n    this._eventInput.pipe(this.scrollview);\n\n    this._eventOutput = new EventHandler();\n    EventHandler.setOutputHandler(this, this._eventOutput);\n\n    this.container.pipe(this._eventOutput);\n    this.scrollview.pipe(this._eventOutput);\n}\n\nScrollContainer.DEFAULT_OPTIONS = {\n    container: {\n        properties: {overflow : 'hidden'}\n    },\n    scrollview: {}\n};\n\n/**\n * Patches the ScrollContainer instance's options with the passed-in ones.\n *\n * @method setOptions\n * @param {Options} options An object of configurable options for the ScrollContainer instance.\n */\nScrollContainer.prototype.setOptions = function setOptions(options) {\n    return this._optionsManager.setOptions(options);\n};\n\n/**\n * Sets the collection of renderables under the ScrollContainer instance scrollview's control.\n *\n * @method sequenceFrom\n * @param {Array|ViewSequence} sequence Either an array of renderables or a Famous ViewSequence.\n */\nScrollContainer.prototype.sequenceFrom = function sequenceFrom() {\n    return this.scrollview.sequenceFrom.apply(this.scrollview, arguments);\n};\n\n/**\n * Returns the width and the height of the ScrollContainer instance.\n *\n * @method getSize\n * @return {Array} A two value array of the ScrollContainer instance's current width and height (in that order).\n */\nScrollContainer.prototype.getSize = function getSize() {\n    return this.container.getSize.apply(this.container, arguments);\n};\n\n/**\n * Generate a render spec from the contents of this component.\n *\n * @private\n * @method render\n * @return {number} Render spec for this component\n */\nScrollContainer.prototype.render = function render() {\n    return this.container.render();\n};\n\nmodule.exports = ScrollContainer;\n},{\"../core/EventHandler\":7,\"../core/OptionsManager\":10,\"../surfaces/ContainerSurface\":75,\"../utilities/Utility\":95,\"./Scrollview\":109}],108:[function(require,module,exports){\nvar Entity = require('../core/Entity');\nvar Group = require('../core/Group');\nvar OptionsManager = require('../core/OptionsManager');\nvar Transform = require('../core/Transform');\nvar Utility = require('../utilities/Utility');\nvar ViewSequence = require('../core/ViewSequence');\nvar EventHandler = require('../core/EventHandler');\n\n/**\n * Scroller lays out a collection of renderables, and will browse through them based on\n * accessed position. Scroller also broadcasts an 'edgeHit' event, with a position property of the location of the edge,\n * when you've hit the 'edges' of it's renderable collection.\n * @class Scroller\n * @constructor\n  * @event error\n * @param {Options} [options] An object of configurable options.\n * @param {Number} [options.direction=Utility.Direction.Y] Using the direction helper found in the famous Utility\n * module, this option will lay out the Scroller instance's renderables either horizontally\n * (x) or vertically (y). Utility's direction is essentially either zero (X) or one (Y), so feel free\n * to just use integers as well.\n * @param {Number} [clipSize=undefined] The size of the area (in pixels) that Scroller will display content in.\n * @param {Number} [margin=undefined] The size of the area (in pixels) that Scroller will process renderables' associated calculations in.\n */\nfunction Scroller(options) {\n    this.options = Object.create(this.constructor.DEFAULT_OPTIONS);\n    this._optionsManager = new OptionsManager(this.options);\n    if (options) this._optionsManager.setOptions(options);\n\n    this._node = null;\n    this._position = 0;\n\n    // used for shifting nodes\n    this._positionOffset = 0;\n\n    this._positionGetter = null;\n    this._outputFunction = null;\n    this._masterOutputFunction = null;\n    this.outputFrom();\n\n    this._onEdge = 0; // -1 for top, 1 for bottom\n\n    this.group = new Group();\n    this.group.add({render: _innerRender.bind(this)});\n\n    this._entityId = Entity.register(this);\n    this._size = [undefined, undefined];\n    this._contextSize = [undefined, undefined];\n\n    this._eventInput = new EventHandler();\n    this._eventOutput = new EventHandler();\n\n    EventHandler.setInputHandler(this, this._eventInput);\n    EventHandler.setOutputHandler(this, this._eventOutput);\n}\n\nScroller.DEFAULT_OPTIONS = {\n    direction: Utility.Direction.Y,\n    margin: 0,\n    clipSize: undefined,\n    groupScroll: false\n};\n\nvar EDGE_TOLERANCE = 0; //slop for detecting passing the edge\n\nfunction _sizeForDir(size) {\n    if (!size) size = this._contextSize;\n    var dimension = this.options.direction;\n    return (size[dimension] === undefined) ? this._contextSize[dimension] : size[dimension];\n}\n\nfunction _output(node, offset, target) {\n    var size = node.getSize ? node.getSize() : this._contextSize;\n    var transform = this._outputFunction(offset);\n    target.push({transform: transform, target: node.render()});\n    return _sizeForDir.call(this, size);\n}\n\nfunction _getClipSize() {\n    if (this.options.clipSize !== undefined) return this.options.clipSize;\n    if (this._contextSize[this.options.direction] > this.getCumulativeSize()[this.options.direction]) {\n        return _sizeForDir.call(this, this.getCumulativeSize());\n    } else {\n        return _sizeForDir.call(this, this._contextSize);\n    }\n}\n\n/**\n* Returns the cumulative size of the renderables in the view sequence\n* @method getCumulativeSize\n* @return {array} a two value array of the view sequence's cumulative size up to the index.\n*/\nScroller.prototype.getCumulativeSize = function(index) {\n    if (index === undefined) index = this._node._.cumulativeSizes.length - 1;\n    return this._node._.getSize(index);\n};\n\n/**\n * Patches the Scroller instance's options with the passed-in ones.\n * @method setOptions\n * @param {Options} options An object of configurable options for the Scroller instance.\n */\nScroller.prototype.setOptions = function setOptions(options) {\n    if (options.groupScroll !== this.options.groupScroll) {\n        if (options.groupScroll)\n            this.group.pipe(this._eventOutput);\n        else\n            this.group.unpipe(this._eventOutput);\n    }\n    this._optionsManager.setOptions(options);\n};\n\n/**\n * Tells you if the Scroller instance is on an edge.\n * @method onEdge\n * @return {Boolean} Whether the Scroller instance is on an edge or not.\n */\nScroller.prototype.onEdge = function onEdge() {\n    return this._onEdge;\n};\n\n/**\n * Allows you to overwrite the way Scroller lays out it's renderables. Scroller will\n * pass an offset into the function. By default the Scroller instance just translates each node\n * in it's direction by the passed-in offset.\n * Scroller will translate each renderable down\n * @method outputFrom\n * @param {Function} fn A function that takes an offset and returns a transform.\n * @param {Function} [masterFn]\n */\nScroller.prototype.outputFrom = function outputFrom(fn, masterFn) {\n    if (!fn) {\n        fn = function(offset) {\n            return (this.options.direction === Utility.Direction.X) ? Transform.translate(offset, 0) : Transform.translate(0, offset);\n        }.bind(this);\n        if (!masterFn) masterFn = fn;\n    }\n    this._outputFunction = fn;\n    this._masterOutputFunction = masterFn ? masterFn : function(offset) {\n        return Transform.inverse(fn(-offset));\n    };\n};\n\n/**\n * The Scroller instance's method for reading from an external position. Scroller uses\n * the external position to actually scroll through it's renderables.\n * @method positionFrom\n * @param {Getter} position Can be either a function that returns a position,\n * or an object with a get method that returns a position.\n */\nScroller.prototype.positionFrom = function positionFrom(position) {\n    if (position instanceof Function) this._positionGetter = position;\n    else if (position && position.get) this._positionGetter = position.get.bind(position);\n    else {\n        this._positionGetter = null;\n        this._position = position;\n    }\n    if (this._positionGetter) this._position = this._positionGetter.call(this);\n};\n\n/**\n * Sets the collection of renderables under the Scroller instance's control.\n *\n * @method sequenceFrom\n * @param node {Array|ViewSequence} Either an array of renderables or a Famous viewSequence.\n * @chainable\n */\nScroller.prototype.sequenceFrom = function sequenceFrom(node) {\n    if (node instanceof Array) node = new ViewSequence({array: node});\n    this._node = node;\n    this._positionOffset = 0;\n};\n\n/**\n * Returns the width and the height of the Scroller instance.\n *\n * @method getSize\n * @return {Array} A two value array of the Scroller instance's current width and height (in that order).\n */\nScroller.prototype.getSize = function getSize(actual) {\n    return actual ? this._contextSize : this._size;\n};\n\n/**\n * Generate a render spec from the contents of this component.\n *\n * @private\n * @method render\n * @return {number} Render spec for this component\n */\nScroller.prototype.render = function render() {\n    if (!this._node) return null;\n    if (this._positionGetter) this._position = this._positionGetter.call(this);\n    return this._entityId;\n};\n\n/**\n * Apply changes from this component to the corresponding document element.\n * This includes changes to classes, styles, size, content, opacity, origin,\n * and matrix transforms.\n *\n * @private\n * @method commit\n * @param {Context} context commit context\n */\nScroller.prototype.commit = function commit(context) {\n    var transform = context.transform;\n    var opacity = context.opacity;\n    var origin = context.origin;\n    var size = context.size;\n\n    // reset edge detection on size change\n    if (!this.options.clipSize && (size[0] !== this._contextSize[0] || size[1] !== this._contextSize[1])) {\n        this._onEdge = 0;\n        this._contextSize[0] = size[0];\n        this._contextSize[1] = size[1];\n\n        if (this.options.direction === Utility.Direction.X) {\n            this._size[0] = _getClipSize.call(this);\n            this._size[1] = undefined;\n        }\n        else {\n            this._size[0] = undefined;\n            this._size[1] = _getClipSize.call(this);\n        }\n    }\n\n    var scrollTransform = this._masterOutputFunction(-this._position);\n\n    return {\n        transform: Transform.multiply(transform, scrollTransform),\n        size: size,\n        opacity: opacity,\n        origin: origin,\n        target: this.group.render()\n    };\n};\n\nfunction _innerRender() {\n    var size = null;\n    var position = this._position;\n    var result = [];\n\n    var offset = -this._positionOffset;\n    var clipSize = _getClipSize.call(this);\n    var currNode = this._node;\n    while (currNode && offset - position < clipSize + this.options.margin) {\n        offset += _output.call(this, currNode, offset, result);\n        currNode = currNode.getNext ? currNode.getNext() : null;\n    }\n\n    var sizeNode = this._node;\n    var nodesSize = _sizeForDir.call(this, sizeNode.getSize());\n    if (offset < clipSize) {\n        while (sizeNode && nodesSize < clipSize) {\n            sizeNode = sizeNode.getPrevious();\n            if (sizeNode) nodesSize += _sizeForDir.call(this, sizeNode.getSize());\n        }\n        sizeNode = this._node;\n        while (sizeNode && nodesSize < clipSize) {\n            sizeNode = sizeNode.getNext();\n            if (sizeNode) nodesSize += _sizeForDir.call(this, sizeNode.getSize());\n        }\n    }\n\n    if (!currNode && offset - position < clipSize - EDGE_TOLERANCE) {\n        if (this._onEdge !== 1){\n            this._onEdge = 1;\n            this._eventOutput.emit('onEdge', {\n                position: offset - clipSize\n            });\n        }\n    }\n    else if (!this._node.getPrevious() && position < -EDGE_TOLERANCE) {\n        if (this._onEdge !== -1) {\n            this._onEdge = -1;\n            this._eventOutput.emit('onEdge', {\n                position: 0\n            });\n        }\n    }\n    else {\n        if (this._onEdge !== 0){\n            this._onEdge = 0;\n            this._eventOutput.emit('offEdge');\n        }\n    }\n\n    // backwards\n    currNode = (this._node && this._node.getPrevious) ? this._node.getPrevious() : null;\n    offset = -this._positionOffset;\n    if (currNode) {\n        size = currNode.getSize ? currNode.getSize() : this._contextSize;\n        offset -= _sizeForDir.call(this, size);\n    }\n\n    while (currNode && ((offset - position) > -(clipSize + this.options.margin))) {\n        _output.call(this, currNode, offset, result);\n        currNode = currNode.getPrevious ? currNode.getPrevious() : null;\n        if (currNode) {\n            size = currNode.getSize ? currNode.getSize() : this._contextSize;\n            offset -= _sizeForDir.call(this, size);\n        }\n    }\n\n    return result;\n}\n\nmodule.exports = Scroller;\n},{\"../core/Entity\":5,\"../core/EventHandler\":7,\"../core/Group\":8,\"../core/OptionsManager\":10,\"../core/Transform\":15,\"../core/ViewSequence\":17,\"../utilities/Utility\":95}],109:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: felix@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar PhysicsEngine = require('../physics/PhysicsEngine');\nvar Particle = require('../physics/bodies/Particle');\nvar Drag = require('../physics/forces/Drag');\nvar Spring = require('../physics/forces/Spring');\nvar EventHandler = require('../core/EventHandler');\nvar OptionsManager = require('../core/OptionsManager');\nvar ViewSequence = require('../core/ViewSequence');\nvar Scroller = require('../views/Scroller');\nvar Utility = require('../utilities/Utility');\nvar GenericSync = require('../inputs/GenericSync');\nvar ScrollSync = require('../inputs/ScrollSync');\nvar TouchSync = require('../inputs/TouchSync');\nGenericSync.register({scroll : ScrollSync, touch : TouchSync});\n\n/** @const */\nvar TOLERANCE = 0.5;\n\n/** @enum */\nvar SpringStates = {\n    NONE: 0,\n    EDGE: 1,\n    PAGE: 2\n};\n\n/** @enum */\nvar EdgeStates = {\n    TOP:   -1,\n    NONE:   0,\n    BOTTOM: 1\n};\n\n/**\n * Scrollview will lay out a collection of renderables sequentially in the specified direction, and will\n * allow you to scroll through them with mousewheel or touch events.\n * @class Scrollview\n * @constructor\n * @param {Options} [options] An object of configurable options.\n * @param {Number} [options.direction=Utility.Direction.Y] Using the direction helper found in the famous Utility\n * module, this option will lay out the Scrollview instance's renderables either horizontally\n * (x) or vertically (y). Utility's direction is essentially either zero (X) or one (Y), so feel free\n * to just use integers as well.\n * @param {Boolean} [options.rails=true] When true, Scrollview's genericSync will only process input in it's primary access.\n * @param {Number} [clipSize=undefined] The size of the area (in pixels) that Scrollview will display content in.\n * @param {Number} [margin=undefined] The size of the area (in pixels) that Scrollview will process renderables' associated calculations in.\n * @param {Number} [friction=0.001] Input resistance proportional to the velocity of the input.\n * Controls the feel of the Scrollview instance at low velocities.\n * @param {Number} [drag=0.0001] Input resistance proportional to the square of the velocity of the input.\n * Affects Scrollview instance more prominently at high velocities.\n * @param {Number} [edgeGrip=0.5] A coefficient for resistance against after-touch momentum.\n * @param {Number} [egePeriod=300] Sets the period on the spring that handles the physics associated\n * with hitting the end of a scrollview.\n * @param {Number} [edgeDamp=1] Sets the damping on the spring that handles the physics associated\n * with hitting the end of a scrollview.\n * @param {Boolean} [paginated=false] A paginated scrollview will scroll through items discretely\n * rather than continously.\n * @param {Number} [pagePeriod=500] Sets the period on the spring that handles the physics associated\n * with pagination.\n * @param {Number} [pageDamp=0.8] Sets the damping on the spring that handles the physics associated\n * with pagination.\n * @param {Number} [pageStopSpeed=Infinity] The threshold for determining the amount of velocity\n * required to trigger pagination. The lower the threshold, the easier it is to scroll continuosly.\n * @param {Number} [pageSwitchSpeed=1] The threshold for momentum-based velocity pagination.\n * @param {Number} [speedLimit=10] The highest scrolling speed you can reach.\n */\nfunction Scrollview(options) {\n    // patch options with defaults\n    this.options = Object.create(Scrollview.DEFAULT_OPTIONS);\n    this._optionsManager = new OptionsManager(this.options);\n\n    // create sub-components\n    this._scroller = new Scroller(this.options);\n\n    this.sync = new GenericSync(\n        ['scroll', 'touch'],\n        {\n            direction : this.options.direction,\n            scale : this.options.syncScale,\n            rails: this.options.rails,\n            preventDefault: this.options.preventDefault !== undefined\n                ? this.options.preventDefault\n                : this.options.direction !== Utility.Direction.Y\n        }\n    );\n\n    this._physicsEngine = new PhysicsEngine();\n    this._particle = new Particle();\n    this._physicsEngine.addBody(this._particle);\n\n    this.spring = new Spring({\n        anchor: [0, 0, 0],\n        period: this.options.edgePeriod,\n        dampingRatio: this.options.edgeDamp\n    });\n    this.drag = new Drag({\n        forceFunction: Drag.FORCE_FUNCTIONS.QUADRATIC,\n        strength: this.options.drag\n    });\n    this.friction = new Drag({\n        forceFunction: Drag.FORCE_FUNCTIONS.LINEAR,\n        strength: this.options.friction\n    });\n\n    // state\n    this._node = null;\n    this._touchCount = 0;\n    this._springState = SpringStates.NONE;\n    this._onEdge = EdgeStates.NONE;\n    this._pageSpringPosition = 0;\n    this._edgeSpringPosition = 0;\n    this._touchVelocity = 0;\n    this._earlyEnd = false;\n    this._needsPaginationCheck = false;\n    this._displacement = 0;\n    this._totalShift = 0;\n    this._cachedIndex = 0;\n\n    // subcomponent logic\n    this._scroller.positionFrom(this.getPosition.bind(this));\n\n    // eventing\n    this._eventInput = new EventHandler();\n    this._eventOutput = new EventHandler();\n\n    this._eventInput.pipe(this.sync);\n    this.sync.pipe(this._eventInput);\n\n    EventHandler.setInputHandler(this, this._eventInput);\n    EventHandler.setOutputHandler(this, this._eventOutput);\n\n    _bindEvents.call(this);\n\n    // override default options with passed-in custom options\n    if (options) this.setOptions(options);\n}\n\nScrollview.DEFAULT_OPTIONS = {\n    direction: Utility.Direction.Y,\n    rails: true,\n    friction: 0.005,\n    drag: 0.0001,\n    edgeGrip: 0.2,\n    edgePeriod: 300,\n    edgeDamp: 1,\n    margin: 1000,       // mostly safe\n    paginated: false,\n    pagePeriod: 500,\n    pageDamp: 0.8,\n    pageStopSpeed: 10,\n    pageSwitchSpeed: 0.5,\n    speedLimit: 5,\n    groupScroll: false,\n    syncScale: 1\n};\n\nfunction _handleStart(event) {\n    this._touchCount = event.count;\n    if (event.count === undefined) this._touchCount = 1;\n\n    _detachAgents.call(this);\n\n    this.setVelocity(0);\n    this._touchVelocity = 0;\n    this._earlyEnd = false;\n}\n\nfunction _handleMove(event) {\n    var velocity = -event.velocity;\n    var delta = -event.delta;\n\n    if (this._onEdge !== EdgeStates.NONE && event.slip) {\n        if ((velocity < 0 && this._onEdge === EdgeStates.TOP) || (velocity > 0 && this._onEdge === EdgeStates.BOTTOM)) {\n            if (!this._earlyEnd) {\n                _handleEnd.call(this, event);\n                this._earlyEnd = true;\n            }\n        }\n        else if (this._earlyEnd && (Math.abs(velocity) > Math.abs(this.getVelocity()))) {\n            _handleStart.call(this, event);\n        }\n    }\n    if (this._earlyEnd) return;\n    this._touchVelocity = velocity;\n\n    if (event.slip) {\n        var speedLimit = this.options.speedLimit;\n        if (velocity < -speedLimit) velocity = -speedLimit;\n        else if (velocity > speedLimit) velocity = speedLimit;\n\n        this.setVelocity(velocity);\n\n        var deltaLimit = speedLimit * 16;\n        if (delta > deltaLimit) delta = deltaLimit;\n        else if (delta < -deltaLimit) delta = -deltaLimit;\n    }\n\n    this.setPosition(this.getPosition() + delta);\n    this._displacement += delta;\n\n    if (this._springState === SpringStates.NONE) _normalizeState.call(this);\n}\n\nfunction _handleEnd(event) {\n    this._touchCount = event.count || 0;\n    if (!this._touchCount) {\n        _detachAgents.call(this);\n        if (this._onEdge !== EdgeStates.NONE) _setSpring.call(this, this._edgeSpringPosition, SpringStates.EDGE);\n        _attachAgents.call(this);\n        var velocity = -event.velocity;\n        var speedLimit = this.options.speedLimit;\n        if (event.slip) speedLimit *= this.options.edgeGrip;\n        if (velocity < -speedLimit) velocity = -speedLimit;\n        else if (velocity > speedLimit) velocity = speedLimit;\n        this.setVelocity(velocity);\n        this._touchVelocity = 0;\n        this._needsPaginationCheck = true;\n    }\n}\n\nfunction _bindEvents() {\n    this._eventInput.bindThis(this);\n    this._eventInput.on('start', _handleStart);\n    this._eventInput.on('update', _handleMove);\n    this._eventInput.on('end', _handleEnd);\n\n    this._eventInput.on('resize', function() {\n        this._node._.calculateSize();\n    }.bind(this));\n\n    this._scroller.on('onEdge', function(data) {\n        this._edgeSpringPosition = data.position;\n        _handleEdge.call(this, this._scroller.onEdge());\n        this._eventOutput.emit('onEdge');\n    }.bind(this));\n\n    this._scroller.on('offEdge', function() {\n        this.sync.setOptions({scale: this.options.syncScale});\n        this._onEdge = this._scroller.onEdge();\n        this._eventOutput.emit('offEdge');\n    }.bind(this));\n\n    this._particle.on('update', function(particle) {\n        if (this._springState === SpringStates.NONE) _normalizeState.call(this);\n        this._displacement = particle.position.x - this._totalShift;\n    }.bind(this));\n\n    this._particle.on('end', function() {\n        if (!this.options.paginated || (this.options.paginated && this._springState !== SpringStates.NONE))\n            this._eventOutput.emit('settle');\n    }.bind(this));\n}\n\nfunction _attachAgents() {\n    if (this._springState) this._physicsEngine.attach([this.spring], this._particle);\n    else this._physicsEngine.attach([this.drag, this.friction], this._particle);\n}\n\nfunction _detachAgents() {\n    this._springState = SpringStates.NONE;\n    this._physicsEngine.detachAll();\n}\n\nfunction _nodeSizeForDirection(node) {\n    var direction = this.options.direction;\n    var nodeSize = node.getSize();\n    return (!nodeSize) ? this._scroller.getSize()[direction] : nodeSize[direction];\n}\n\nfunction _handleEdge(edge) {\n    this.sync.setOptions({scale: this.options.edgeGrip});\n    this._onEdge = edge;\n\n    if (!this._touchCount && this._springState !== SpringStates.EDGE) {\n        _setSpring.call(this, this._edgeSpringPosition, SpringStates.EDGE);\n    }\n\n    if (this._springState && Math.abs(this.getVelocity()) < 0.001) {\n        // reset agents, detaching the spring\n        _detachAgents.call(this);\n        _attachAgents.call(this);\n    }\n}\n\nfunction _handlePagination() {\n    if (this._touchCount) return;\n    if (this._springState === SpringStates.EDGE) return;\n\n    var velocity = this.getVelocity();\n    if (Math.abs(velocity) >= this.options.pageStopSpeed) return;\n\n    var position = this.getPosition();\n    var velocitySwitch = Math.abs(velocity) > this.options.pageSwitchSpeed;\n\n    // parameters to determine when to switch\n    var nodeSize = _nodeSizeForDirection.call(this, this._node);\n    var positionNext = position > 0.5 * nodeSize;\n    var positionPrev = position < 0.5 * nodeSize;\n\n    var velocityNext = velocity > 0;\n    var velocityPrev = velocity < 0;\n\n    this._needsPaginationCheck = false;\n\n    if ((positionNext && !velocitySwitch) || (velocitySwitch && velocityNext)) {\n        this.goToNextPage();\n    }\n    else if (velocitySwitch && velocityPrev) {\n        this.goToPreviousPage();\n    }\n    else _setSpring.call(this, 0, SpringStates.PAGE);\n}\n\nfunction _setSpring(position, springState) {\n    var springOptions;\n    if (springState === SpringStates.EDGE) {\n        this._edgeSpringPosition = position;\n        springOptions = {\n            anchor: [this._edgeSpringPosition, 0, 0],\n            period: this.options.edgePeriod,\n            dampingRatio: this.options.edgeDamp\n        };\n    }\n    else if (springState === SpringStates.PAGE) {\n        this._pageSpringPosition = position;\n        springOptions = {\n            anchor: [this._pageSpringPosition, 0, 0],\n            period: this.options.pagePeriod,\n            dampingRatio: this.options.pageDamp\n        };\n    }\n\n    this.spring.setOptions(springOptions);\n    if (springState && !this._springState) {\n        _detachAgents.call(this);\n        this._springState = springState;\n        _attachAgents.call(this);\n    }\n    this._springState = springState;\n}\n\nfunction _normalizeState() {\n    var offset = 0;\n\n    var position = this.getPosition();\n    position += (position < 0 ? -0.5 : 0.5) >> 0;\n\n    var nodeSize = _nodeSizeForDirection.call(this, this._node);\n    var nextNode = this._node.getNext();\n\n    while (offset + position >= nodeSize && nextNode) {\n        offset -= nodeSize;\n        this._scroller.sequenceFrom(nextNode);\n        this._node = nextNode;\n        nextNode = this._node.getNext();\n        nodeSize = _nodeSizeForDirection.call(this, this._node);\n    }\n\n    var previousNode = this._node.getPrevious();\n    var previousNodeSize;\n\n    while (offset + position <= 0 && previousNode) {\n        previousNodeSize = _nodeSizeForDirection.call(this, previousNode);\n        this._scroller.sequenceFrom(previousNode);\n        this._node = previousNode;\n        offset += previousNodeSize;\n        previousNode = this._node.getPrevious();\n    }\n\n    if (offset) _shiftOrigin.call(this, offset);\n\n    if (this._node) {\n        if (this._node.index !== this._cachedIndex) {\n            if (this.getPosition() < 0.5 * nodeSize) {\n                this._cachedIndex = this._node.index;\n                this._eventOutput.emit('pageChange', {direction: -1, index: this._cachedIndex});\n            }\n        } else {\n            if (this.getPosition() > 0.5 * nodeSize) {\n                this._cachedIndex = this._node.index + 1;\n                this._eventOutput.emit('pageChange', {direction: 1, index: this._cachedIndex});\n            }\n        }\n    }\n}\n\nfunction _shiftOrigin(amount) {\n    this._edgeSpringPosition += amount;\n    this._pageSpringPosition += amount;\n    this.setPosition(this.getPosition() + amount);\n    this._totalShift += amount;\n\n    if (this._springState === SpringStates.EDGE) {\n        this.spring.setOptions({anchor: [this._edgeSpringPosition, 0, 0]});\n    }\n    else if (this._springState === SpringStates.PAGE) {\n        this.spring.setOptions({anchor: [this._pageSpringPosition, 0, 0]});\n    }\n}\n\n/**\n * Returns the index of the first visible renderable\n *\n * @method getCurrentIndex\n * @return {Number} The current index of the ViewSequence\n */\nScrollview.prototype.getCurrentIndex = function getCurrentIndex() {\n    return this._node.index;\n};\n\n/**\n * goToPreviousPage paginates your Scrollview instance backwards by one item.\n *\n * @method goToPreviousPage\n * @return {ViewSequence} The previous node.\n */\nScrollview.prototype.goToPreviousPage = function goToPreviousPage() {\n    if (!this._node || this._onEdge === EdgeStates.TOP) return null;\n\n    // if moving back to the current node\n    if (this.getPosition() > 1 && this._springState === SpringStates.NONE) {\n        _setSpring.call(this, 0, SpringStates.PAGE);\n        return this._node;\n    }\n\n    // if moving to the previous node\n    var previousNode = this._node.getPrevious();\n    if (previousNode) {\n        var previousNodeSize = _nodeSizeForDirection.call(this, previousNode);\n        this._scroller.sequenceFrom(previousNode);\n        this._node = previousNode;\n        _shiftOrigin.call(this, previousNodeSize);\n        _setSpring.call(this, 0, SpringStates.PAGE);\n    }\n    return previousNode;\n};\n\n/**\n * goToNextPage paginates your Scrollview instance forwards by one item.\n *\n * @method goToNextPage\n * @return {ViewSequence} The next node.\n */\nScrollview.prototype.goToNextPage = function goToNextPage() {\n    if (!this._node || this._onEdge === EdgeStates.BOTTOM) return null;\n    var nextNode = this._node.getNext();\n    if (nextNode) {\n        var currentNodeSize = _nodeSizeForDirection.call(this, this._node);\n        this._scroller.sequenceFrom(nextNode);\n        this._node = nextNode;\n        _shiftOrigin.call(this, -currentNodeSize);\n        _setSpring.call(this, 0, SpringStates.PAGE);\n    }\n    return nextNode;\n};\n\n/**\n * Paginates the Scrollview to an absolute page index.\n *\n * @method goToPage\n */\nScrollview.prototype.goToPage = function goToPage(index) {\n    var currentIndex = this.getCurrentIndex();\n    var i;\n\n    if (currentIndex > index) {\n        for (i = 0; i < currentIndex - index; i++)\n            this.goToPreviousPage();\n    }\n\n    if (currentIndex < index) {\n        for (i = 0; i < index - currentIndex; i++)\n            this.goToNextPage();\n    }\n};\n\nScrollview.prototype.outputFrom = function outputFrom() {\n    return this._scroller.outputFrom.apply(this._scroller, arguments);\n};\n\n/**\n * Returns the position associated with the Scrollview instance's current node\n *  (generally the node currently at the top).\n *\n * @deprecated\n * @method getPosition\n * @param {number} [node] If specified, returns the position of the node at that index in the\n * Scrollview instance's currently managed collection.\n * @return {number} The position of either the specified node, or the Scrollview's current Node,\n * in pixels translated.\n */\nScrollview.prototype.getPosition = function getPosition() {\n    return this._particle.getPosition1D();\n};\n\n/**\n * Returns the absolute position associated with the Scrollview instance\n *\n * @method getAbsolutePosition\n * @return {number} The position of the Scrollview's current Node,\n * in pixels translated.\n */\nScrollview.prototype.getAbsolutePosition = function getAbsolutePosition() {\n    return this._scroller.getCumulativeSize(this.getCurrentIndex())[this.options.direction] + this.getPosition();\n};\n\n/**\n * Returns the offset associated with the Scrollview instance's current node\n *  (generally the node currently at the top).\n *\n * @method getOffset\n * @param {number} [node] If specified, returns the position of the node at that index in the\n * Scrollview instance's currently managed collection.\n * @return {number} The position of either the specified node, or the Scrollview's current Node,\n * in pixels translated.\n */\nScrollview.prototype.getOffset = Scrollview.prototype.getPosition;\n\n/**\n * Sets the position of the physics particle that controls Scrollview instance's \"position\"\n *\n * @deprecated\n * @method setPosition\n * @param {number} x The amount of pixels you want your scrollview to progress by.\n */\nScrollview.prototype.setPosition = function setPosition(x) {\n    this._particle.setPosition1D(x);\n};\n\n/**\n * Sets the offset of the physics particle that controls Scrollview instance's \"position\"\n *\n * @method setPosition\n * @param {number} x The amount of pixels you want your scrollview to progress by.\n */\nScrollview.prototype.setOffset = Scrollview.prototype.setPosition;\n\n/**\n * Returns the Scrollview instance's velocity.\n *\n * @method getVelocity\n * @return {Number} The velocity.\n */\n\nScrollview.prototype.getVelocity = function getVelocity() {\n    return this._touchCount ? this._touchVelocity : this._particle.getVelocity1D();\n};\n\n/**\n * Sets the Scrollview instance's velocity. Until affected by input or another call of setVelocity\n *  the Scrollview instance will scroll at the passed-in velocity.\n *\n * @method setVelocity\n * @param {number} v The magnitude of the velocity.\n */\nScrollview.prototype.setVelocity = function setVelocity(v) {\n    this._particle.setVelocity1D(v);\n};\n\n/**\n * Patches the Scrollview instance's options with the passed-in ones.\n *\n * @method setOptions\n * @param {Options} options An object of configurable options for the Scrollview instance.\n */\nScrollview.prototype.setOptions = function setOptions(options) {\n    // preprocess custom options\n    if (options.direction !== undefined) {\n        if (options.direction === 'x') options.direction = Utility.Direction.X;\n        else if (options.direction === 'y') options.direction = Utility.Direction.Y;\n    }\n\n    if (options.groupScroll !== this.options.groupScroll) {\n        if (options.groupScroll)\n            this.subscribe(this._scroller);\n        else\n            this.unsubscribe(this._scroller);\n    }\n\n    // patch custom options\n    this._optionsManager.setOptions(options);\n\n    // propagate options to sub-components\n\n    // scroller sub-component\n    this._scroller.setOptions(options);\n\n    // physics sub-components\n    if (options.drag !== undefined) this.drag.setOptions({strength: this.options.drag});\n    if (options.friction !== undefined) this.friction.setOptions({strength: this.options.friction});\n    if (options.edgePeriod !== undefined || options.edgeDamp !== undefined) {\n        this.spring.setOptions({\n            period: this.options.edgePeriod,\n            dampingRatio: this.options.edgeDamp\n        });\n    }\n\n    // sync sub-component\n    if (options.rails || options.direction !== undefined || options.syncScale !== undefined || options.preventDefault) {\n        this.sync.setOptions({\n            rails: this.options.rails,\n            direction: (this.options.direction === Utility.Direction.X) ? GenericSync.DIRECTION_X : GenericSync.DIRECTION_Y,\n            scale: this.options.syncScale,\n            preventDefault: this.options.preventDefault\n        });\n    }\n};\n\n/**\n * Sets the collection of renderables under the Scrollview instance's control, by\n *  setting its current node to the passed in ViewSequence. If you\n *  pass in an array, the Scrollview instance will set its node as a ViewSequence instantiated with\n *  the passed-in array.\n *\n * @method sequenceFrom\n * @param {Array|ViewSequence} node Either an array of renderables or a Famous viewSequence.\n */\nScrollview.prototype.sequenceFrom = function sequenceFrom(node) {\n    if (node instanceof Array) node = new ViewSequence({array: node, trackSize: true});\n    this._node = node;\n    return this._scroller.sequenceFrom(node);\n};\n\n/**\n * Returns the width and the height of the Scrollview instance.\n *\n * @method getSize\n * @return {Array} A two value array of the Scrollview instance's current width and height (in that order).\n */\nScrollview.prototype.getSize = function getSize() {\n    return this._scroller.getSize.apply(this._scroller, arguments);\n};\n\n/**\n * Generate a render spec from the contents of this component.\n *\n * @private\n * @method render\n * @return {number} Render spec for this component\n */\nScrollview.prototype.render = function render() {\n    if (this.options.paginated && this._needsPaginationCheck) _handlePagination.call(this);\n\n    return this._scroller.render();\n};\n\nmodule.exports = Scrollview;\n},{\"../core/EventHandler\":7,\"../core/OptionsManager\":10,\"../core/ViewSequence\":17,\"../inputs/GenericSync\":27,\"../inputs/ScrollSync\":32,\"../inputs/TouchSync\":33,\"../physics/PhysicsEngine\":48,\"../physics/bodies/Particle\":51,\"../physics/forces/Drag\":63,\"../physics/forces/Spring\":68,\"../utilities/Utility\":95,\"../views/Scroller\":108}],110:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: felix@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar OptionsManager = require('../core/OptionsManager');\nvar Transform = require('../core/Transform');\nvar ViewSequence = require('../core/ViewSequence');\nvar Utility = require('../utilities/Utility');\n\n/**\n * SequentialLayout will lay out a collection of renderables sequentially in the specified direction.\n * @class SequentialLayout\n * @constructor\n * @param {Options} [options] An object of configurable options.\n * @param {Number} [options.direction=Utility.Direction.Y] Using the direction helper found in the famous Utility\n * module, this option will lay out the SequentialLayout instance's renderables either horizontally\n * (x) or vertically (y). Utility's direction is essentially either zero (X) or one (Y), so feel free\n * to just use integers as well.\n */\nfunction SequentialLayout(options) {\n    this._items = null;\n    this._size = null;\n    this._outputFunction = SequentialLayout.DEFAULT_OUTPUT_FUNCTION;\n\n    this.options = Utility.clone(this.constructor.DEFAULT_OPTIONS || SequentialLayout.DEFAULT_OPTIONS);\n    this.optionsManager = new OptionsManager(this.options);\n\n    if (options) this.setOptions(options);\n}\n\nSequentialLayout.DEFAULT_OPTIONS = {\n    direction: Utility.Direction.Y,\n    itemSpacing: 0\n};\n\nSequentialLayout.DEFAULT_OUTPUT_FUNCTION = function DEFAULT_OUTPUT_FUNCTION(input, offset, index) {\n    var transform = (this.options.direction === Utility.Direction.X) ? Transform.translate(offset, 0) : Transform.translate(0, offset);\n    return {\n        transform: transform,\n        target: input.render()\n    };\n};\n\n/**\n * Returns the width and the height of the SequentialLayout instance.\n *\n * @method getSize\n * @return {Array} A two value array of the SequentialLayout instance's current width and height (in that order).\n */\nSequentialLayout.prototype.getSize = function getSize() {\n    if (!this._size) this.render(); // hack size in\n    return this._size;\n};\n\n/**\n * Sets the collection of renderables under the SequentialLayout instance's control.\n *\n * @method sequenceFrom\n * @param {Array|ViewSequence} items Either an array of renderables or a Famous viewSequence.\n * @chainable\n */\nSequentialLayout.prototype.sequenceFrom = function sequenceFrom(items) {\n    if (items instanceof Array) items = new ViewSequence(items);\n    this._items = items;\n    return this;\n};\n\n/**\n * Patches the SequentialLayout instance's options with the passed-in ones.\n *\n * @method setOptions\n * @param {Options} options An object of configurable options for the SequentialLayout instance.\n * @chainable\n */\nSequentialLayout.prototype.setOptions = function setOptions(options) {\n    this.optionsManager.setOptions.apply(this.optionsManager, arguments);\n    return this;\n};\n\n/**\n * setOutputFunction is used to apply a user-defined output transform on each processed renderable.\n *  For a good example, check out SequentialLayout's own DEFAULT_OUTPUT_FUNCTION in the code.\n *\n * @method setOutputFunction\n * @param {Function} outputFunction An output processer for each renderable in the SequentialLayout\n * instance.\n * @chainable\n */\nSequentialLayout.prototype.setOutputFunction = function setOutputFunction(outputFunction) {\n    this._outputFunction = outputFunction;\n    return this;\n};\n\n/**\n * Generate a render spec from the contents of this component.\n *\n * @private\n * @method render\n * @return {number} Render spec for this component\n */\nSequentialLayout.prototype.render = function render() {\n    var length             = 0;\n    var secondaryDirection = this.options.direction ^ 1;\n    var currentNode        = this._items;\n    var item               = null;\n    var itemSize           = [];\n    var output             = {};\n    var result             = [];\n    var i                  = 0;\n\n    this._size = [0, 0];\n\n    while (currentNode) {\n        item = currentNode.get();\n        if (!item) break;\n\n        if (item.getSize) itemSize = item.getSize();\n\n        output = this._outputFunction.call(this, item, length, i++);\n        result.push(output);\n\n        if (itemSize) {\n            if (itemSize[this.options.direction]) length += itemSize[this.options.direction];\n            if (itemSize[secondaryDirection] > this._size[secondaryDirection]) this._size[secondaryDirection] = itemSize[secondaryDirection];\n        }\n\n        currentNode = currentNode.getNext();\n\n        if (this.options.itemSpacing && currentNode) length += this.options.itemSpacing;\n    }\n\n    this._size[this.options.direction] = length;\n\n    return result;\n};\n\nmodule.exports = SequentialLayout;\n},{\"../core/OptionsManager\":10,\"../core/Transform\":15,\"../core/ViewSequence\":17,\"../utilities/Utility\":95}],111:[function(require,module,exports){\nmodule.exports = {\n  ContextualView: require('./ContextualView'),\n  Deck: require('./Deck'),\n  DrawerLayout: require('./DrawerLayout'),\n  EdgeSwapper: require('./EdgeSwapper'),\n  FlexibleLayout: require('./FlexibleLayout'),\n  Flipper: require('./Flipper'),\n  GridLayout: require('./GridLayout'),\n  HeaderFooterLayout: require('./HeaderFooterLayout'),\n  Lightbox: require('./Lightbox'),\n  RenderController: require('./RenderController'),\n  ScrollContainer: require('./ScrollContainer'),\n  Scroller: require('./Scroller'),\n  Scrollview: require('./Scrollview'),\n  SequentialLayout: require('./SequentialLayout')\n};\n\n},{\"./ContextualView\":97,\"./Deck\":98,\"./DrawerLayout\":99,\"./EdgeSwapper\":100,\"./FlexibleLayout\":101,\"./Flipper\":102,\"./GridLayout\":103,\"./HeaderFooterLayout\":104,\"./Lightbox\":105,\"./RenderController\":106,\"./ScrollContainer\":107,\"./Scroller\":108,\"./Scrollview\":109,\"./SequentialLayout\":110}],112:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Scene = require('../core/Scene');\nvar Surface = require('../core/Surface');\nvar Transform = require('../core/Transform');\nvar View = require('../core/View');\n\n/**\n * A view for displaying the title of the current page\n *  as well as icons for navigating backwards and opening\n *  further options\n *\n * @class NavigationBar\n * @extends View\n * @constructor\n *\n * @param {object} [options] overrides of default options\n * @param {Array.number} [options.size=(undefined,0.5)] Size of the navigation bar and it's componenets.\n * @param {Array.string} [options.backClasses=(back)] CSS Classes attached to back of Navigation.\n * @param {String} [options.backContent=(&#x25c0;)] Content of the back button.\n * @param {Array.string} [options.classes=(navigation)] CSS Classes attached to the surfaces.\n * @param {String} [options.content] Content to pass into title bar.\n * @param {Array.string} [options.classes=(more)] CSS Classes attached to the More surface.\n * @param {String} [options.moreContent=(&#x271a;)] Content of the more button.\n */\nfunction NavigationBar(options) {\n    View.apply(this, arguments);\n\n    this.title = new Surface({\n        classes: this.options.classes,\n        content: this.options.content\n    });\n\n    this.back = new Surface({\n        size: [this.options.size[1], this.options.size[1]],\n        classes: this.options.classes,\n        content: this.options.backContent\n    });\n    this.back.on('click', function() {\n        this._eventOutput.emit('back', {});\n    }.bind(this));\n\n    this.more = new Surface({\n        size: [this.options.size[1], this.options.size[1]],\n        classes: this.options.classes,\n        content: this.options.moreContent\n    });\n    this.more.on('click', function() {\n        this._eventOutput.emit('more', {});\n    }.bind(this));\n\n    this.layout = new Scene({\n        id: 'master',\n        size: this.options.size,\n        target: [\n            {\n                transform: Transform.inFront,\n                origin: [0, 0.5],\n                target: this.back\n            },\n            {\n                origin: [0.5, 0.5],\n                target: this.title\n            },\n            {\n                transform: Transform.inFront,\n                origin: [1, 0.5],\n                target: this.more\n            }\n        ]\n    });\n\n    this._add(this.layout);\n\n    this._optionsManager.on('change', function(event) {\n        var key = event.id;\n        var data = event.value;\n        if (key === 'size') {\n            this.layout.id.master.setSize(data);\n            this.title.setSize(data);\n            this.back.setSize([data[1], data[1]]);\n            this.more.setSize([data[1], data[1]]);\n        }\n        else if (key === 'backClasses') {\n            this.back.setOptions({classes: this.options.classes.concat(this.options.backClasses)});\n        }\n        else if (key === 'backContent') {\n            this.back.setContent(this.options.backContent);\n        }\n        else if (key === 'classes') {\n            this.title.setOptions({classes: this.options.classes});\n            this.back.setOptions({classes: this.options.classes.concat(this.options.backClasses)});\n            this.more.setOptions({classes: this.options.classes.concat(this.options.moreClasses)});\n        }\n        else if (key === 'content') {\n            this.setContent(this.options.content);\n        }\n        else if (key === 'moreClasses') {\n            this.more.setOptions({classes: this.options.classes.concat(this.options.moreClasses)});\n        }\n        else if (key === 'moreContent') {\n            this.more.setContent(this.options.content);\n        }\n    }.bind(this));\n}\n\nNavigationBar.prototype = Object.create(View.prototype);\nNavigationBar.prototype.constructor = NavigationBar;\n\nNavigationBar.DEFAULT_OPTIONS = {\n    size: [undefined, 50],\n    backClasses: ['back'],\n    backContent: '&#x25c0;',\n    classes: ['navigation'],\n    content: '',\n    moreClasses: ['more'],\n    moreContent: '&#x271a;'\n};\n\n/**\n * Set the title of the NavigationBar\n *\n * @method setContent\n *\n * @param {object} content JSON object containing title information\n *\n * @return {undefined}\n */\nNavigationBar.prototype.setContent = function setContent(content) {\n    return this.title.setContent(content);\n};\n\nmodule.exports = NavigationBar;\n},{\"../core/Scene\":12,\"../core/Surface\":14,\"../core/Transform\":15,\"../core/View\":16}],113:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Surface = require('../core/Surface');\nvar CanvasSurface = require('../surfaces/CanvasSurface');\nvar Transform = require('../core/Transform');\nvar EventHandler = require('../core/EventHandler');\nvar Utilities = require('../math/Utilities');\nvar OptionsManager = require('../core/OptionsManager');\nvar MouseSync = require('../inputs/MouseSync');\nvar TouchSync = require('../inputs/TouchSync');\nvar GenericSync = require('../inputs/GenericSync');\n\nGenericSync.register({\n    mouse : MouseSync,\n    touch : TouchSync\n});\n\n/** @constructor */\nfunction Slider(options) {\n    this.options = Object.create(Slider.DEFAULT_OPTIONS);\n    this.optionsManager = new OptionsManager(this.options);\n    if (options) this.setOptions(options);\n\n    this.indicator = new CanvasSurface({\n        size: this.options.indicatorSize,\n        classes : ['slider-back']\n    });\n\n    this.label = new Surface({\n        size: this.options.labelSize,\n        content: this.options.label,\n        properties : {pointerEvents : 'none'},\n        classes: ['slider-label']\n    });\n\n    this.eventOutput = new EventHandler();\n    this.eventInput = new EventHandler();\n    EventHandler.setInputHandler(this, this.eventInput);\n    EventHandler.setOutputHandler(this, this.eventOutput);\n\n    var scale = (this.options.range[1] - this.options.range[0]) / this.options.indicatorSize[0];\n\n    this.sync = new GenericSync(\n        ['mouse', 'touch'],\n        {\n            scale : scale,\n            direction : GenericSync.DIRECTION_X\n        }\n    );\n\n    this.indicator.pipe(this.sync);\n    this.sync.pipe(this);\n\n    this.eventInput.on('update', function(data) {\n        this.set(data.position);\n    }.bind(this));\n\n    this._drawPos = 0;\n    _updateLabel.call(this);\n}\n\nSlider.DEFAULT_OPTIONS = {\n    size: [200, 60],\n    indicatorSize: [200, 30],\n    labelSize: [200, 30],\n    range: [0, 1],\n    precision: 2,\n    value: 0,\n    label: '',\n    fillColor: 'rgba(170, 170, 170, 1)'\n};\n\nfunction _updateLabel() {\n    this.label.setContent(this.options.label + '<span style=\"float: right\">' + this.get().toFixed(this.options.precision) + '</span>');\n}\n\nSlider.prototype.setOptions = function setOptions(options) {\n    return this.optionsManager.setOptions(options);\n};\n\nSlider.prototype.get = function get() {\n    return this.options.value;\n};\n\nSlider.prototype.set = function set(value) {\n    if (value === this.options.value) return;\n    this.options.value = Utilities.clamp(value, this.options.range);\n    _updateLabel.call(this);\n    this.eventOutput.emit('change', {value: value});\n};\n\nSlider.prototype.getSize = function getSize() {\n    return this.options.size;\n};\n\nSlider.prototype.render = function render() {\n    var range = this.options.range;\n    var fillSize = Math.floor(((this.get() - range[0]) / (range[1] - range[0])) * this.options.indicatorSize[0]);\n\n    if (fillSize < this._drawPos) {\n        this.indicator.getContext('2d').clearRect(fillSize, 0, this._drawPos - fillSize + 1, this.options.indicatorSize[1]);\n    }\n    else if (fillSize > this._drawPos) {\n        var ctx = this.indicator.getContext('2d');\n        ctx.fillStyle = this.options.fillColor;\n        ctx.fillRect(this._drawPos-1, 0, fillSize - this._drawPos+1, this.options.indicatorSize[1]);\n    }\n    this._drawPos = fillSize;\n\n    return {\n        size: this.options.size,\n        target: [\n            {\n                origin: [0, 0],\n                target: this.indicator.render()\n            },\n            {\n                transform: Transform.translate(0, 0, 1),\n                origin: [0, 0],\n                target: this.label.render()\n            }\n        ]\n    };\n};\n\nmodule.exports = Slider;\n},{\"../core/EventHandler\":7,\"../core/OptionsManager\":10,\"../core/Surface\":14,\"../core/Transform\":15,\"../inputs/GenericSync\":27,\"../inputs/MouseSync\":28,\"../inputs/TouchSync\":33,\"../math/Utilities\":40,\"../surfaces/CanvasSurface\":74}],114:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Utility = require('../utilities/Utility');\nvar View = require('../core/View');\nvar GridLayout = require('../views/GridLayout');\nvar ToggleButton = require('./ToggleButton');\n\n/**\n * A view for displaying various tabs that dispatch events\n *  based on the id of the button that was clicked\n *\n * @class TabBar\n * @extends View\n * @constructor\n *\n * @param {object} options overrides of default options\n */\nfunction TabBar(options) {\n    View.apply(this, arguments);\n\n    this.layout = new GridLayout();\n    this.buttons = [];\n    this._buttonIds = {};\n    this._buttonCallbacks = {};\n\n    this.layout.sequenceFrom(this.buttons);\n    this._add(this.layout);\n\n    this._optionsManager.on('change', _updateOptions.bind(this));\n}\n\nTabBar.prototype = Object.create(View.prototype);\nTabBar.prototype.constructor = TabBar;\n\nTabBar.DEFAULT_OPTIONS = {\n    sections: [],\n    widget: ToggleButton,\n    size: [undefined, 50],\n    direction: Utility.Direction.X,\n    buttons: {\n        toggleMode: ToggleButton.ON\n    }\n};\n\n/**\n * Update the options for all components of the view\n *\n * @method _updateOptions\n *\n * @param {object} data component options\n */\nfunction _updateOptions(data) {\n    var id = data.id;\n    var value = data.value;\n\n    if (id === 'direction') {\n        this.layout.setOptions({dimensions: _resolveGridDimensions.call(this.buttons.length, this.options.direction)});\n    }\n    else if (id === 'buttons') {\n        for (var i in this.buttons) {\n            this.buttons[i].setOptions(value);\n        }\n    }\n    else if (id === 'sections') {\n        for (var sectionId in this.options.sections) {\n            this.defineSection(sectionId, this.options.sections[sectionId]);\n        }\n    }\n}\n\n/**\n * Return an array of the proper dimensions for the tabs\n *\n * @method _resolveGridDimensions\n *\n * @param {number} count number of buttons\n * @param {number} direction direction of the layout\n *\n * @return {array} the dimensions of the tab section\n */\nfunction _resolveGridDimensions(count, direction) {\n    if (direction === Utility.Direction.X) return [count, 1];\n    else return [1, count];\n}\n\n/**\n * Create a new button with the specified id.  If one already exists with\n *  that id, unbind all listeners.\n *\n * @method defineSection\n *\n * @param {string} id name of the button\n * @param {object} content data for the creation of a new ToggleButton\n */\nTabBar.prototype.defineSection = function defineSection(id, content) {\n    var button;\n    var i = this._buttonIds[id];\n\n    if (i === undefined) {\n        i = this.buttons.length;\n        this._buttonIds[id] = i;\n        var widget = this.options.widget;\n        button = new widget();\n        this.buttons[i] = button;\n        this.layout.setOptions({dimensions: _resolveGridDimensions(this.buttons.length, this.options.direction)});\n    }\n    else {\n        button = this.buttons[i];\n        button.unbind('select', this._buttonCallbacks[id]);\n    }\n\n    if (this.options.buttons) button.setOptions(this.options.buttons);\n    button.setOptions(content);\n\n    this._buttonCallbacks[id] = this.select.bind(this, id);\n    button.on('select', this._buttonCallbacks[id]);\n};\n\n/**\n * Select a particular button and dispatch the id of the selection\n *  to any listeners.  Deselect all others\n *\n * @method select\n *\n * @param {string} id button id\n */\nTabBar.prototype.select = function select(id) {\n    var btn = this._buttonIds[id];\n    // this prevents event loop\n    if (this.buttons[btn] && this.buttons[btn].isSelected()) {\n        this._eventOutput.emit('select', {id: id});\n    }\n    else if (this.buttons[btn]) {\n        this.buttons[btn].select();\n    }\n\n    for (var i = 0; i < this.buttons.length; i++) {\n        if (i !== btn) this.buttons[i].deselect();\n    }\n};\n\nmodule.exports = TabBar;\n},{\"../core/View\":16,\"../utilities/Utility\":95,\"../views/GridLayout\":103,\"./ToggleButton\":115}],115:[function(require,module,exports){\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\nvar Surface = require('../core/Surface');\nvar EventHandler = require('../core/EventHandler');\nvar RenderController = require('../views/RenderController');\n\n/**\n * A view for transitioning between two surfaces based\n *  on a 'on' and 'off' state\n *\n * @class TabBar\n * @extends View\n * @constructor\n *\n * @param {object} options overrides of default options\n */\nfunction ToggleButton(options) {\n    this.options = {\n        content: '',\n        offClasses: ['off'],\n        onClasses: ['on'],\n        size: undefined,\n        outTransition: {curve: 'easeInOut', duration: 300},\n        inTransition: {curve: 'easeInOut', duration: 300},\n        toggleMode: ToggleButton.TOGGLE,\n        crossfade: true\n    };\n\n    this._eventOutput = new EventHandler();\n    EventHandler.setOutputHandler(this, this._eventOutput);\n\n    this.offSurface = new Surface();\n    this.offSurface.on('click', function() {\n        if (this.options.toggleMode !== ToggleButton.OFF) this.select();\n    }.bind(this));\n    this.offSurface.pipe(this._eventOutput);\n\n    this.onSurface = new Surface();\n    this.onSurface.on('click', function() {\n        if (this.options.toggleMode !== ToggleButton.ON) this.deselect();\n    }.bind(this));\n    this.onSurface.pipe(this._eventOutput);\n\n    this.arbiter = new RenderController({\n        overlap : this.options.crossfade\n    });\n\n    this.deselect();\n\n    if (options) this.setOptions(options);\n}\n\nToggleButton.OFF = 0;\nToggleButton.ON = 1;\nToggleButton.TOGGLE = 2;\n\n/**\n * Transition towards the 'on' state and dispatch an event to\n *  listeners to announce it was selected\n *\n * @method select\n */\nToggleButton.prototype.select = function select() {\n    this.selected = true;\n    this.arbiter.show(this.onSurface, this.options.inTransition);\n//        this.arbiter.setMode(ToggleButton.ON, this.options.inTransition);\n    this._eventOutput.emit('select');\n};\n\n/**\n * Transition towards the 'off' state and dispatch an event to\n *  listeners to announce it was deselected\n *\n * @method deselect\n */\nToggleButton.prototype.deselect = function deselect() {\n    this.selected = false;\n    this.arbiter.show(this.offSurface, this.options.outTransition);\n    this._eventOutput.emit('deselect');\n};\n\n/**\n * Return the state of the button\n *\n * @method isSelected\n *\n * @return {boolean} selected state\n */\nToggleButton.prototype.isSelected = function isSelected() {\n    return this.selected;\n};\n\n/**\n * Override the current options\n *\n * @method setOptions\n *\n * @param {object} options JSON\n */\nToggleButton.prototype.setOptions = function setOptions(options) {\n    if (options.content !== undefined) {\n        this.options.content = options.content;\n        this.offSurface.setContent(this.options.content);\n        this.onSurface.setContent(this.options.content);\n    }\n    if (options.offClasses) {\n        this.options.offClasses = options.offClasses;\n        this.offSurface.setClasses(this.options.offClasses);\n    }\n    if (options.onClasses) {\n        this.options.onClasses = options.onClasses;\n        this.onSurface.setClasses(this.options.onClasses);\n    }\n    if (options.size !== undefined) {\n        this.options.size = options.size;\n        this.onSurface.setSize(this.options.size);\n        this.offSurface.setSize(this.options.size);\n    }\n    if (options.toggleMode !== undefined) this.options.toggleMode = options.toggleMode;\n    if (options.outTransition !== undefined) this.options.outTransition = options.outTransition;\n    if (options.inTransition !== undefined) this.options.inTransition = options.inTransition;\n    if (options.crossfade !== undefined) {\n        this.options.crossfade = options.crossfade;\n        this.arbiter.setOptions({overlap: this.options.crossfade});\n    }\n};\n\n/**\n * Return the size defined in the options object\n *\n * @method getSize\n *\n * @return {array} two element array [height, width]\n */\nToggleButton.prototype.getSize = function getSize() {\n    return this.options.size;\n};\n\n/**\n * Generate a render spec from the contents of this component.\n *\n * @private\n * @method render\n * @return {number} Render spec for this component\n */\nToggleButton.prototype.render = function render() {\n    return this.arbiter.render();\n};\n\nmodule.exports = ToggleButton;\n},{\"../core/EventHandler\":7,\"../core/Surface\":14,\"../views/RenderController\":106}],116:[function(require,module,exports){\nmodule.exports = {\n  NavigationBar: require('./NavigationBar'),\n  Slider: require('./Slider'),\n  TabBar: require('./TabBar'),\n  ToggleButton: require('./ToggleButton')\n};\n\n},{\"./NavigationBar\":112,\"./Slider\":113,\"./TabBar\":114,\"./ToggleButton\":115}]},{},[23])(23)\n});","famous = window.famous;\n"]}